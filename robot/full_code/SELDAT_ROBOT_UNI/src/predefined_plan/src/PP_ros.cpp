/* iPath: A C++ Library of Intelligent Global Path Planners for Mobile Robots with ROS Integration.
 * Website: http://www.iroboapp.org/index.php?title=IPath
 * Contact:
 *
 * Copyright (c) 2014
 * Owners: Al-Imam University/King AbdulAziz Center for Science and Technology (KACST)/Prince Sultan University
 * All rights reserved.
 *
 * License Type: GNU GPL
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <string>

#include "PP_ros.h"

#include <pluginlib/class_list_macros.h>

#include <math.h>
#include <algorithm>

#include <geometry_msgs/Vector3.h>
#include <std_msgs/Int32.h>
#include <std_msgs/Float32MultiArray.h>

//register this planner as a BaseGlobalPlanner plugin
PLUGINLIB_EXPORT_CLASS(PP_planner::PP_PlannerROS, nav_core::BaseGlobalPlanner)

#define PI 3.141592653589

#define To_D1 1
#define To_D2 2
#define To_P1 3
#define To_P2 4
#define To_C1 5
#define To_S1 6
#define To_S2 7

#define From_D1 1
#define From_D2 2
#define From_P1 3
#define From_P2 4
#define From_C1 5
#define From_S1 6
#define From_S2 7

//Roads
//////////////////////////////////////////////////////////////////////////////////////////////////
float D1_S2 [144][4] = {
		  {-9.87,-1.74,-0.00283857072025011,0.999995971250018},
		  {-9.77000161149675,-1.74056771185687,-0.00283857072025011,0.999995971250018},
		  {-9.67000322299349,-1.74113542371374,-0.00283857072025011,0.999995971250018},
		  {-9.57000483449024,-1.74170313557061,-0.00283857072025011,0.999995971250018},
		  {-9.47000644598699,-1.74227084742749,-0.00283857072025011,0.999995971250018},
		  {-9.37000805748373,-1.74283855928436,-0.00283857072025011,0.999995971250018},
		  {-9.27000966898048,-1.74340627114123,-0.00283857072025011,0.999995971250018},
		  {-9.17001128047723,-1.7439739829981,-0.00283857072025011,0.999995971250018},
		  {-9.07001289197397,-1.74454169485497,-0.00283857072025011,0.999995971250018},
		  {-8.97001450347072,-1.74510940671184,-0.00283857072025011,0.999995971250018},
		  {-8.87001611496747,-1.74567711856872,-0.00283857072025011,0.999995971250018},
		  {-8.77001772646421,-1.74624483042559,-0.00283857072025011,0.999995971250018},
		  {-8.67001933796096,-1.74681254228246,-0.00283857072025011,0.999995971250018},
		  {-8.5700209494577,-1.74738025413933,-0.00283857072025011,0.999995971250018},
		  {-8.47002256095445,-1.7479479659962,-0.00283857072025011,0.999995971250018},
		  {-8.3700241724512,-1.74851567785307,-0.00283857072025011,0.999995971250018},
		  {-8.27002578394795,-1.74908338970995,-0.00283857072025011,0.999995971250018},
		  {-8.17002739544469,-1.74965110156682,-0.00283857072025011,0.999995971250018},
		  {-8.07002900694144,-1.75021881342369,-0.00283857072025011,0.999995971250018},
		  {-7.97003061843818,-1.75078652528056,-0.00283857072025011,0.999995971250018},
		  {-7.87003222993493,-1.75135423713743,-0.00283857072025011,0.999995971250018},
		  {-7.77003384143168,-1.7519219489943,-0.00283857072025011,0.999995971250018},
		  {-7.67003545292842,-1.75248966085118,-0.00283857072025011,0.999995971250018},
		  {-7.57003706442517,-1.75305737270805,-0.00283857072025011,0.999995971250018},
		  {-7.47003867592192,-1.75362508456492,-0.00283857072025011,0.999995971250018},
		  {-7.37004028741866,-1.75419279642179,-0.00283857072025011,0.999995971250018},
		  {-7.27004189891541,-1.75476050827866,-0.00283857072025011,0.999995971250018},
		  {-7.17004351041216,-1.75532822013553,-0.00283857072025011,0.999995971250018},
		  {-7.0700451219089,-1.75589593199241,-0.00283857072025011,0.999995971250018},
		  {-6.97004673340565,-1.75646364384928,-0.00283857072025011,0.999995971250018},
		  {-6.8700483449024,-1.75703135570615,-0.00283857072025011,0.999995971250018},
		  {-6.77004995639914,-1.75759906756302,-0.00283857072025011,0.999995971250018},
		  {-6.67005156789589,-1.75816677941989,-0.00283857072025011,0.999995971250018},
		  {-6.57005317939264,-1.75873449127676,-0.00283857072025011,0.999995971250018},
		  {-6.47005479088938,-1.75930220313363,-0.00283857072025011,0.999995971250018},
		  {-6.37005640238613,-1.75986991499051,-0.00283857072025011,0.999995971250018},
		  {-6.27005801388288,-1.76043762684738,-0.00283857072025011,0.999995971250018},
		  {-6.17005962537962,-1.76100533870425,-0.00283857072025011,0.999995971250018},
		  {-6.07006123687637,-1.76157305056112,-0.00283857072025011,0.999995971250018},
		  {-5.97006284837312,-1.76214076241799,-0.00283857072025011,0.999995971250018},
		  {-5.87006445986986,-1.76270847427486,-0.00283857072025011,0.999995971250018},
		  {-5.77006607136661,-1.76327618613174,-0.00283857072025011,0.999995971250018},
		  {-5.67006768286335,-1.76384389798861,-0.00283857072025011,0.999995971250018},
		  {-5.5700692943601,-1.76441160984548,-0.00283857072025011,0.999995971250018},
		  {-5.47007090585685,-1.76497932170235,-0.00283857072025011,0.999995971250018},
		  {-5.37007251735359,-1.76554703355922,-0.00283857072025011,0.999995971250018},
		  {-5.27007412885034,-1.76611474541609,-0.00283857072025011,0.999995971250018},
		  {-5.17007574034709,-1.76668245727297,-0.00283857072025011,0.999995971250018},
		  {-5.07007735184383,-1.76725016912984,-0.00283857072025011,0.999995971250018},
		  {-4.97007896334058,-1.76781788098671,-0.00283857072025011,0.999995971250018},
		  {-4.87008057483733,-1.76838559284358,-0.00283857072025011,0.999995971250018},
		  {-4.77008218633407,-1.76895330470045,-0.00283857072025011,0.999995971250018},
		  {-4.67008379783082,-1.76952101655732,-0.00283857072025011,0.999995971250018},
		  {-4.57008540932757,-1.7700887284142,-0.00283857072025011,0.999995971250018},
		  {-4.47008702082431,-1.77065644027107,-0.00283857072025011,0.999995971250018},
		  {-4.37008863232106,-1.77122415212794,-0.00283857072025011,0.999995971250018},
		  {-4.27009024381781,-1.77179186398481,-0.00283857072025011,0.999995971250018},
		  {-4.17009185531455,-1.77235957584168,-0.00283857072025011,0.999995971250018},
		  {-4.0700934668113,-1.77292728769855,-0.00283857072025011,0.999995971250018},
		  {-3.97009507830805,-1.77349499955543,-0.00283857072025011,0.999995971250018},
		  {-3.87009668980479,-1.7740627114123,-0.00283857072025011,0.999995971250018},
		  {-3.77009830130154,-1.77463042326917,-0.00283857072025011,0.999995971250018},
		  {-3.67009991279829,-1.77519813512604,-0.00283857072025011,0.999995971250018},
		  {-3.57010152429503,-1.77576584698291,-0.00283857072025011,0.999995971250018},
		  {-3.47010313579178,-1.77633355883978,-0.00283857072025011,0.999995971250018},
		  {-3.37010474728852,-1.77690127069665,-0.00283857072025011,0.999995971250018},
		  {-3.27010635878527,-1.77746898255353,-0.00283857072025011,0.999995971250018},
		  {-3.17010797028202,-1.7780366944104,-0.00283857072025011,0.999995971250018},
		  {-3.07010958177877,-1.77860440626727,-0.00283857072025011,0.999995971250018},
		  {-2.97011119327551,-1.77917211812414,-0.00283857072025011,0.999995971250018},
		  {-2.87011280477226,-1.77973982998101,-0.00283857072025011,0.999995971250018},
		  {-2.77011441626901,-1.78030754183788,-0.00283857072025011,0.999995971250018},
		  {-2.67011602776575,-1.78087525369476,-0.00283857072025011,0.999995971250018},
		  {-2.5701176392625,-1.78144296555163,-0.00283857072025011,0.999995971250018},
		  {-2.47011925075925,-1.7820106774085,-0.00283857072025011,0.999995971250018},
		  {-2.37012086225599,-1.78257838926537,-0.00283857072025011,0.999995971250018},
		  {-2.27012247375274,-1.78314610112224,-0.00283857072025011,0.999995971250018},
		  {-2.17012408524949,-1.78371381297911,-0.00283857072025011,0.999995971250018},
		  {-2.07012569674623,-1.78428152483599,-0.00283857072025011,0.999995971250018},
		  {-1.97012730824298,-1.78484923669286,-0.00283857072025011,0.999995971250018},
		  {-1.87012891973973,-1.78541694854973,-0.00283857072025011,0.999995971250018},
		  {-1.77013053123647,-1.7859846604066,-0.00283857072025011,0.999995971250018},
		  {-1.67013214273322,-1.78655237226347,-0.00283857072025011,0.999995971250018},
		  {-1.57013375422997,-1.78712008412034,-0.00283857072025011,0.999995971250018},
		  {-1.47013536572672,-1.78768779597722,-0.00283857072025011,0.999995971250018},
		  {-1.37013697722346,-1.78825550783409,-0.00283857072025011,0.999995971250018},
		  {-1.27013858872021,-1.78882321969096,-0.00283857072025011,0.999995971250018},
		  {-1.17014020021696,-1.78939093154783,-0.00283857072025011,0.999995971250018},
		  {-1.0701418117137,-1.7899586434047,-0.00283857072025011,0.999995971250018},
		  {-0.970143423210449,-1.79052635526157,-0.00283857072025011,0.999995971250018},
		  {-0.870145034707196,-1.79109406711844,-0.00283857072025011,0.999995971250018},
		  {-0.770146646203942,-1.79166177897532,-0.00283857072025011,0.999995971250018},
		  {-0.670148257700689,-1.79222949083219,-0.00283857072025011,0.999995971250018},
		  {-0.570149869197436,-1.79279720268906,-0.00283857072025011,0.999995971250018},
		  {-0.470151480694183,-1.79336491454593,-0.00283857072025011,0.999995971250018},
		  {-0.370153092190929,-1.7939326264028,-0.00283857072025011,0.999995971250018},
		  {-0.270154703687676,-1.79450033825967,-0.00283857072025011,0.999995971250018},
		  {-0.170156315184423,-1.79506805011655,-0.00283857072025011,0.999995971250018},
		  {-0.0701579266811697,-1.79563576197342,-0.00283857072025011,0.999995971250018},
		  {0.0298404618220835,-1.79620347383029,-0.00283857072025011,0.999995971250018},
		  {0.129838850325337,-1.79677118568716,-0.00283857072025011,0.999995971250018},
		  {0.22983723882859,-1.79733889754403,-0.00283857072025011,0.999995971250018},
		  {0.329835627331843,-1.7979066094009,-0.00283857072025011,0.999995971250018},
		  {0.429834015835097,-1.79847432125778,-0.00283857072025011,0.999995971250018},
		  {0.52983240433835,-1.79904203311465,-0.00283857072025011,0.999995971250018},
		  {0.629830792841603,-1.79960974497152,-0.00283857072025011,0.999995971250018},
		  {0.729829181344856,-1.80017745682839,-0.00283857072025011,0.999995971250018},
		  {0.829827569848109,-1.80074516868526,-0.00283857072025011,0.999995971250018},
		  {0.929825958351363,-1.80131288054213,-0.00283857072025011,0.999995971250018},
		  {1.02982434685462,-1.80188059239901,-0.00283857072025011,0.999995971250018},
		  {1.12982273535787,-1.80244830425588,-0.00283857072025011,0.999995971250018},
		  {1.22982112386112,-1.80301601611275,-0.00283857072025011,0.999995971250018},
		  {1.32981951236438,-1.80358372796962,-0.00283857072025011,0.999995971250018},
		  {1.42981790086763,-1.80415143982649,-0.00283857072025011,0.999995971250018},
		  {1.52981628937088,-1.80471915168336,-0.00283857072025011,0.999995971250018},
		  {1.62981467787414,-1.80528686354024,-0.00283857072025011,0.999995971250018},
		  {1.72981306637739,-1.80585457539711,-0.00283857072025011,0.999995971250018},
		  {1.82981145488064,-1.80642228725398,-0.00283857072025011,0.999995971250018},
		  {1.92980984338389,-1.80698999911085,-0.00283857072025011,0.999995971250018},
		  {2.02980823188715,-1.80755771096772,-0.00283857072025011,0.999995971250018},
		  {2.1298066203904,-1.80812542282459,-0.00283857072025011,0.999995971250018},
		  {2.22980500889365,-1.80869313468146,-0.00283857072025011,0.999995971250018},
		  {2.32980339739691,-1.80926084653834,-0.00283857072025011,0.999995971250018},
		  {2.42980178590016,-1.80982855839521,-0.00283857072025011,0.999995971250018},
			{2.46,-1.81,0,1},
			{2.75960153598362,-1.76454297453406,0.0257702676347019,0.999667891504992},
			{3.05602170796731,-1.71833603088743,0.07724234607514,0.997012346951034},
			{3.34611293374355,-1.64186982444538,0.128509235879234,0.991708312102775},
			{3.62679483597265,-1.5359563231292,0.179434750308194,0.983769876740407},
			{3.89508695163311,-1.40172018539261,0.229883609461915,0.973218128736185},
			{4.14814038051676,-1.24058681786674,0.279721799640132,0.960081098036039},
			{4.38326803670441,-1.05426723946527,0.328816929339994,0.944393682200076},
			{4.59797318179207,-0.844739912672592,0.377038580944402,0.926197553699767},
			{4.78997593688345,-0.614229734942155,0.424258657166858,0.905541049218076},
			{4.95723749182717,-0.365184413288024,0.470351721332527,0.882479041246606},
			{5.09798175462915,-0.100248472939556,0.515195330591578,0.857072792320836},
			{5.21071421115279,0.177764823947744,0.55867036117965,0.829389792280686},
			{5.28,0.44,0.707106781186547,0.707106781186548},
			{5.25321884387144,0.749100125859675,0.679192113382459,0.733960539211114},
			{5.32231903680589,1.04103361714908,0.620349104759502,0.784325817644736},
			{5.43564489300224,1.31880555654787,0.557784522020901,0.829985799272442},
			{5.59048105085244,1.57576034677796,0.491873700167367,0.870666562516135},
			{5.78311753478096,1.80574118306581,0.42301204882659,0.906124056930137},
			{6.0089386486852,2.00323757421017,0.351612680127248,0.936145567299089}
};

float D2_S2 [150][4] = {
		  {-9.89,0.17,-0.217692937786947,0.976017307652732},
		  {-9.79947804303246,0.127505584993234,-0.217692937786947,0.976017307652732},
		  {-9.70895608606492,0.0850111699864683,-0.217692937786947,0.976017307652732},
		  {-9.61843412909739,0.0425167549797024,-0.217692937786947,0.976017307652732},
		  {-9.52791217212985,2.23399729365137E-05,-0.217692937786947,0.976017307652732},
		  {-9.43739021516231,-0.0424720750338294,-0.217692937786947,0.976017307652732},
		  {-9.34686825819477,-0.0849664900405952,-0.217692937786947,0.976017307652732},
		  {-9.25634630122723,-0.127460905047361,-0.217692937786947,0.976017307652732},
		  {-9.1658243442597,-0.169955320054127,-0.217692937786947,0.976017307652732},
		  {-9.07530238729216,-0.212449735060893,-0.217692937786947,0.976017307652732},
		  {-8.98478043032462,-0.254944150067659,-0.217692937786947,0.976017307652732},
		  {-8.89425847335708,-0.297438565074425,-0.217692937786947,0.976017307652732},
		  {-8.80373651638954,-0.33993298008119,-0.217692937786947,0.976017307652732},
		  {-8.713214559422,-0.382427395087956,-0.217692937786947,0.976017307652732},
		  {-8.62269260245447,-0.424921810094722,-0.217692937786947,0.976017307652732},
		  {-8.53217064548693,-0.467416225101488,-0.217692937786947,0.976017307652732},
		  {-8.44164868851939,-0.509910640108254,-0.217692937786947,0.976017307652732},
		  {-8.35112673155185,-0.55240505511502,-0.217692937786947,0.976017307652732},
		  {-8.26060477458431,-0.594899470121786,-0.217692937786947,0.976017307652732},
		  {-8.17008281761678,-0.637393885128552,-0.217692937786947,0.976017307652732},
		  {-8.07956086064924,-0.679888300135317,-0.217692937786947,0.976017307652732},
		  {-7.9890389036817,-0.722382715142083,-0.217692937786947,0.976017307652732},
		  {-7.89851694671416,-0.764877130148849,-0.217692937786947,0.976017307652732},
		  {-7.80799498974662,-0.807371545155615,-0.217692937786947,0.976017307652732},
		  {-7.71747303277909,-0.849865960162381,-0.217692937786947,0.976017307652732},
		  {-7.62695107581155,-0.892360375169147,-0.217692937786947,0.976017307652732},
		  {-7.53642911884401,-0.934854790175912,-0.217692937786947,0.976017307652732},
		  {-7.44590716187647,-0.977349205182678,-0.217692937786947,0.976017307652732},
		  {-7.35538520490893,-1.01984362018944,-0.217692937786947,0.976017307652732},
		  {-7.26486324794139,-1.06233803519621,-0.217692937786947,0.976017307652732},
		  {-7.17434129097386,-1.10483245020298,-0.217692937786947,0.976017307652732},
		  {-7.08381933400632,-1.14732686520974,-0.217692937786947,0.976017307652732},
		  {-6.99329737703878,-1.18982128021651,-0.217692937786947,0.976017307652732},
		  {-6.90277542007124,-1.23231569522327,-0.217692937786947,0.976017307652732},
		  {-6.8122534631037,-1.27481011023004,-0.217692937786947,0.976017307652732},
		  {-6.72173150613617,-1.3173045252368,-0.217692937786947,0.976017307652732},
		  {-6.63120954916863,-1.35979894024357,-0.217692937786947,0.976017307652732},
		  {-6.54068759220109,-1.40229335525034,-0.217692937786947,0.976017307652732},
		  {-6.45016563523355,-1.4447877702571,-0.217692937786947,0.976017307652732},
		  {-6.35964367826601,-1.48728218526387,-0.217692937786947,0.976017307652732},
		  {-6.26912172129848,-1.52977660027063,-0.217692937786947,0.976017307652732},
		  {-6.17859976433094,-1.5722710152774,-0.217692937786947,0.976017307652732},
		  {-6.0880778073634,-1.61476543028417,-0.217692937786947,0.976017307652732},
		  {-5.99755585039586,-1.65725984529093,-0.217692937786947,0.976017307652732},
		  {-5.90703389342833,-1.6997542602977,-0.217692937786947,0.976017307652732},
		  {-5.81651193646079,-1.74224867530446,-0.217692937786947,0.976017307652732},
		  {-5.8,-1.75,0,1},
			{-5.77,-2,-0.00181817280248121,0.999998347122464},
			{-5.67000066115047,-2,-0.00181817280248121,0.999998347122464},
		  {-5.57000132230094,-2,-0.00181817280248121,0.999998347122464},
		  {-5.4700019834514,-2,-0.00181817280248121,0.999998347122464},
		  {-5.37000264460187,-2,-0.00181817280248121,0.999998347122464},
		  {-5.27000330575234,-2,-0.00181817280248121,0.999998347122464},
		  {-5.17000396690281,-2,-0.00181817280248121,0.999998347122464},
		  {-5.07000462805328,-2,-0.00181817280248121,0.999998347122464},
		  {-4.97000528920375,-2,-0.00181817280248121,0.999998347122464},
		  {-4.87000595035421,-2,-0.00181817280248121,0.999998347122464},
		  {-4.77000661150468,-2,-0.00181817280248121,0.999998347122464},
		  {-4.67000727265515,-2,-0.00181817280248121,0.999998347122464},
		  {-4.57000793380562,-2,-0.00181817280248121,0.999998347122464},
		  {-4.47000859495609,-2,-0.00181817280248121,0.999998347122464},
		  {-4.37000925610655,-2,-0.00181817280248121,0.999998347122464},
		  {-4.27000991725702,-2,-0.00181817280248121,0.999998347122464},
		  {-4.17001057840749,-2,-0.00181817280248121,0.999998347122464},
		  {-4.07001123955796,-2,-0.00181817280248121,0.999998347122464},
		  {-3.97001190070843,-2,-0.00181817280248121,0.999998347122464},
		  {-3.87001256185889,-2,-0.00181817280248121,0.999998347122464},
		  {-3.77001322300936,-2,-0.00181817280248121,0.999998347122464},
		  {-3.67001388415983,-2,-0.00181817280248121,0.999998347122464},
		  {-3.5700145453103,-2,-0.00181817280248121,0.999998347122464},
		  {-3.47001520646077,-2,-0.00181817280248121,0.999998347122464},
		  {-3.37001586761123,-2,-0.00181817280248121,0.999998347122464},
		  {-3.2700165287617,-2,-0.00181817280248121,0.999998347122464},
		  {-3.17001718991217,-2,-0.00181817280248121,0.999998347122464},
		  {-3.07001785106264,-2,-0.00181817280248121,0.999998347122464},
		  {-2.97001851221311,-2,-0.00181817280248121,0.999998347122464},
		  {-2.87001917336357,-2,-0.00181817280248121,0.999998347122464},
		  {-2.77001983451404,-2,-0.00181817280248121,0.999998347122464},
		  {-2.67002049566451,-2,-0.00181817280248121,0.999998347122464},
		  {-2.57002115681498,-2,-0.00181817280248121,0.999998347122464},
		  {-2.47002181796545,-2,-0.00181817280248121,0.999998347122464},
		  {-2.37002247911591,-2,-0.00181817280248121,0.999998347122464},
		  {-2.27002314026638,-2,-0.00181817280248121,0.999998347122464},
		  {-2.17002380141685,-2,-0.00181817280248121,0.999998347122464},
		  {-2.07002446256732,-2,-0.00181817280248121,0.999998347122464},
		  {-1.97002512371779,-2,-0.00181817280248121,0.999998347122464},
		  {-1.87002578486825,-2,-0.00181817280248121,0.999998347122464},
		  {-1.77002644601872,-2,-0.00181817280248121,0.999998347122464},
		  {-1.67002710716919,-2,-0.00181817280248121,0.999998347122464},
		  {-1.57002776831966,-2,-0.00181817280248121,0.999998347122464},
		  {-1.47002842947013,-2,-0.00181817280248121,0.999998347122464},
		  {-1.37002909062059,-2,-0.00181817280248121,0.999998347122464},
		  {-1.27002975177106,-2,-0.00181817280248121,0.999998347122464},
		  {-1.17003041292153,-2,-0.00181817280248121,0.999998347122464},
		  {-1.070031074072,-2,-0.00181817280248121,0.999998347122464},
		  {-0.970031735222466,-2,-0.00181817280248121,0.999998347122464},
		  {-0.870032396372934,-2,-0.00181817280248121,0.999998347122464},
		  {-0.770033057523402,-2,-0.00181817280248121,0.999998347122464},
		  {-0.67003371867387,-2,-0.00181817280248121,0.999998347122464},
		  {-0.570034379824338,-2,-0.00181817280248121,0.999998347122464},
		  {-0.470035040974806,-2,-0.00181817280248121,0.999998347122464},
		  {-0.370035702125274,-2,-0.00181817280248121,0.999998347122464},
		  {-0.270036363275742,-2,-0.00181817280248121,0.999998347122464},
		  {-0.17003702442621,-2,-0.00181817280248121,0.999998347122464},
		  {-0.0700376855766775,-2,-0.00181817280248121,0.999998347122464},
		  {0.0299616532728545,-2,-0.00181817280248121,0.999998347122464},
		  {0.129960992122387,-2,-0.00181817280248121,0.999998347122464},
		  {0.229960330971919,-2,-0.00181817280248121,0.999998347122464},
		  {0.329959669821451,-2,-0.00181817280248121,0.999998347122464},
		  {0.429959008670983,-2,-0.00181817280248121,0.999998347122464},
		  {0.529958347520515,-2,-0.00181817280248121,0.999998347122464},
		  {0.629957686370047,-2,-0.00181817280248121,0.999998347122464},
		  {0.729957025219579,-2,-0.00181817280248121,0.999998347122464},
		  {0.829956364069111,-2,-0.00181817280248121,0.999998347122464},
		  {0.929955702918643,-2,-0.00181817280248121,0.999998347122464},
		  {1.02995504176818,-2,-0.00181817280248121,0.999998347122464},
		  {1.12995438061771,-2,-0.00181817280248121,0.999998347122464},
		  {1.22995371946724,-2,-0.00181817280248121,0.999998347122464},
		  {1.32995305831677,-2,-0.00181817280248121,0.999998347122464},
		  {1.4299523971663,-2,-0.00181817280248121,0.999998347122464},
		  {1.52995173601584,-2,-0.00181817280248121,0.999998347122464},
		  {1.62995107486537,-2,-0.00181817280248121,0.999998347122464},
		  {1.7299504137149,-2,-0.00181817280248121,0.999998347122464},
		  {1.82994975256443,-2,-0.00181817280248121,0.999998347122464},
		  {1.92994909141396,-2,-0.00181817280248121,0.999998347122464},
		  {2.0299484302635,-2,-0.00181817280248121,0.999998347122464},
		  {2.12994776911303,-2,-0.00181817280248121,0.999998347122464},
		  {2.22994710796256,-2,-0.00181817280248121,0.999998347122464},
		  {2.32994644681209,-2,-0.00181817280248121,0.999998347122464},
		  {2.42994578566162,-2,-0.00181817280248121,0.999998347122464},
			{2.46,-1.81,0,1},
			{2.75960153598362,-1.76454297453406,0.0257702676347019,0.999667891504992},
			{3.05602170796731,-1.71833603088743,0.07724234607514,0.997012346951034},
			{3.34611293374355,-1.64186982444538,0.128509235879234,0.991708312102775},
			{3.62679483597265,-1.5359563231292,0.179434750308194,0.983769876740407},
			{3.89508695163311,-1.40172018539261,0.229883609461915,0.973218128736185},
			{4.14814038051676,-1.24058681786674,0.279721799640132,0.960081098036039},
			{4.38326803670441,-1.05426723946527,0.328816929339994,0.944393682200076},
			{4.59797318179207,-0.844739912672592,0.377038580944402,0.926197553699767},
			{4.78997593688345,-0.614229734942155,0.424258657166858,0.905541049218076},
			{4.95723749182717,-0.365184413288024,0.470351721332527,0.882479041246606},
			{5.09798175462915,-0.100248472939556,0.515195330591578,0.857072792320836},
			{5.21071421115279,0.177764823947744,0.55867036117965,0.829389792280686},
			{5.28,0.44,0.707106781186547,0.707106781186548},
			{5.25321884387144,0.749100125859675,0.679192113382459,0.733960539211114},
			{5.32231903680589,1.04103361714908,0.620349104759502,0.784325817644736},
			{5.43564489300224,1.31880555654787,0.557784522020901,0.829985799272442},
			{5.59048105085244,1.57576034677796,0.491873700167367,0.870666562516135},
			{5.78311753478096,1.80574118306581,0.42301204882659,0.906124056930137},
			{6.0089386486852,2.00323757421017,0.351612680127248,0.936145567299089}
};

float S2_P1 [23][4] = {
			{6.2625335710319,2.16351737755411,0.27810393037286,0.960550989750761},
			{6.53782600167872,2.28274018421695,0.202926790383372,0.979193912228167},
			{6.8282197539984,2.35804933780198,0.12653225992025,0.991962492839056},
			{7.12675680382302,2.38764038175142,0.0493786420663333,0.998780130813426},
		  {7.42628400825223,2.37080429530532,-0.0280712062081151,0.999605926043869},
		  {7.71962449963402,2.30794448210253,-0.105352650798868,0.994434924451898},
		  {7.99974964800592,2.20056710436577,-0.182002067882496,0.98329814770826},
		  {8.25994747166429,2.05124499427002,-0.257559625270305,0.966262407128944},
		  {8.49398346063433,1.86355600720148,-0.33157204101563,0.943429902863339},
		  {8.69624995960522,1.64199729400325,-0.403595302725191,0.914937610779097},
		  {8.86190053101776,1.39187754630088,-0.473197331260893,0.88095646072185},
		  {8.9869660788769,1.11918979678012,-0.539960572852112,0.841690311079567},
		  {9.0684499508868,0.830467822205488,-0.603484504067968,0.797374725803269},
		  {9.10439974019914,0.532629589857124,-0.663388034621842,0.748275561220978},
		  {9.09395406635766,0.232811498511725,-0.719311793593335,0.694687371122823},
		  {9.0373632145371,-0.0618026143379864,-0.770920285352261,0.636931639685445},
		  {8.93598313854673,-0.344153601926462,-0.817903902250918,0.575354852836682},
		  {8.7922429712906,-0.607476149987164,-0.859980782010201,0.510326419630733},
		  {8.60958682115494,-0.845460878105628,-0.896898498656769,0.442236456103783},
		  {8.39239124891943,-1.05240551659933,-0.928435576867089,0.371493444905122},
		  {8.14586040249947,-1.22335153662746,-0.954402820633542,0.298521784743993},
		  {7.87590132215964,-1.35420295978393,-0.974644448281721,0.223759244353433},
		  {7.72,-1.46,1,6.12303176911189E-17}
};

float S2_P2 [16][4] = {
			{6.2625335710319,2.16351737755411,0.27810393037286,0.960550989750761},
			{6.53782600167872,2.28274018421695,0.202926790383372,0.979193912228167},
			{6.8282197539984,2.35804933780198,0.12653225992025,0.991962492839056},
			{7.12675680382302,2.38764038175142,0.0493786420663333,0.998780130813426},
			{7.46808506375547,2.3381477198232,-0.02670392562011,0.999643386591676},
			{7.64,2.31,0,1},
			{7.91602556587852,2.26132901946434,-0.0813883091674403,0.996682468557998},
			{8.18088471359687,2.12044029787916,-0.242008444348689,0.970274143149207},
			{8.38669231462964,1.90216700277154,-0.396216268737232,0.91815721332893},
			{8.51178035616417,1.62948957087617,-0.539925856739408,0.841712581125064},
			{8.54297921145647,1.33111626203563,-0.66932944642095,0.742965740901843},
			{8.47700417579775,1.0384606715033,-0.780998330833377,0.624533111400411},
			{8.32080128961994,0.782334416797298,-0.871973705813246,0.489552710512683},
			{8.09081603949442,0.589703202492087,-0.939845067130325,0.341601009645455},
			{7.81126193027442,0.480847793723331,-0.982814079756016,0.184598170720445},
		  {7.72,0.45,1,0}
};

float P1_C1 [25][4] = {
		  {11.3711233252549,-1.51593710263964,-0.999063457064543,0.0432690277016169},
		  {11.0811828411634,-1.5929729104484,-0.991581635647115,0.129483048494356},
		  {10.8088475529135,-1.71880410997331,-0.9766740229386,0.214727392097355},
		  {10.5622600834102,-1.88966844178052,-0.954452259591307,0.298363677683876},
		  {10.3487932148957,-2.10045718921888,-0.925082760725087,0.379765566908391},
		  {10.1748294482357,-2.34486792525449,-0.888785469671949,0.458323454451126},
		  {10.0455701708821,-2.61559295035931,-0.845832210856734,0.533449033251735},
		  {9.9648801392502,-2.90453778730098,-0.796544654148837,0.604579700243821},
		  {9.93517192537213,-3.20306320000177,-0.741291905929624,0.671182769596498},
		  {9.95733378278392,-3.50224350028249,-0.680487744915625,0.732759461910692},
		  {10.0307030884045,-3.79313341931158,-0.614587523437993,0.788848639495787},
		  {10,-3.95,-0.719339800338651,0.694658370458997},
		  {10.0143384075621,-4.23890045612804,-0.736728797272002,0.676188346002909},
		  {9.94827729174326,-4.53153662781017,-0.781090173858336,0.62441824148719},
		  {9.84304345352284,-4.81247405730897,-0.821820984380039,0.569745793870058},
		  {9.70059115864679,-5.07649554068589,-0.858731908956498,0.512425124813303},
		  {9.52356584555034,-5.31869801491583,-0.891651382825194,0.452722665111787},
		  {9.31525499772175,-5.53458361118602,-0.920426393787675,0.390915916303003},
		  {9.07952709284189,-5.72014318345582,-0.94492319342179,0.327292160818994},
		  {8.82075976245656,-5.87193076109394,-0.965027918754455,0.262147126675929},
		  {8.54375849630654,-5.98712754295561,-0.980647121505336,0.195783612907971},
		  {8.25366740103267,-6.06359424448515,-0.991708202441514,0.128510082134521},
		  {7.95587367052901,-6.09991082572171,-0.998159748824191,0.0606392268026842},
		  {7.65590754199618,-6.09540286243138,0.999971773378986,0.00751348423081616},
		  {7.48,-6.50,1,6.12303176911189E-17}
};

float P2_C1 [53][4] = {
		  {11.4110465963424,0.414962778877021,-0.999127455714534,0.0417651438091932},
		  {11.1204221998195,0.34054866633311,-0.992156234775975,0.125004023115899},
		  {10.8462237668216,0.218830880691638,-0.978262433261102,0.20737071073338},
		  {10.5960906173122,0.0532005467654315,-0.957542992515569,0.288290508834974},
		  {10.3769915991499,-0.151727782755663,-0.930142478478721,0.367198814989186},
		  {10.1950309321332,-0.390244691294375,-0.896252073002369,0.443545061565289},
		  {10.055278141062,-0.65570496588892,-0.856108239915952,0.516796557213775},
		  {9.99,-0.95,-0.707106781186547,0.707106781186548},
		  {10.01,-0.95,-0.702393101016683,0.71178924664831},
		  {10.0113287863288,-1.04999117124473,-0.702393101016683,0.71178924664831},
		  {10.0126575726577,-1.14998234248945,-0.702393101016683,0.71178924664831},
		  {10.0139863589865,-1.24997351373418,-0.702393101016683,0.71178924664831},
		  {10.0153151453153,-1.34996468497891,-0.702393101016683,0.71178924664831},
		  {10.0166439316442,-1.44995585622363,-0.702393101016683,0.71178924664831},
		  {10.017972717973,-1.54994702746836,-0.702393101016683,0.71178924664831},
		  {10.0193015043018,-1.64993819871309,-0.702393101016683,0.71178924664831},
		  {10.0206302906307,-1.74992936995782,-0.702393101016683,0.71178924664831},
		  {10.0219590769595,-1.84992054120254,-0.702393101016683,0.71178924664831},
		  {10.0232878632883,-1.94991171244727,-0.702393101016683,0.71178924664831},
		  {10.0246166496172,-2.049902883692,-0.702393101016683,0.71178924664831},
		  {10.025945435946,-2.14989405493672,-0.702393101016683,0.71178924664831},
		  {10.0272742222748,-2.24988522618145,-0.702393101016683,0.71178924664831},
		  {10.0286030086037,-2.34987639742618,-0.702393101016683,0.71178924664831},
		  {10.0299317949325,-2.4498675686709,-0.702393101016683,0.71178924664831},
		  {10.0312605812613,-2.54985873991563,-0.702393101016683,0.71178924664831},
		  {10.0325893675902,-2.64984991116036,-0.702393101016683,0.71178924664831},
		  {10.033918153919,-2.74984108240508,-0.702393101016683,0.71178924664831},
		  {10.0352469402478,-2.84983225364981,-0.702393101016683,0.71178924664831},
		  {10.0365757265767,-2.94982342489454,-0.702393101016683,0.71178924664831},
		  {10.0379045129055,-3.04981459613926,-0.702393101016683,0.71178924664831},
		  {10.0392332992343,-3.14980576738399,-0.702393101016683,0.71178924664831},
		  {10.0405620855632,-3.24979693862872,-0.702393101016683,0.71178924664831},
		  {10.041890871892,-3.34978810987345,-0.702393101016683,0.71178924664831},
		  {10.0432196582209,-3.44977928111817,-0.702393101016683,0.71178924664831},
		  {10.0445484445497,-3.5497704523629,-0.702393101016683,0.71178924664831},
		  {10.0458772308785,-3.64976162360763,-0.702393101016683,0.71178924664831},
		  {10.0472060172074,-3.74975279485235,-0.702393101016683,0.71178924664831},
		  {10.0485348035362,-3.84974396609708,-0.702393101016683,0.71178924664831},
		  {10.049863589865,-3.94973513734181,-0.702393101016683,0.71178924664831},
		  {10.05,-3.96,-0.707106781186547,0.707106781186548},
		  {10.0143384075621,-4.23890045612804,-0.736728797272002,0.676188346002909},
		  {9.94827729174326,-4.53153662781017,-0.781090173858336,0.62441824148719},
		  {9.84304345352284,-4.81247405730897,-0.821820984380039,0.569745793870058},
		  {9.70059115864679,-5.07649554068589,-0.858731908956498,0.512425124813303},
		  {9.52356584555034,-5.31869801491583,-0.891651382825194,0.452722665111787},
		  {9.31525499772175,-5.53458361118602,-0.920426393787675,0.390915916303003},
		  {9.07952709284189,-5.72014318345582,-0.94492319342179,0.327292160818994},
		  {8.82075976245656,-5.87193076109394,-0.965027918754455,0.262147126675929},
		  {8.54375849630654,-5.98712754295561,-0.980647121505336,0.195783612907971},
		  {8.25366740103267,-6.06359424448515,-0.991708202441514,0.128510082134521},
		  {7.95587367052901,-6.09991082572171,-0.998159748824191,0.0606392268026842},
		  {7.65590754199618,-6.09540286243138,0.999971773378986,0.00751348423081616},
		  {7.48,-6.50,1,6.12303176911189E-17}
};

float P1_S1 [185][4] = {
		  {11.3711233252549,-1.51593710263964,-0.999063457064543,0.0432690277016169},
		  {11.0811828411634,-1.5929729104484,-0.991581635647115,0.129483048494356},
		  {10.8088475529135,-1.71880410997331,-0.9766740229386,0.214727392097355},
		  {10.5622600834102,-1.88966844178052,-0.954452259591307,0.298363677683876},
		  {10.3487932148957,-2.10045718921888,-0.925082760725087,0.379765566908391},
		  {10.1748294482357,-2.34486792525449,-0.888785469671949,0.458323454451126},
		  {10.0455701708821,-2.61559295035931,-0.845832210856734,0.533449033251735},
		  {9.9648801392502,-2.90453778730098,-0.796544654148837,0.604579700243821},
		  {9.93517192537213,-3.20306320000177,-0.741291905929624,0.671182769596498},
		  {9.95733378278392,-3.50224350028249,-0.680487744915625,0.732759461910692},
		  {10.0307030884045,-3.79313341931158,-0.614587523437993,0.788848639495787},
		  {10,-3.95,-0.719339800338651,0.694658370458997},
		  {10.0143384075621,-4.23890045612804,-0.736728797272002,0.676188346002909},
		  {9.94827729174326,-4.53153662781017,-0.781090173858336,0.62441824148719},
		  {9.84304345352284,-4.81247405730897,-0.821820984380039,0.569745793870058},
		  {9.70059115864679,-5.07649554068589,-0.858731908956498,0.512425124813303},
		  {9.52356584555034,-5.31869801491583,-0.891651382825194,0.452722665111787},
		  {9.31525499772175,-5.53458361118602,-0.920426393787675,0.390915916303003},
		  {9.07952709284189,-5.72014318345582,-0.94492319342179,0.327292160818994},
		  {8.82075976245656,-5.87193076109394,-0.965027918754455,0.262147126675929},
		  {8.54375849630654,-5.98712754295561,-0.980647121505336,0.195783612907971},
		  {8.25366740103267,-6.06359424448515,-0.991708202441514,0.128510082134521},
		  {7.95587367052901,-6.09991082572171,-0.998159748824191,0.0606392268026842},
		  {7.65590754199618,-6.09540286243138,0.999971773378986,0.00751348423081616},
		  {7.48,-6.08,1,6.12303176911189E-17},
		  {7.51,-6.09,0.99996118252487,0.00881098425059706},
		  {7.41001552668869,-6.08823787155391,0.99996118252487,0.00881098425059706},
		  {7.31003105337739,-6.08647574310783,0.99996118252487,0.00881098425059706},
		  {7.21004658006608,-6.08471361466174,0.99996118252487,0.00881098425059706},
		  {7.11006210675477,-6.08295148621565,0.99996118252487,0.00881098425059706},
		  {7.01007763344347,-6.08118935776956,0.99996118252487,0.00881098425059706},
		  {6.91009316013216,-6.07942722932348,0.99996118252487,0.00881098425059706},
		  {6.81010868682085,-6.07766510087739,0.99996118252487,0.00881098425059706},
		  {6.71012421350955,-6.0759029724313,0.99996118252487,0.00881098425059706},
		  {6.61013974019824,-6.07414084398521,0.99996118252487,0.00881098425059706},
		  {6.51015526688693,-6.07237871553913,0.99996118252487,0.00881098425059706},
		  {6.41017079357563,-6.07061658709304,0.99996118252487,0.00881098425059706},
		  {6.31018632026432,-6.06885445864695,0.99996118252487,0.00881098425059706},
		  {6.21020184695301,-6.06709233020087,0.99996118252487,0.00881098425059706},
		  {6.11021737364171,-6.06533020175478,0.99996118252487,0.00881098425059706},
		  {6.0102329003304,-6.06356807330869,0.99996118252487,0.00881098425059706},
		  {5.91024842701909,-6.0618059448626,0.99996118252487,0.00881098425059706},
		  {5.81026395370778,-6.06004381641652,0.99996118252487,0.00881098425059706},
		  {5.71027948039648,-6.05828168797043,0.99996118252487,0.00881098425059706},
		  {5.61029500708517,-6.05651955952434,0.99996118252487,0.00881098425059706},
		  {5.51031053377386,-6.05475743107825,0.99996118252487,0.00881098425059706},
		  {5.41032606046256,-6.05299530263217,0.99996118252487,0.00881098425059706},
		  {5.31034158715125,-6.05123317418608,0.99996118252487,0.00881098425059706},
		  {5.21035711383994,-6.04947104573999,0.99996118252487,0.00881098425059706},
		  {5.11037264052863,-6.0477089172939,0.99996118252487,0.00881098425059706},
		  {5.01038816721733,-6.04594678884782,0.99996118252487,0.00881098425059706},
		  {4.91040369390602,-6.04418466040173,0.99996118252487,0.00881098425059706},
		  {4.81041922059471,-6.04242253195564,0.99996118252487,0.00881098425059706},
		  {4.71043474728341,-6.04066040350956,0.99996118252487,0.00881098425059706},
		  {4.6104502739721,-6.03889827506347,0.99996118252487,0.00881098425059706},
		  {4.51046580066079,-6.03713614661738,0.99996118252487,0.00881098425059706},
		  {4.41048132734948,-6.03537401817129,0.99996118252487,0.00881098425059706},
		  {4.31049685403818,-6.03361188972521,0.99996118252487,0.00881098425059706},
		  {4.21051238072687,-6.03184976127912,0.99996118252487,0.00881098425059706},
		  {4.11052790741556,-6.03008763283303,0.99996118252487,0.00881098425059706},
		  {4.01054343410426,-6.02832550438695,0.99996118252487,0.00881098425059706},
		  {3.91055896079295,-6.02656337594086,0.99996118252487,0.00881098425059706},
		  {3.81057448748164,-6.02480124749477,0.99996118252487,0.00881098425059706},
		  {3.71059001417033,-6.02303911904868,0.99996118252487,0.00881098425059706},
		  {3.61060554085903,-6.0212769906026,0.99996118252487,0.00881098425059706},
		  {3.51062106754772,-6.01951486215651,0.99996118252487,0.00881098425059706},
		  {3.41063659423641,-6.01775273371042,0.99996118252487,0.00881098425059706},
		  {3.3106521209251,-6.01599060526433,0.99996118252487,0.00881098425059706},
		  {3.2106676476138,-6.01422847681825,0.99996118252487,0.00881098425059706},
		  {3.11068317430249,-6.01246634837216,0.99996118252487,0.00881098425059706},
		  {3.01069870099118,-6.01070421992607,0.99996118252487,0.00881098425059706},
		  {2.91071422767988,-6.00894209147999,0.99996118252487,0.00881098425059706},
		  {2.81072975436857,-6.0071799630339,0.99996118252487,0.00881098425059706},
		  {2.71074528105726,-6.00541783458781,0.99996118252487,0.00881098425059706},
		  {2.61076080774595,-6.00365570614172,0.99996118252487,0.00881098425059706},
		  {2.51077633443465,-6.00189357769564,0.99996118252487,0.00881098425059706},
		  {2.41079186112334,-6.00013144924955,0.99996118252487,0.00881098425059706},
		  {2.31080738781203,-5.99836932080346,0.99996118252487,0.00881098425059706},
		  {2.21082291450073,-5.99660719235737,0.99996118252487,0.00881098425059706},
		  {2.11083844118942,-5.99484506391129,0.99996118252487,0.00881098425059706},
		  {2.01085396787811,-5.9930829354652,0.99996118252487,0.00881098425059706},
		  {1.9108694945668,-5.99132080701911,0.99996118252487,0.00881098425059706},
		  {1.8108850212555,-5.98955867857303,0.99996118252487,0.00881098425059706},
		  {1.71090054794419,-5.98779655012694,0.99996118252487,0.00881098425059706},
		  {1.61091607463288,-5.98603442168085,0.99996118252487,0.00881098425059706},
		  {1.51093160132158,-5.98427229323476,0.99996118252487,0.00881098425059706},
		  {1.41094712801027,-5.98251016478868,0.99996118252487,0.00881098425059706},
		  {1.31096265469896,-5.98074803634259,0.99996118252487,0.00881098425059706},
		  {1.21097818138765,-5.9789859078965,0.99996118252487,0.00881098425059706},
		  {1.11099370807635,-5.97722377945041,0.99996118252487,0.00881098425059706},
		  {1.01100923476504,-5.97546165100433,0.99996118252487,0.00881098425059706},
		  {0.911024761453732,-5.97369952255824,0.99996118252487,0.00881098425059706},
		  {0.811040288142425,-5.97193739411215,0.99996118252487,0.00881098425059706},
		  {0.711055814831118,-5.97017526566607,0.99996118252487,0.00881098425059706},
		  {0.611071341519811,-5.96841313721998,0.99996118252487,0.00881098425059706},
		  {0.511086868208504,-5.96665100877389,0.99996118252487,0.00881098425059706},
		  {0.411102394897197,-5.9648888803278,0.99996118252487,0.00881098425059706},
		  {0.311117921585889,-5.96312675188172,0.99996118252487,0.00881098425059706},
		  {0.211133448274582,-5.96136462343563,0.99996118252487,0.00881098425059706},
		  {0.111148974963275,-5.95960249498954,0.99996118252487,0.00881098425059706},
		  {0.0111645016519679,-5.95784036654345,0.99996118252487,0.00881098425059706},
		  {-0.0888199716593392,-5.95607823809737,0.99996118252487,0.00881098425059706},
		  {-0.188804444970646,-5.95431610965128,0.99996118252487,0.00881098425059706},
		  {-0.288788918281954,-5.95255398120519,0.99996118252487,0.00881098425059706},
		  {-0.388773391593261,-5.9507918527591,0.99996118252487,0.00881098425059706},
		  {-0.488757864904568,-5.94902972431302,0.99996118252487,0.00881098425059706},
		  {-0.588742338215875,-5.94726759586693,0.99996118252487,0.00881098425059706},
		  {-0.688726811527182,-5.94550546742084,0.99996118252487,0.00881098425059706},
		  {-0.788711284838489,-5.94374333897476,0.99996118252487,0.00881098425059706},
		  {-0.888695758149796,-5.94198121052867,0.99996118252487,0.00881098425059706},
		  {-0.988680231461104,-5.94021908208258,0.99996118252487,0.00881098425059706},
		  {-1.08866470477241,-5.93845695363649,0.99996118252487,0.00881098425059706},
		  {-1.18864917808372,-5.93669482519041,0.99996118252487,0.00881098425059706},
		  {-1.28863365139503,-5.93493269674432,0.99996118252487,0.00881098425059706},
		  {-1.38861812470633,-5.93317056829823,0.99996118252487,0.00881098425059706},
		  {-1.48860259801764,-5.93140843985215,0.99996118252487,0.00881098425059706},
		  {-1.58858707132895,-5.92964631140606,0.99996118252487,0.00881098425059706},
		  {-1.68857154464025,-5.92788418295997,0.99996118252487,0.00881098425059706},
		  {-1.78855601795156,-5.92612205451388,0.99996118252487,0.00881098425059706},
		  {-1.88854049126287,-5.9243599260678,0.99996118252487,0.00881098425059706},
		  {-1.98852496457418,-5.92259779762171,0.99996118252487,0.00881098425059706},
		  {-2.08850943788548,-5.92083566917562,0.99996118252487,0.00881098425059706},
		  {-2.18849391119679,-5.91907354072953,0.99996118252487,0.00881098425059706},
		  {-2.2884783845081,-5.91731141228345,0.99996118252487,0.00881098425059706},
		  {-2.3884628578194,-5.91554928383736,0.99996118252487,0.00881098425059706},
		  {-2.48844733113071,-5.91378715539127,0.99996118252487,0.00881098425059706},
		  {-2.58843180444202,-5.91202502694519,0.99996118252487,0.00881098425059706},
		  {-2.68841627775333,-5.9102628984991,0.99996118252487,0.00881098425059706},
		  {-2.78840075106463,-5.90850077005301,0.99996118252487,0.00881098425059706},
		  {-2.88838522437594,-5.90673864160692,0.99996118252487,0.00881098425059706},
		  {-2.98836969768725,-5.90497651316084,0.99996118252487,0.00881098425059706},
		  {-3.08835417099855,-5.90321438471475,0.99996118252487,0.00881098425059706},
		  {-3.18833864430986,-5.90145225626866,0.99996118252487,0.00881098425059706},
		  {-3.28832311762117,-5.89969012782257,0.99996118252487,0.00881098425059706},
		  {-3.38830759093248,-5.89792799937649,0.99996118252487,0.00881098425059706},
		  {-3.48829206424378,-5.8961658709304,0.99996118252487,0.00881098425059706},
		  {-3.58827653755509,-5.89440374248431,0.99996118252487,0.00881098425059706},
		  {-3.6882610108664,-5.89264161403823,0.99996118252487,0.00881098425059706},
		  {-3.7882454841777,-5.89087948559214,0.99996118252487,0.00881098425059706},
		  {-3.88822995748901,-5.88911735714605,0.99996118252487,0.00881098425059706},
		  {-3.98821443080032,-5.88735522869996,0.99996118252487,0.00881098425059706},
		  {-4.08819890411163,-5.88559310025388,0.99996118252487,0.00881098425059706},
		  {-4.18818337742293,-5.88383097180779,0.99996118252487,0.00881098425059706},
		  {-4.28816785073424,-5.8820688433617,0.99996118252487,0.00881098425059706},
		  {-4.38815232404555,-5.88030671491561,0.99996118252487,0.00881098425059706},
		  {-4.48813679735686,-5.87854458646953,0.99996118252487,0.00881098425059706},
		  {-4.58812127066816,-5.87678245802344,0.99996118252487,0.00881098425059706},
		  {-4.68810574397947,-5.87502032957735,0.99996118252487,0.00881098425059706},
		  {-4.78809021729078,-5.87325820113127,0.99996118252487,0.00881098425059706},
		  {-4.88807469060208,-5.87149607268518,0.99996118252487,0.00881098425059706},
		  {-4.98805916391339,-5.86973394423909,0.99996118252487,0.00881098425059706},
		  {-5.0880436372247,-5.867971815793,0.99996118252487,0.00881098425059706},
		  {-5.18802811053601,-5.86620968734692,0.99996118252487,0.00881098425059706},
		  {-5.28801258384731,-5.86444755890083,0.99996118252487,0.00881098425059706},
		  {-5.38799705715862,-5.86268543045474,0.99996118252487,0.00881098425059706},
		  {-5.48798153046993,-5.86092330200865,0.99996118252487,0.00881098425059706},
		  {-5.58796600378123,-5.85916117356257,0.99996118252487,0.00881098425059706},
		  {-5.68795047709254,-5.85739904511648,0.99996118252487,0.00881098425059706},
		  {-5.78793495040385,-5.85563691667039,0.99996118252487,0.00881098425059706},
		  {-5.88791942371516,-5.8538747882243,0.99996118252487,0.00881098425059706},
		  {-5.98790389702646,-5.85211265977822,0.99996118252487,0.00881098425059706},
		  {-6.08788837033777,-5.85035053133213,0.99996118252487,0.00881098425059706},
		  {-6.18787284364908,-5.84858840288604,0.99996118252487,0.00881098425059706},
		  {-6.28785731696038,-5.84682627443996,0.99996118252487,0.00881098425059706},
		  {-6.38784179027169,-5.84506414599387,0.99996118252487,0.00881098425059706},
		  {-6.487826263583,-5.84330201754778,0.99996118252487,0.00881098425059706},
		  {-6.5878107368943,-5.84153988910169,0.99996118252487,0.00881098425059706},
		  {-6.68779521020561,-5.83977776065561,0.99996118252487,0.00881098425059706},
		  {-6.78777968351692,-5.83801563220952,0.99996118252487,0.00881098425059706},
		  {-6.88776415682822,-5.83625350376343,0.99996118252487,0.00881098425059706},
		  {-6.98774863013953,-5.83449137531735,0.99996118252487,0.00881098425059706},
		  {-7.08773310345084,-5.83272924687126,0.99996118252487,0.00881098425059706},
		  {-7.18771757676214,-5.83096711842517,0.99996118252487,0.00881098425059706},
		  {-7.28770205007345,-5.82920498997908,0.99996118252487,0.00881098425059706},
		  {-7.38768652338476,-5.827442861533,0.99996118252487,0.00881098425059706},
		  {-7.48767099669606,-5.82568073308691,0.99996118252487,0.00881098425059706},
		  {-7.58765547000737,-5.82391860464082,0.99996118252487,0.00881098425059706},
		  {-7.68763994331868,-5.82215647619473,0.99996118252487,0.00881098425059706},
		  {-7.78762441662998,-5.82039434774865,0.99996118252487,0.00881098425059706},
		  {-7.81,-5.82,1,6.12303176911189E-17},
			{-8.14943329722586,-5.84156903387097,0.999527636124402,0.0307327939433745},
			{-8.44434581025118,-5.7865544025345,0.995751402229596,0.0920822727662247},
			{-8.73028500877364,-5.69578670592201,0.988213201121478,0.15308386305957},
			{-9.00293383980356,-5.57063633661366,0.976941512263248,0.213507099687103},
			{-9.25817590566896,-5.41299278992442,0.961978920303873,0.273123702543362}
};

float P2_S1 [213][4] = {
		  {11.4110465963424,0.414962778877021,-0.999127455714534,0.0417651438091932},
		  {11.1204221998195,0.34054866633311,-0.992156234775975,0.125004023115899},
		  {10.8462237668216,0.218830880691638,-0.978262433261102,0.20737071073338},
		  {10.5960906173122,0.0532005467654315,-0.957542992515569,0.288290508834974},
		  {10.3769915991499,-0.151727782755663,-0.930142478478721,0.367198814989186},
		  {10.1950309321332,-0.390244691294375,-0.896252073002369,0.443545061565289},
		  {10.055278141062,-0.65570496588892,-0.856108239915952,0.516796557213775},
		  {9.99,-0.95,-0.707106781186547,0.707106781186548},
		  {10.01,-0.95,-0.702393101016683,0.71178924664831},
		  {10.0113287863288,-1.04999117124473,-0.702393101016683,0.71178924664831},
		  {10.0126575726577,-1.14998234248945,-0.702393101016683,0.71178924664831},
		  {10.0139863589865,-1.24997351373418,-0.702393101016683,0.71178924664831},
		  {10.0153151453153,-1.34996468497891,-0.702393101016683,0.71178924664831},
		  {10.0166439316442,-1.44995585622363,-0.702393101016683,0.71178924664831},
		  {10.017972717973,-1.54994702746836,-0.702393101016683,0.71178924664831},
		  {10.0193015043018,-1.64993819871309,-0.702393101016683,0.71178924664831},
		  {10.0206302906307,-1.74992936995782,-0.702393101016683,0.71178924664831},
		  {10.0219590769595,-1.84992054120254,-0.702393101016683,0.71178924664831},
		  {10.0232878632883,-1.94991171244727,-0.702393101016683,0.71178924664831},
		  {10.0246166496172,-2.049902883692,-0.702393101016683,0.71178924664831},
		  {10.025945435946,-2.14989405493672,-0.702393101016683,0.71178924664831},
		  {10.0272742222748,-2.24988522618145,-0.702393101016683,0.71178924664831},
		  {10.0286030086037,-2.34987639742618,-0.702393101016683,0.71178924664831},
		  {10.0299317949325,-2.4498675686709,-0.702393101016683,0.71178924664831},
		  {10.0312605812613,-2.54985873991563,-0.702393101016683,0.71178924664831},
		  {10.0325893675902,-2.64984991116036,-0.702393101016683,0.71178924664831},
		  {10.033918153919,-2.74984108240508,-0.702393101016683,0.71178924664831},
		  {10.0352469402478,-2.84983225364981,-0.702393101016683,0.71178924664831},
		  {10.0365757265767,-2.94982342489454,-0.702393101016683,0.71178924664831},
		  {10.0379045129055,-3.04981459613926,-0.702393101016683,0.71178924664831},
		  {10.0392332992343,-3.14980576738399,-0.702393101016683,0.71178924664831},
		  {10.0405620855632,-3.24979693862872,-0.702393101016683,0.71178924664831},
		  {10.041890871892,-3.34978810987345,-0.702393101016683,0.71178924664831},
		  {10.0432196582209,-3.44977928111817,-0.702393101016683,0.71178924664831},
		  {10.0445484445497,-3.5497704523629,-0.702393101016683,0.71178924664831},
		  {10.0458772308785,-3.64976162360763,-0.702393101016683,0.71178924664831},
		  {10.0472060172074,-3.74975279485235,-0.702393101016683,0.71178924664831},
		  {10.0485348035362,-3.84974396609708,-0.702393101016683,0.71178924664831},
		  {10.049863589865,-3.94973513734181,-0.702393101016683,0.71178924664831},
		  {10.05,-3.96,-0.707106781186547,0.707106781186548},
		  {10.0143384075621,-4.23890045612804,-0.736728797272002,0.676188346002909},
		  {9.94827729174326,-4.53153662781017,-0.781090173858336,0.62441824148719},
		  {9.84304345352284,-4.81247405730897,-0.821820984380039,0.569745793870058},
		  {9.70059115864679,-5.07649554068589,-0.858731908956498,0.512425124813303},
		  {9.52356584555034,-5.31869801491583,-0.891651382825194,0.452722665111787},
		  {9.31525499772175,-5.53458361118602,-0.920426393787675,0.390915916303003},
		  {9.07952709284189,-5.72014318345582,-0.94492319342179,0.327292160818994},
		  {8.82075976245656,-5.87193076109394,-0.965027918754455,0.262147126675929},
		  {8.54375849630654,-5.98712754295561,-0.980647121505336,0.195783612907971},
		  {8.25366740103267,-6.06359424448515,-0.991708202441514,0.128510082134521},
		  {7.95587367052901,-6.09991082572171,-0.998159748824191,0.0606392268026842},
		  {7.65590754199618,-6.09540286243138,0.999971773378986,0.00751348423081616},
		  {7.48,-6.08,1,6.12303176911189E-17},
		  {7.51,-6.09,0.99996118252487,0.00881098425059706},
		  {7.41001552668869,-6.08823787155391,0.99996118252487,0.00881098425059706},
		  {7.31003105337739,-6.08647574310783,0.99996118252487,0.00881098425059706},
		  {7.21004658006608,-6.08471361466174,0.99996118252487,0.00881098425059706},
		  {7.11006210675477,-6.08295148621565,0.99996118252487,0.00881098425059706},
		  {7.01007763344347,-6.08118935776956,0.99996118252487,0.00881098425059706},
		  {6.91009316013216,-6.07942722932348,0.99996118252487,0.00881098425059706},
		  {6.81010868682085,-6.07766510087739,0.99996118252487,0.00881098425059706},
		  {6.71012421350955,-6.0759029724313,0.99996118252487,0.00881098425059706},
		  {6.61013974019824,-6.07414084398521,0.99996118252487,0.00881098425059706},
		  {6.51015526688693,-6.07237871553913,0.99996118252487,0.00881098425059706},
		  {6.41017079357563,-6.07061658709304,0.99996118252487,0.00881098425059706},
		  {6.31018632026432,-6.06885445864695,0.99996118252487,0.00881098425059706},
		  {6.21020184695301,-6.06709233020087,0.99996118252487,0.00881098425059706},
		  {6.11021737364171,-6.06533020175478,0.99996118252487,0.00881098425059706},
		  {6.0102329003304,-6.06356807330869,0.99996118252487,0.00881098425059706},
		  {5.91024842701909,-6.0618059448626,0.99996118252487,0.00881098425059706},
		  {5.81026395370778,-6.06004381641652,0.99996118252487,0.00881098425059706},
		  {5.71027948039648,-6.05828168797043,0.99996118252487,0.00881098425059706},
		  {5.61029500708517,-6.05651955952434,0.99996118252487,0.00881098425059706},
		  {5.51031053377386,-6.05475743107825,0.99996118252487,0.00881098425059706},
		  {5.41032606046256,-6.05299530263217,0.99996118252487,0.00881098425059706},
		  {5.31034158715125,-6.05123317418608,0.99996118252487,0.00881098425059706},
		  {5.21035711383994,-6.04947104573999,0.99996118252487,0.00881098425059706},
		  {5.11037264052863,-6.0477089172939,0.99996118252487,0.00881098425059706},
		  {5.01038816721733,-6.04594678884782,0.99996118252487,0.00881098425059706},
		  {4.91040369390602,-6.04418466040173,0.99996118252487,0.00881098425059706},
		  {4.81041922059471,-6.04242253195564,0.99996118252487,0.00881098425059706},
		  {4.71043474728341,-6.04066040350956,0.99996118252487,0.00881098425059706},
		  {4.6104502739721,-6.03889827506347,0.99996118252487,0.00881098425059706},
		  {4.51046580066079,-6.03713614661738,0.99996118252487,0.00881098425059706},
		  {4.41048132734948,-6.03537401817129,0.99996118252487,0.00881098425059706},
		  {4.31049685403818,-6.03361188972521,0.99996118252487,0.00881098425059706},
		  {4.21051238072687,-6.03184976127912,0.99996118252487,0.00881098425059706},
		  {4.11052790741556,-6.03008763283303,0.99996118252487,0.00881098425059706},
		  {4.01054343410426,-6.02832550438695,0.99996118252487,0.00881098425059706},
		  {3.91055896079295,-6.02656337594086,0.99996118252487,0.00881098425059706},
		  {3.81057448748164,-6.02480124749477,0.99996118252487,0.00881098425059706},
		  {3.71059001417033,-6.02303911904868,0.99996118252487,0.00881098425059706},
		  {3.61060554085903,-6.0212769906026,0.99996118252487,0.00881098425059706},
		  {3.51062106754772,-6.01951486215651,0.99996118252487,0.00881098425059706},
		  {3.41063659423641,-6.01775273371042,0.99996118252487,0.00881098425059706},
		  {3.3106521209251,-6.01599060526433,0.99996118252487,0.00881098425059706},
		  {3.2106676476138,-6.01422847681825,0.99996118252487,0.00881098425059706},
		  {3.11068317430249,-6.01246634837216,0.99996118252487,0.00881098425059706},
		  {3.01069870099118,-6.01070421992607,0.99996118252487,0.00881098425059706},
		  {2.91071422767988,-6.00894209147999,0.99996118252487,0.00881098425059706},
		  {2.81072975436857,-6.0071799630339,0.99996118252487,0.00881098425059706},
		  {2.71074528105726,-6.00541783458781,0.99996118252487,0.00881098425059706},
		  {2.61076080774595,-6.00365570614172,0.99996118252487,0.00881098425059706},
		  {2.51077633443465,-6.00189357769564,0.99996118252487,0.00881098425059706},
		  {2.41079186112334,-6.00013144924955,0.99996118252487,0.00881098425059706},
		  {2.31080738781203,-5.99836932080346,0.99996118252487,0.00881098425059706},
		  {2.21082291450073,-5.99660719235737,0.99996118252487,0.00881098425059706},
		  {2.11083844118942,-5.99484506391129,0.99996118252487,0.00881098425059706},
		  {2.01085396787811,-5.9930829354652,0.99996118252487,0.00881098425059706},
		  {1.9108694945668,-5.99132080701911,0.99996118252487,0.00881098425059706},
		  {1.8108850212555,-5.98955867857303,0.99996118252487,0.00881098425059706},
		  {1.71090054794419,-5.98779655012694,0.99996118252487,0.00881098425059706},
		  {1.61091607463288,-5.98603442168085,0.99996118252487,0.00881098425059706},
		  {1.51093160132158,-5.98427229323476,0.99996118252487,0.00881098425059706},
		  {1.41094712801027,-5.98251016478868,0.99996118252487,0.00881098425059706},
		  {1.31096265469896,-5.98074803634259,0.99996118252487,0.00881098425059706},
		  {1.21097818138765,-5.9789859078965,0.99996118252487,0.00881098425059706},
		  {1.11099370807635,-5.97722377945041,0.99996118252487,0.00881098425059706},
		  {1.01100923476504,-5.97546165100433,0.99996118252487,0.00881098425059706},
		  {0.911024761453732,-5.97369952255824,0.99996118252487,0.00881098425059706},
		  {0.811040288142425,-5.97193739411215,0.99996118252487,0.00881098425059706},
		  {0.711055814831118,-5.97017526566607,0.99996118252487,0.00881098425059706},
		  {0.611071341519811,-5.96841313721998,0.99996118252487,0.00881098425059706},
		  {0.511086868208504,-5.96665100877389,0.99996118252487,0.00881098425059706},
		  {0.411102394897197,-5.9648888803278,0.99996118252487,0.00881098425059706},
		  {0.311117921585889,-5.96312675188172,0.99996118252487,0.00881098425059706},
		  {0.211133448274582,-5.96136462343563,0.99996118252487,0.00881098425059706},
		  {0.111148974963275,-5.95960249498954,0.99996118252487,0.00881098425059706},
		  {0.0111645016519679,-5.95784036654345,0.99996118252487,0.00881098425059706},
		  {-0.0888199716593392,-5.95607823809737,0.99996118252487,0.00881098425059706},
		  {-0.188804444970646,-5.95431610965128,0.99996118252487,0.00881098425059706},
		  {-0.288788918281954,-5.95255398120519,0.99996118252487,0.00881098425059706},
		  {-0.388773391593261,-5.9507918527591,0.99996118252487,0.00881098425059706},
		  {-0.488757864904568,-5.94902972431302,0.99996118252487,0.00881098425059706},
		  {-0.588742338215875,-5.94726759586693,0.99996118252487,0.00881098425059706},
		  {-0.688726811527182,-5.94550546742084,0.99996118252487,0.00881098425059706},
		  {-0.788711284838489,-5.94374333897476,0.99996118252487,0.00881098425059706},
		  {-0.888695758149796,-5.94198121052867,0.99996118252487,0.00881098425059706},
		  {-0.988680231461104,-5.94021908208258,0.99996118252487,0.00881098425059706},
		  {-1.08866470477241,-5.93845695363649,0.99996118252487,0.00881098425059706},
		  {-1.18864917808372,-5.93669482519041,0.99996118252487,0.00881098425059706},
		  {-1.28863365139503,-5.93493269674432,0.99996118252487,0.00881098425059706},
		  {-1.38861812470633,-5.93317056829823,0.99996118252487,0.00881098425059706},
		  {-1.48860259801764,-5.93140843985215,0.99996118252487,0.00881098425059706},
		  {-1.58858707132895,-5.92964631140606,0.99996118252487,0.00881098425059706},
		  {-1.68857154464025,-5.92788418295997,0.99996118252487,0.00881098425059706},
		  {-1.78855601795156,-5.92612205451388,0.99996118252487,0.00881098425059706},
		  {-1.88854049126287,-5.9243599260678,0.99996118252487,0.00881098425059706},
		  {-1.98852496457418,-5.92259779762171,0.99996118252487,0.00881098425059706},
		  {-2.08850943788548,-5.92083566917562,0.99996118252487,0.00881098425059706},
		  {-2.18849391119679,-5.91907354072953,0.99996118252487,0.00881098425059706},
		  {-2.2884783845081,-5.91731141228345,0.99996118252487,0.00881098425059706},
		  {-2.3884628578194,-5.91554928383736,0.99996118252487,0.00881098425059706},
		  {-2.48844733113071,-5.91378715539127,0.99996118252487,0.00881098425059706},
		  {-2.58843180444202,-5.91202502694519,0.99996118252487,0.00881098425059706},
		  {-2.68841627775333,-5.9102628984991,0.99996118252487,0.00881098425059706},
		  {-2.78840075106463,-5.90850077005301,0.99996118252487,0.00881098425059706},
		  {-2.88838522437594,-5.90673864160692,0.99996118252487,0.00881098425059706},
		  {-2.98836969768725,-5.90497651316084,0.99996118252487,0.00881098425059706},
		  {-3.08835417099855,-5.90321438471475,0.99996118252487,0.00881098425059706},
		  {-3.18833864430986,-5.90145225626866,0.99996118252487,0.00881098425059706},
		  {-3.28832311762117,-5.89969012782257,0.99996118252487,0.00881098425059706},
		  {-3.38830759093248,-5.89792799937649,0.99996118252487,0.00881098425059706},
		  {-3.48829206424378,-5.8961658709304,0.99996118252487,0.00881098425059706},
		  {-3.58827653755509,-5.89440374248431,0.99996118252487,0.00881098425059706},
		  {-3.6882610108664,-5.89264161403823,0.99996118252487,0.00881098425059706},
		  {-3.7882454841777,-5.89087948559214,0.99996118252487,0.00881098425059706},
		  {-3.88822995748901,-5.88911735714605,0.99996118252487,0.00881098425059706},
		  {-3.98821443080032,-5.88735522869996,0.99996118252487,0.00881098425059706},
		  {-4.08819890411163,-5.88559310025388,0.99996118252487,0.00881098425059706},
		  {-4.18818337742293,-5.88383097180779,0.99996118252487,0.00881098425059706},
		  {-4.28816785073424,-5.8820688433617,0.99996118252487,0.00881098425059706},
		  {-4.38815232404555,-5.88030671491561,0.99996118252487,0.00881098425059706},
		  {-4.48813679735686,-5.87854458646953,0.99996118252487,0.00881098425059706},
		  {-4.58812127066816,-5.87678245802344,0.99996118252487,0.00881098425059706},
		  {-4.68810574397947,-5.87502032957735,0.99996118252487,0.00881098425059706},
		  {-4.78809021729078,-5.87325820113127,0.99996118252487,0.00881098425059706},
		  {-4.88807469060208,-5.87149607268518,0.99996118252487,0.00881098425059706},
		  {-4.98805916391339,-5.86973394423909,0.99996118252487,0.00881098425059706},
		  {-5.0880436372247,-5.867971815793,0.99996118252487,0.00881098425059706},
		  {-5.18802811053601,-5.86620968734692,0.99996118252487,0.00881098425059706},
		  {-5.28801258384731,-5.86444755890083,0.99996118252487,0.00881098425059706},
		  {-5.38799705715862,-5.86268543045474,0.99996118252487,0.00881098425059706},
		  {-5.48798153046993,-5.86092330200865,0.99996118252487,0.00881098425059706},
		  {-5.58796600378123,-5.85916117356257,0.99996118252487,0.00881098425059706},
		  {-5.68795047709254,-5.85739904511648,0.99996118252487,0.00881098425059706},
		  {-5.78793495040385,-5.85563691667039,0.99996118252487,0.00881098425059706},
		  {-5.88791942371516,-5.8538747882243,0.99996118252487,0.00881098425059706},
		  {-5.98790389702646,-5.85211265977822,0.99996118252487,0.00881098425059706},
		  {-6.08788837033777,-5.85035053133213,0.99996118252487,0.00881098425059706},
		  {-6.18787284364908,-5.84858840288604,0.99996118252487,0.00881098425059706},
		  {-6.28785731696038,-5.84682627443996,0.99996118252487,0.00881098425059706},
		  {-6.38784179027169,-5.84506414599387,0.99996118252487,0.00881098425059706},
		  {-6.487826263583,-5.84330201754778,0.99996118252487,0.00881098425059706},
		  {-6.5878107368943,-5.84153988910169,0.99996118252487,0.00881098425059706},
		  {-6.68779521020561,-5.83977776065561,0.99996118252487,0.00881098425059706},
		  {-6.78777968351692,-5.83801563220952,0.99996118252487,0.00881098425059706},
		  {-6.88776415682822,-5.83625350376343,0.99996118252487,0.00881098425059706},
		  {-6.98774863013953,-5.83449137531735,0.99996118252487,0.00881098425059706},
		  {-7.08773310345084,-5.83272924687126,0.99996118252487,0.00881098425059706},
		  {-7.18771757676214,-5.83096711842517,0.99996118252487,0.00881098425059706},
		  {-7.28770205007345,-5.82920498997908,0.99996118252487,0.00881098425059706},
		  {-7.38768652338476,-5.827442861533,0.99996118252487,0.00881098425059706},
		  {-7.48767099669606,-5.82568073308691,0.99996118252487,0.00881098425059706},
		  {-7.58765547000737,-5.82391860464082,0.99996118252487,0.00881098425059706},
		  {-7.68763994331868,-5.82215647619473,0.99996118252487,0.00881098425059706},
		  {-7.78762441662998,-5.82039434774865,0.99996118252487,0.00881098425059706},
		  {-7.81,-5.82,1,6.12303176911189E-17},
			{-8.14943329722586,-5.84156903387097,0.999527636124402,0.0307327939433745},
			{-8.44434581025118,-5.7865544025345,0.995751402229596,0.0920822727662247},
			{-8.73028500877364,-5.69578670592201,0.988213201121478,0.15308386305957},
			{-9.00293383980356,-5.57063633661366,0.976941512263248,0.213507099687103},
			{-9.25817590566896,-5.41299278992442,0.961978920303873,0.273123702543362}
};

float S1_D1 [19][4] = {
	{-9.4921576125666,-5.22523613668073,0.943381954192498,0.33170843900019},
	{-9.7013463513526,-5.01020108938583,0.92122087361103,0.389039974839772},
	{-9.88258383217078,-4.77113420429574,0.895579403531757,0.444901710459402},
	{-10.033133767683,-4.51164486556044,0.86655441790286,0.499082599188786},
	{-10.1507231849895,-4.23565079146189,0.83425557365684,0.55137794462827},
	{-10.2335767425206,-3.94731888548471,0.798804896424602,0.60159017399562},
	{-10.2804435337897,-3.65100232523851,0.760336319520364,0.649529584559647},
	{-10.29,-3.58,0.713250449154182,0.700909264299851},
	{-10.45,-3.63,0.700480738380778,0.713671307506138},
	{-10.4481346529685,-3.53001739911139,0.700480738380778,0.713671307506138},
	{-10.446269305937,-3.43003479822277,0.700480738380778,0.713671307506138},
	{-10.4444039589055,-3.33005219733416,0.700480738380778,0.713671307506138},
	{-10.4292890274476,-3.22019126919487,0.694369051066696,0.719619080431262},
	{-10.3868204417706,-2.92321244969659,0.655148093084053,0.755500480561283},
	{-10.3130739277155,-2.63241793175527,0.61407584486079,0.789247018846766},
	{-10.2088824557552,-2.35109225363337,0.571268366648167,0.820763335722993},
	{-10.075422873647,-2.08241300258574,0.5268466220382,0.849960373692173},
	{-9.91420261387981,-2.2,0.480936136149766,0.876755628978414}, //-1.8
	{-9.88,-2.2,0,1} //-1.75
};

float S1_D2 [25][4] = {
	{-9.4921576125666,-5.22523613668073,0.943381954192498,0.33170843900019},
	{-9.7013463513526,-5.01020108938583,0.92122087361103,0.389039974839772},
	{-9.88258383217078,-4.77113420429574,0.895579403531757,0.444901710459402},
	{-10.033133767683,-4.51164486556044,0.86655441790286,0.499082599188786},
	{-10.1507231849895,-4.23565079146189,0.83425557365684,0.55137794462827},
	{-10.2335767425206,-3.94731888548471,0.798804896424602,0.60159017399562},
	{-10.2804435337897,-3.65100232523851,0.760336319520364,0.649529584559647},
	{-10.29,-3.58,0.713250449154182,0.700909264299851},
	{-10.45,-3.63,0.700480738380778,0.713671307506138},
	{-10.4481346529685,-3.53001739911139,0.700480738380778,0.713671307506138},
	{-10.446269305937,-3.43003479822277,0.700480738380778,0.713671307506138},
	{-10.4444039589055,-3.33005219733416,0.700480738380778,0.713671307506138},
	{-10.461055720676,-3.24020378414607,0.720018194996944,0.693955185061213},
	{-10.4628144580702,-2.9402089394524,0.709176444187457,0.70503104258581},
	{-10.4552745223614,-2.64030370547089,0.69816433630288,0.715937538836146},
	{-10.4384431580329,-2.34077623565411,0.686984516651732,0.726672053873538},
	{-10.4123365369124,-2.04191432049316,0.675639670829949,0.737232009072312},
	{-10.3769797426335,-1.74400511100422,0.664132524075752,0.747614867739247},
	{-10.3324067465352,-1.44733484282958,0.652465840614996,0.757818135722923},
	{-10.2786603750214,-1.15218856121807,0.640642422997157,0.76783936201287},
	{-10.215792268413,-0.858849847149369,0.628665111422101,0.777676139328343},
	{-10.143862831331,-0.567600544865118,0.616536783057823,0.787326104696593},
	{-10.0629411746587,-0.278720491068729,0.604260351349295,0.796786940020496},
	{-9.97310504913897,0.0,0.591838765318606,0.806056372635406}, //0.0
	{-9.88,0.17,0,1} //0.17
};

float C1_S1 [161][4] = {
	{7.51,-6.41,0.999872215159286,0.0159860361710814},
	{7.41005111067049,-6.4068032013204,0.999872215159286,0.0159860361710814},
	{7.31010222134098,-6.4036064026408,0.999872215159286,0.0159860361710814},
	{7.21015333201148,-6.4004096039612,0.999872215159286,0.0159860361710814},
	{7.11020444268197,-6.3972128052816,0.999872215159286,0.0159860361710814},
	{7.01025555335246,-6.394016006602,0.999872215159286,0.0159860361710814},
	{6.91030666402295,-6.39081920792241,0.999872215159286,0.0159860361710814},
	{6.81035777469344,-6.38762240924281,0.999872215159286,0.0159860361710814},
	{6.71040888536394,-6.38442561056321,0.999872215159286,0.0159860361710814},
	{6.61045999603443,-6.38122881188361,0.999872215159286,0.0159860361710814},
	{6.51051110670492,-6.37803201320401,0.999872215159286,0.0159860361710814},
	{6.41056221737541,-6.37483521452441,0.999872215159286,0.0159860361710814},
	{6.3106133280459,-6.37163841584481,0.999872215159286,0.0159860361710814},
	{6.2106644387164,-6.36844161716521,0.999872215159286,0.0159860361710814},
	{6.11071554938689,-6.36524481848561,0.999872215159286,0.0159860361710814},
	{6.01076666005738,-6.36204801980601,0.999872215159286,0.0159860361710814},
	{5.91081777072788,-6.35885122112641,0.999872215159286,0.0159860361710814},
	{5.81086888139837,-6.35565442244682,0.999872215159286,0.0159860361710814},
	{5.71091999206886,-6.35245762376722,0.999872215159286,0.0159860361710814},
	{5.61097110273935,-6.34926082508762,0.999872215159286,0.0159860361710814},
	{5.51102221340985,-6.34606402640802,0.999872215159286,0.0159860361710814},
	{5.41107332408034,-6.34286722772842,0.999872215159286,0.0159860361710814},
	{5.31112443475083,-6.33967042904882,0.999872215159286,0.0159860361710814},
	{5.21117554542132,-6.33647363036922,0.999872215159286,0.0159860361710814},
	{5.11122665609182,-6.33327683168962,0.999872215159286,0.0159860361710814},
	{5.01127776676231,-6.33008003301002,0.999872215159286,0.0159860361710814},
	{4.9113288774328,-6.32688323433042,0.999872215159286,0.0159860361710814},
	{4.81137998810329,-6.32368643565083,0.999872215159286,0.0159860361710814},
	{4.71143109877379,-6.32048963697123,0.999872215159286,0.0159860361710814},
	{4.61148220944428,-6.31729283829163,0.999872215159286,0.0159860361710814},
	{4.51153332011477,-6.31409603961203,0.999872215159286,0.0159860361710814},
	{4.41158443078527,-6.31089924093243,0.999872215159286,0.0159860361710814},
	{4.31163554145576,-6.30770244225283,0.999872215159286,0.0159860361710814},
	{4.21168665212625,-6.30450564357323,0.999872215159286,0.0159860361710814},
	{4.11173776279674,-6.30130884489363,0.999872215159286,0.0159860361710814},
	{4.01178887346724,-6.29811204621403,0.999872215159286,0.0159860361710814},
	{3.91183998413773,-6.29491524753443,0.999872215159286,0.0159860361710814},
	{3.81189109480822,-6.29171844885483,0.999872215159286,0.0159860361710814},
	{3.71194220547871,-6.28852165017524,0.999872215159286,0.0159860361710814},
	{3.61199331614921,-6.28532485149564,0.999872215159286,0.0159860361710814},
	{3.5120444268197,-6.28212805281604,0.999872215159286,0.0159860361710814},
	{3.41209553749019,-6.27893125413644,0.999872215159286,0.0159860361710814},
	{3.31214664816069,-6.27573445545684,0.999872215159286,0.0159860361710814},
	{3.21219775883118,-6.27253765677724,0.999872215159286,0.0159860361710814},
	{3.11224886950167,-6.26934085809764,0.999872215159286,0.0159860361710814},
	{3.01229998017216,-6.26614405941804,0.999872215159286,0.0159860361710814},
	{2.91235109084266,-6.26294726073844,0.999872215159286,0.0159860361710814},
	{2.81240220151315,-6.25975046205884,0.999872215159286,0.0159860361710814},
	{2.71245331218364,-6.25655366337925,0.999872215159286,0.0159860361710814},
	{2.61250442285413,-6.25335686469965,0.999872215159286,0.0159860361710814},
	{2.51255553352463,-6.25016006602005,0.999872215159286,0.0159860361710814},
	{2.41260664419512,-6.24696326734045,0.999872215159286,0.0159860361710814},
	{2.31265775486561,-6.24376646866085,0.999872215159286,0.0159860361710814},
	{2.21270886553611,-6.24056966998125,0.999872215159286,0.0159860361710814},
	{2.1127599762066,-6.23737287130165,0.999872215159286,0.0159860361710814},
	{2.01281108687709,-6.23417607262205,0.999872215159286,0.0159860361710814},
	{1.91286219754758,-6.23097927394245,0.999872215159286,0.0159860361710814},
	{1.81291330821808,-6.22778247526285,0.999872215159286,0.0159860361710814},
	{1.71296441888857,-6.22458567658325,0.999872215159286,0.0159860361710814},
	{1.61301552955906,-6.22138887790365,0.999872215159286,0.0159860361710814},
	{1.51306664022955,-6.21819207922406,0.999872215159286,0.0159860361710814},
	{1.41311775090005,-6.21499528054446,0.999872215159286,0.0159860361710814},
	{1.31316886157054,-6.21179848186486,0.999872215159286,0.0159860361710814},
	{1.21321997224103,-6.20860168318526,0.999872215159286,0.0159860361710814},
	{1.11327108291152,-6.20540488450566,0.999872215159286,0.0159860361710814},
	{1.01332219358202,-6.20220808582606,0.999872215159286,0.0159860361710814},
	{0.91337330425251,-6.19901128714646,0.999872215159286,0.0159860361710814},
	{0.813424414923003,-6.19581448846686,0.999872215159286,0.0159860361710814},
	{0.713475525593495,-6.19261768978726,0.999872215159286,0.0159860361710814},
	{0.613526636263988,-6.18942089110766,0.999872215159286,0.0159860361710814},
	{0.513577746934481,-6.18622409242807,0.999872215159286,0.0159860361710814},
	{0.413628857604973,-6.18302729374847,0.999872215159286,0.0159860361710814},
	{0.313679968275466,-6.17983049506887,0.999872215159286,0.0159860361710814},
	{0.213731078945958,-6.17663369638927,0.999872215159286,0.0159860361710814},
	{0.113782189616451,-6.17343689770967,0.999872215159286,0.0159860361710814},
	{0.0138333002869437,-6.17024009903007,0.999872215159286,0.0159860361710814},
	{-0.0861155890425636,-6.16704330035047,0.999872215159286,0.0159860361710814},
	{-0.186064478372071,-6.16384650167087,0.999872215159286,0.0159860361710814},
	{-0.286013367701578,-6.16064970299127,0.999872215159286,0.0159860361710814},
	{-0.385962257031086,-6.15745290431167,0.999872215159286,0.0159860361710814},
	{-0.485911146360593,-6.15425610563207,0.999872215159286,0.0159860361710814},
	{-0.5858600356901,-6.15105930695248,0.999872215159286,0.0159860361710814},
	{-0.685808925019608,-6.14786250827288,0.999872215159286,0.0159860361710814},
	{-0.785757814349115,-6.14466570959328,0.999872215159286,0.0159860361710814},
	{-0.885706703678623,-6.14146891091368,0.999872215159286,0.0159860361710814},
	{-0.98565559300813,-6.13827211223408,0.999872215159286,0.0159860361710814},
	{-1.08560448233764,-6.13507531355448,0.999872215159286,0.0159860361710814},
	{-1.18555337166714,-6.13187851487488,0.999872215159286,0.0159860361710814},
	{-1.28550226099665,-6.12868171619528,0.999872215159286,0.0159860361710814},
	{-1.38545115032616,-6.12548491751568,0.999872215159286,0.0159860361710814},
	{-1.48540003965567,-6.12228811883608,0.999872215159286,0.0159860361710814},
	{-1.58534892898517,-6.11909132015649,0.999872215159286,0.0159860361710814},
	{-1.68529781831468,-6.11589452147689,0.999872215159286,0.0159860361710814},
	{-1.78524670764419,-6.11269772279729,0.999872215159286,0.0159860361710814},
	{-1.8851955969737,-6.10950092411769,0.999872215159286,0.0159860361710814},
	{-1.9851444863032,-6.10630412543809,0.999872215159286,0.0159860361710814},
	{-2.08509337563271,-6.10310732675849,0.999872215159286,0.0159860361710814},
	{-2.18504226496222,-6.09991052807889,0.999872215159286,0.0159860361710814},
	{-2.28499115429172,-6.09671372939929,0.999872215159286,0.0159860361710814},
	{-2.38494004362123,-6.09351693071969,0.999872215159286,0.0159860361710814},
	{-2.48488893295074,-6.09032013204009,0.999872215159286,0.0159860361710814},
	{-2.58483782228025,-6.08712333336049,0.999872215159286,0.0159860361710814},
	{-2.68478671160975,-6.0839265346809,0.999872215159286,0.0159860361710814},
	{-2.78473560093926,-6.0807297360013,0.999872215159286,0.0159860361710814},
	{-2.88468449026877,-6.0775329373217,0.999872215159286,0.0159860361710814},
	{-2.98463337959828,-6.0743361386421,0.999872215159286,0.0159860361710814},
	{-3.08458226892778,-6.0711393399625,0.999872215159286,0.0159860361710814},
	{-3.18453115825729,-6.0679425412829,0.999872215159286,0.0159860361710814},
	{-3.2844800475868,-6.0647457426033,0.999872215159286,0.0159860361710814},
	{-3.38442893691631,-6.0615489439237,0.999872215159286,0.0159860361710814},
	{-3.48437782624581,-6.0583521452441,0.999872215159286,0.0159860361710814},
	{-3.58432671557532,-6.0551553465645,0.999872215159286,0.0159860361710814},
	{-3.68427560490483,-6.05195854788491,0.999872215159286,0.0159860361710814},
	{-3.78422449423433,-6.04876174920531,0.999872215159286,0.0159860361710814},
	{-3.88417338356384,-6.04556495052571,0.999872215159286,0.0159860361710814},
	{-3.98412227289335,-6.04236815184611,0.999872215159286,0.0159860361710814},
	{-4.08407116222286,-6.03917135316651,0.999872215159286,0.0159860361710814},
	{-4.18402005155236,-6.03597455448691,0.999872215159286,0.0159860361710814},
	{-4.28396894088187,-6.03277775580731,0.999872215159286,0.0159860361710814},
	{-4.38391783021138,-6.02958095712771,0.999872215159286,0.0159860361710814},
	{-4.48386671954089,-6.02638415844811,0.999872215159286,0.0159860361710814},
	{-4.58381560887039,-6.02318735976851,0.999872215159286,0.0159860361710814},
	{-4.6837644981999,-6.01999056108891,0.999872215159286,0.0159860361710814},
	{-4.78371338752941,-6.01679376240932,0.999872215159286,0.0159860361710814},
	{-4.88366227685891,-6.01359696372972,0.999872215159286,0.0159860361710814},
	{-4.98361116618842,-6.01040016505012,0.999872215159286,0.0159860361710814},
	{-5.08356005551793,-6.00720336637052,0.999872215159286,0.0159860361710814},
	{-5.18350894484744,-6.00400656769092,0.999872215159286,0.0159860361710814},
	{-5.28345783417694,-6.00080976901132,0.999872215159286,0.0159860361710814},
	{-5.38340672350645,-5.99761297033172,0.999872215159286,0.0159860361710814},
	{-5.48335561283596,-5.99441617165212,0.999872215159286,0.0159860361710814},
	{-5.58330450216547,-5.99121937297252,0.999872215159286,0.0159860361710814},
	{-5.68325339149497,-5.98802257429292,0.999872215159286,0.0159860361710814},
	{-5.78320228082448,-5.98482577561333,0.999872215159286,0.0159860361710814},
	{-5.88315117015399,-5.98162897693373,0.999872215159286,0.0159860361710814},
	{-5.98310005948349,-5.97843217825413,0.999872215159286,0.0159860361710814},
	{-6.083048948813,-5.97523537957453,0.999872215159286,0.0159860361710814},
	{-6.18299783814251,-5.97203858089493,0.999872215159286,0.0159860361710814},
	{-6.28294672747202,-5.96884178221533,0.999872215159286,0.0159860361710814},
	{-6.38289561680152,-5.96564498353573,0.999872215159286,0.0159860361710814},
	{-6.48284450613103,-5.96244818485613,0.999872215159286,0.0159860361710814},
	{-6.58279339546054,-5.95925138617653,0.999872215159286,0.0159860361710814},
	{-6.68274228479005,-5.95605458749693,0.999872215159286,0.0159860361710814},
	{-6.78269117411956,-5.95285778881733,0.999872215159286,0.0159860361710814},
	{-6.88264006344906,-5.94966099013774,0.999872215159286,0.0159860361710814},
	{-6.98258895277857,-5.94646419145814,0.999872215159286,0.0159860361710814},
	{-7.08253784210808,-5.94326739277854,0.999872215159286,0.0159860361710814},
	{-7.18248673143759,-5.94007059409894,0.999872215159286,0.0159860361710814},
	{-7.2824356207671,-5.93687379541934,0.999872215159286,0.0159860361710814},
	{-7.3823845100966,-5.93367699673974,0.999872215159286,0.0159860361710814},
	{-7.48233339942611,-5.93048019806014,0.999872215159286,0.0159860361710814},
	{-7.58228228875562,-5.92728339938054,0.999872215159286,0.0159860361710814},
	{-7.68223117808513,-5.92408660070094,0.999872215159286,0.0159860361710814},
	{-7.78218006741464,-5.92088980202134,0.999872215159286,0.0159860361710814},
	{-7.81,-5.92,1,0},
	{-7.81,-5.82,1,6.12303176911189E-17},
	{-8.14943329722586,-5.84156903387097,0.999527636124402,0.0307327939433745},
	{-8.44434581025118,-5.7865544025345,0.995751402229596,0.0920822727662247},
	{-8.73028500877364,-5.69578670592201,0.988213201121478,0.15308386305957},
	{-9.00293383980356,-5.57063633661366,0.976941512263248,0.213507099687103},
	{-9.25817590566896,-5.41299278992442,0.961978920303873,0.273123702543362}
};

//////////////////////////////////////////////////////////////////////////////////////////////////
int value;
int mapSize;
bool* OGM;
static const float INFINIT_COST = INT_MAX; //!< cost of non connected nodes
float infinity = std::numeric_limits< float >::infinity();
float tBreak;  // coefficient for breaking ties
ofstream MyExcelFile ("PP_result.xlsx", ios::trunc);

ros::Publisher pub_road_name;
ros::Publisher pub_plan_array;

int clock_gettime(clockid_t clk_id, struct timespect *tp);

timespec diff(timespec start, timespec end)
{
  timespec temp;
	if ((end.tv_nsec-start.tv_nsec)<0) {
		temp.tv_sec = end.tv_sec-start.tv_sec-1;
		temp.tv_nsec = 1000000000+end.tv_nsec-start.tv_nsec;
	} else {
		temp.tv_sec = end.tv_sec-start.tv_sec;
		temp.tv_nsec = end.tv_nsec-start.tv_nsec;
	}
	return temp;
}

inline vector <int> findFreeNeighborCell (int CellID);

namespace PP_planner
{

//Default Constructor
PP_PlannerROS::PP_PlannerROS()
{

}
PP_PlannerROS::PP_PlannerROS(ros::NodeHandle &nh)
{
  ROSNodeHandle = nh;

}

PP_PlannerROS::PP_PlannerROS(std::string name, costmap_2d::Costmap2DROS* costmap_ros)
{
  initialize(name, costmap_ros);
}

void PP_PlannerROS::initialize(std::string name, costmap_2d::Costmap2DROS* costmap_ros)
{

  if (!initialized_)
  {
    costmap_ros_ = costmap_ros;
    costmap_ = costmap_ros_->getCostmap();

    ros::NodeHandle private_nh("~/" + name);

    originX = costmap_->getOriginX();
    originY = costmap_->getOriginY();

	width = costmap_->getSizeInCellsX();
	height = costmap_->getSizeInCellsY();
	resolution = costmap_->getResolution();
	//resolution = 0.1;
	mapSize = width*height;
	tBreak = 1+1/(mapSize);
	value =0;

	ros::NodeHandle nh;
	pub_road_name = nh.advertise<std_msgs::Int32>("road_name",1000);
	pub_plan_array = nh.advertise<std_msgs::Float32MultiArray>("path_finder",1000);

	OGM = new bool [mapSize];
    for (unsigned int iy = 0; iy < costmap_->getSizeInCellsY(); iy++)
    {
      for (unsigned int ix = 0; ix < costmap_->getSizeInCellsX(); ix++)
      {
        unsigned int cost = static_cast<int>(costmap_->getCost(ix, iy));
        //cout<<cost;
        if (cost == 0)
          OGM[iy*width+ix]=true;
        else
          OGM[iy*width+ix]=false;
      }
    }


	MyExcelFile << "StartID\tStartX\tStartY\tGoalID\tGoalX\tGoalY\tPlannertime(ms)\tpathLength\tnumberOfCells\t" << endl;

    ROS_INFO("PP_planner initialized successfully");
    initialized_ = true;
  }
  else
    ROS_WARN("This planner has already been initialized... doing nothing");
}

bool PP_PlannerROS::makePlan(const geometry_msgs::PoseStamped& start, const geometry_msgs::PoseStamped& goal,
                             std::vector<geometry_msgs::PoseStamped>& plan)
{

  if (!initialized_)
  {
    ROS_ERROR("The planner has not been initialized, please call initialize() to use the planner");
    return false;
  }

  ROS_DEBUG("Got a start: %.2f, %.2f, and a goal: %.2f, %.2f", start.pose.position.x, start.pose.position.y,
            goal.pose.position.x, goal.pose.position.y);

  plan.clear();

  if (goal.header.frame_id != costmap_ros_->getGlobalFrameID())
  {
    ROS_ERROR("This planner as configured will only accept goals in the %s frame, but a goal was sent in the %s frame.",
              costmap_ros_->getGlobalFrameID().c_str(), goal.header.frame_id.c_str());
    return false;
  }

  tf::Stamped < tf::Pose > goal_tf;
  tf::Stamped < tf::Pose > start_tf;

  poseStampedMsgToTF(goal, goal_tf);
  poseStampedMsgToTF(start, start_tf);

  // convert the start and goal positions
  //////////////////////////////////////////////////////////////////////////////////////////////////

  //Zone's position
  int Zone_number = 7;

  float Zone [7][4] = {
			{-9.88,-1.75 ,0,1},		//D1
			{-9.88,0.17  ,0,1},		//D2
		  {7.72 ,-1.46 ,1,0},		//P1
		  {7.72 ,0.45  ,1,0},		//P2
		  {7.48,-6.50  ,1,0},		//C1
			{-9.25 ,-5.4 ,1,0},	  //S1
			{6,2  ,0,1}		  //S2
  };

  //Variables for valid pose calculation
  float startX = start.pose.position.x;
  float startY = start.pose.position.y;
  float goalX = goal.pose.position.x;
  float goalY = goal.pose.position.y;

  //Variables for path finding
  float goalX_ = goal.pose.position.x;
  float goalY_ = goal.pose.position.y;
  float currentX = start.pose.position.x;
  float currentY = start.pose.position.y;
  float currentZ = start.pose.orientation.z;
  float currentW = start.pose.orientation.w;
  float currentTh = asin(start.pose.orientation.z) * 2;

  ////////////////////////////
  //cout<<"Got: "<<start.pose.position.x<<", "<<start.pose.position.y<<", "<<goal.pose.position.x<<", "<<goal.pose.position.y<<endl;
  ////////////////////////////
  getCorrdinate(startX, startY);
  getCorrdinate(goalX, goalY);

  int startCell;
  int goalCell;

  if (isCellInsideMap(startX, startY) && isCellInsideMap(goalX, goalY))
  {
    startCell = convertToCellIndex(startX, startY);

    goalCell = convertToCellIndex(goalX, goalY);

    MyExcelFile << startCell <<"\t"<< start.pose.position.x <<"\t"<< start.pose.position.y <<"\t"<< goalCell <<"\t"<< goal.pose.position.x <<"\t"<< goal.pose.position.y;

  }
  else
  {
    ROS_WARN("the start or goal is out of the map");
    return false;
  }
  //ROS_INFO("Begin");

  /////////////////////////////////////////////////////////
  // call global planner

  if (isStartAndGoalCellsValid(startCell, goalCell)){
	  ROS_INFO("====================================");
	  cout<<"Got goal: "<<goalX_<<", "<<goalY_<<endl;
	  cout<<"Got start: "<<currentX<<", "<<currentY<<endl;
	  geometry_msgs::PoseStamped pose = goal;
	  geometry_msgs::Vector3 path;
	  std_msgs::Float32MultiArray pos_array;
	  bool replan = false; 		//will robot need a straight line to start point
	  int goal_case = 0;	//where is goal
	  int start_case = 0;	//where to start
	  int rows_start = 0;
	  int rows_mid = 0;
	  int rows_goal = 0;

	  float strange_dist = 1.1; //meter
	  float angel_dist = 0.5; //radian

	  float Smallest_dist = 9999;
	  float Temp_dist = 0;
	  float Temp_point[4] = {0};

	  //Find where do the robot go
	  for (int i = 0; i<Zone_number; i++){
		  if ((abs(goal.pose.position.x - Zone[i][0]) <= 0.1)&&(abs(goal.pose.position.y - Zone[i][1])<=0.1)){
			  switch (i+1){
			  	case To_D1:
			  		 ROS_INFO("Robot will go to D1 Zone");
			  		 goal_case = To_D1;
			  		 break;
			  	case To_D2:
			  		 ROS_INFO("Robot will go to D2 Zone");
			  		 goal_case = To_D2;
			  		 break;
			  	case To_P1:
			  		 ROS_INFO("Robot will go to P1 Zone");
			  		 goal_case = To_P1;
			  		 break;
			  	case To_P2:
			  		 ROS_INFO("Robot will go to P2 Zone");
			  		 goal_case = To_P2;
			  		 break;
			  	case To_C1:
			  		 ROS_INFO("Robot will go to C1 Zone");
			  		 goal_case = To_C1;
			  		 break;
					case To_S1:
						 ROS_INFO("Robot will go to S1 Zone");
					   goal_case = To_S1;
						 break;
					case To_S2:
						 ROS_INFO("Robot will go to S2 Zone");
						 goal_case = To_S2;
						 break;
			  	default:
			  		 ROS_INFO("Goal is not valid");
					 break;
			  }
		  }
	  }

	  //Find where is the robot
	  for (int i = 0; i<Zone_number; i++){
		  if ((abs(currentZ - Zone[i][2])<=angel_dist)&&(abs(currentW - Zone[i][3])<=angel_dist)){
			  Temp_dist = sqrt(pow((Zone[i][0] - currentX),2) + pow((Zone[i][1] - currentY),2));
			  if (Temp_dist < Smallest_dist){
				  Smallest_dist = Temp_dist;
				  start_case = i+1;
				  Temp_point[0] = Zone[i][0];
				  Temp_point[1] = Zone[i][1];
				  Temp_point[2] = Zone[i][2];
				  Temp_point[3] = Zone[i][3];
			  }
		  }
	  }

	  //If robot needs a straight line
	  switch (start_case){
	  	case From_D1:
	  		ROS_INFO("Robot is at D1 Zone");
			if ((abs(currentX - Zone[From_D1-1][0])>strange_dist)||(abs(currentY - Zone[From_D1-1][1])>strange_dist)){
				replan = true;
				ROS_INFO("Straight line will be created");
			}
			break;
	  	case From_D2:
	  		ROS_INFO("Robot is at D2 Zone");
			if ((abs(currentX - Zone[From_D2-1][0])>strange_dist)||(abs(currentY - Zone[From_D2-1][1])>strange_dist)){
				replan = true;
				ROS_INFO("Straight line will be created");
			}
			break;
	  	case From_P1:
	  		ROS_INFO("Robot is at P1 Zone");
			if ((abs(currentX - Zone[From_P1-1][0])>strange_dist)||(abs(currentY - Zone[From_P1-1][1])>strange_dist)){
				replan = true;
				ROS_INFO("Straight line will be created");
			}
			break;
	  	case From_P2:
	  		ROS_INFO("Robot is at P2 Zone");
			if ((abs(currentX - Zone[From_P2-1][0])>strange_dist)||(abs(currentY - Zone[From_P2-1][1])>strange_dist)){
				replan = true;
				ROS_INFO("Straight line will be created");
			}
			break;
	  	case From_C1:
	  		ROS_INFO("Robot is at C1 Zone");
			if ((abs(currentX - Zone[From_C1-1][0])>strange_dist)||(abs(currentY - Zone[From_C1-1][1])>strange_dist)){
				replan = true;
				ROS_INFO("Straight line will be created");
			}
			break;
			case From_S1:
	  		ROS_INFO("Robot is at S1 Zone");
			//if ((abs(currentX - Zone[From_S1-1][0])>strange_dist)||(abs(currentY - Zone[From_S1-1][1])>strange_dist)){
			//	replan = true;
			//	ROS_INFO("Straight line will be created");
			//}
			break;
			case From_S2:
	  		ROS_INFO("Robot is at S2 Zone");
			//if ((abs(currentX - Zone[From_S2-1][0])>strange_dist)||(abs(currentY - Zone[From_S2-1][1])>strange_dist)){
			//	replan = true;
			//	ROS_INFO("Straight line will be created");
			//}
			break;
	  	default:
	  		ROS_INFO("Start is not valid");
			break;
	  }

	  if (start_case == goal_case){
			replan = true;
			start_case = goal_case = 0;
	  }
	  if (replan == true){
			//////////(cross the line)////////////
			if (((start_case == From_P1)&&(goal_case == To_C1))||((start_case == From_P1)&&(goal_case == To_S1)))
			{
				Temp_point[0] = 11.4;
				Temp_point[1] = -1.5;
			}
			else if (((start_case == From_P2)&&(goal_case == To_C1))||((start_case == From_P2)&&(goal_case == To_S1)))
			{
				Temp_point[0] = 11.4;
				Temp_point[1] = 0.4;
			}
			//////////////////////////////////////
			float th = 0;
			float x_vec = 0.0;
			float y_vec = 0.0;

			th = atan2f(Temp_point[1]-currentY,Temp_point[0]-currentX);
			if (th>PI)
				th = th - 2*PI;
			else if (th<-PI)
				th = th + 2*PI;

			while (abs(currentX - Temp_point[0])>=0.1||abs(currentY - Temp_point[1])>=0.1){

	    		x_vec = 0.1*cos(th);
	    		y_vec = 0.1*sin(th);

	    		pose.pose.position.x = currentX + x_vec;
	    		pose.pose.position.y = currentY + y_vec;
	    		pose.pose.position.z = 0.0;

	    		pose.pose.orientation.x = 0.0;
	    		pose.pose.orientation.y = 0.0;
	    		pose.pose.orientation.z = sin(th/2);
	    		pose.pose.orientation.w = cos(th/2);

	    		plan.push_back(pose);

	    		path.x = currentX;
	    		path.y = currentY;
	    		//pub_plan.publish(path);

	    		pos_array.data.push_back((float)path.x);
	    		pos_array.data.push_back((float)path.y);

	    		currentX = currentX + x_vec;
	    		currentY = currentY + y_vec;
	    		}

	    		pose.pose.position.x = Temp_point[0];
	    		pose.pose.position.y = Temp_point[1];
	    		pose.pose.position.z = 0.0;
	    		pose.pose.orientation.x = 0.0;
	    		pose.pose.orientation.y = 0.0;
	    		pose.pose.orientation.z = Temp_point[2];
	    		pose.pose.orientation.w = Temp_point[3];
	    		plan.push_back(pose);
			replan = false;
	  }

	  //Publish line
	  switch (start_case){
	  	case From_D1:
		    if (goal_case == To_S2){
		  		rows_start =  sizeof D1_S2 / sizeof D1_S2[0];
				for (int i=0;i<rows_start;i++){
					pose.pose.position.x = D1_S2[i][0];
					pose.pose.position.y = D1_S2[i][1];
					pose.pose.position.z = 0.0;

					pose.pose.orientation.x = 0.0;
					pose.pose.orientation.y = 0.0;
					pose.pose.orientation.z = D1_S2[i][2];
					pose.pose.orientation.w = D1_S2[i][3];

					plan.push_back(pose);

					path.x = D1_S2[i][0];
					path.y = D1_S2[i][1];

					pos_array.data.push_back((float)path.x);
					pos_array.data.push_back((float)path.y);
				}
			}
		    else{
		    	ROS_INFO("From D1 is not valid");
		    	start_case = goal_case = 0;
		    }
	  		break;

	  	case From_D2:
		    if (goal_case == To_S2){
		  		rows_start =  sizeof D2_S2 / sizeof D2_S2[0];
				for (int i=0;i<rows_start;i++){
					pose.pose.position.x = D2_S2[i][0];
					pose.pose.position.y = D2_S2[i][1];
					pose.pose.position.z = 0.0;

					pose.pose.orientation.x = 0.0;
					pose.pose.orientation.y = 0.0;
					pose.pose.orientation.z = D2_S2[i][2];
					pose.pose.orientation.w = D2_S2[i][3];

					plan.push_back(pose);

					path.x = D2_S2[i][0];
					path.y = D2_S2[i][1];

					pos_array.data.push_back((float)path.x);
					pos_array.data.push_back((float)path.y);
				}
			}
		    else{
		    	ROS_INFO("From D2 is not valid");
		    	start_case = goal_case = 0;
		    }
	  		break;

	  	case From_P1:
		    if (goal_case == To_S1){
		  		rows_start =  sizeof P1_S1 / sizeof P1_S1[0];
				for (int i=0;i<rows_start;i++){
					pose.pose.position.x = P1_S1[i][0];
					pose.pose.position.y = P1_S1[i][1];
					pose.pose.position.z = 0.0;

					pose.pose.orientation.x = 0.0;
					pose.pose.orientation.y = 0.0;
					pose.pose.orientation.z = P1_S1[i][2];
					pose.pose.orientation.w = P1_S1[i][3];

					plan.push_back(pose);

					path.x = P1_S1[i][0];
					path.y = P1_S1[i][1];

					pos_array.data.push_back((float)path.x);
					pos_array.data.push_back((float)path.y);
				}
			}
		    else if (goal_case == To_C1){
		  		rows_start =  sizeof P1_C1 / sizeof P1_C1[0];
				for (int i=0;i<rows_start;i++){
					pose.pose.position.x = P1_C1[i][0];
					pose.pose.position.y = P1_C1[i][1];
					pose.pose.position.z = 0.0;

					pose.pose.orientation.x = 0.0;
					pose.pose.orientation.y = 0.0;
					pose.pose.orientation.z = P1_C1[i][2];
					pose.pose.orientation.w = P1_C1[i][3];

					plan.push_back(pose);

					path.x = P1_C1[i][0];
					path.y = P1_C1[i][1];

					pos_array.data.push_back((float)path.x);
					pos_array.data.push_back((float)path.y);
				}
		    }
		    else{
		    	ROS_INFO("From P1 is not valid");
		    	start_case = goal_case = 0;
		    }
	  		break;

	  	case From_P2:
		    if (goal_case == To_S1){
		  		rows_start =  sizeof P2_S1 / sizeof P2_S1[0];
				for (int i=0;i<rows_start;i++){
					pose.pose.position.x = P2_S1[i][0];
					pose.pose.position.y = P2_S1[i][1];
					pose.pose.position.z = 0.0;

					pose.pose.orientation.x = 0.0;
					pose.pose.orientation.y = 0.0;
					pose.pose.orientation.z = P2_S1[i][2];
					pose.pose.orientation.w = P2_S1[i][3];

					plan.push_back(pose);

					path.x = P2_S1[i][0];
					path.y = P2_S1[i][1];

					pos_array.data.push_back((float)path.x);
					pos_array.data.push_back((float)path.y);
				}
			}
		    else if (goal_case == To_C1){
		  		rows_start =  sizeof P2_C1 / sizeof P2_C1[0];
				for (int i=0;i<rows_start;i++){
					pose.pose.position.x = P2_C1[i][0];
					pose.pose.position.y = P2_C1[i][1];
					pose.pose.position.z = 0.0;

					pose.pose.orientation.x = 0.0;
					pose.pose.orientation.y = 0.0;
					pose.pose.orientation.z = P2_C1[i][2];
					pose.pose.orientation.w = P2_C1[i][3];

					plan.push_back(pose);

					path.x = P2_C1[i][0];
					path.y = P2_C1[i][1];

					pos_array.data.push_back((float)path.x);
					pos_array.data.push_back((float)path.y);
				}
		    }
		    else{
		    	ROS_INFO("From P2 is not valid");
		    	start_case = goal_case = 0;
		    }
	  		break;

	  	case From_C1:
		    if (goal_case == To_S1){
		  		rows_start =  sizeof C1_S1 / sizeof C1_S1[0];
				for (int i=0;i<rows_start;i++){
					pose.pose.position.x = C1_S1[i][0];
					pose.pose.position.y = C1_S1[i][1];
					pose.pose.position.z = 0.0;

					pose.pose.orientation.x = 0.0;
					pose.pose.orientation.y = 0.0;
					pose.pose.orientation.z = C1_S1[i][2];
					pose.pose.orientation.w = C1_S1[i][3];

					plan.push_back(pose);

					path.x = C1_S1[i][0];
					path.y = C1_S1[i][1];

					pos_array.data.push_back((float)path.x);
					pos_array.data.push_back((float)path.y);
				}
			  }
		    else{
		    	ROS_INFO("From C1 is not valid");
		    	start_case = goal_case = 0;
		    }
	  		break;

				case From_S1:
			    if (goal_case == To_D1){
			  		rows_start =  sizeof S1_D1 / sizeof S1_D1[0];
					for (int i=0;i<rows_start;i++){
						pose.pose.position.x = S1_D1[i][0];
						pose.pose.position.y = S1_D1[i][1];
						pose.pose.position.z = 0.0;

						pose.pose.orientation.x = 0.0;
						pose.pose.orientation.y = 0.0;
						pose.pose.orientation.z = S1_D1[i][2];
						pose.pose.orientation.w = S1_D1[i][3];

						plan.push_back(pose);

						path.x = S1_D1[i][0];
						path.y = S1_D1[i][1];

						pos_array.data.push_back((float)path.x);
						pos_array.data.push_back((float)path.y);
					}
				}
			   else if (goal_case == To_D2){
			  		rows_start =  sizeof S1_D2 / sizeof S1_D2[0];
					for (int i=0;i<rows_start;i++){
						pose.pose.position.x = S1_D2[i][0];
						pose.pose.position.y = S1_D2[i][1];
						pose.pose.position.z = 0.0;

						pose.pose.orientation.x = 0.0;
						pose.pose.orientation.y = 0.0;
						pose.pose.orientation.z = S1_D2[i][2];
						pose.pose.orientation.w = S1_D2[i][3];

						plan.push_back(pose);

						path.x = S1_D2[i][0];
						path.y = S1_D2[i][1];

						pos_array.data.push_back((float)path.x);
						pos_array.data.push_back((float)path.y);
					}
			    }
			    else{
			    	ROS_INFO("From S1 is not valid");
			    	start_case = goal_case = 0;
			    }
		  		break;

					case From_S2:
				    if (goal_case == To_P1){
				  		rows_start =  sizeof S2_P1 / sizeof S2_P1[0];
						for (int i=0;i<rows_start;i++){
							pose.pose.position.x = S2_P1[i][0];
							pose.pose.position.y = S2_P1[i][1];
							pose.pose.position.z = 0.0;

							pose.pose.orientation.x = 0.0;
							pose.pose.orientation.y = 0.0;
							pose.pose.orientation.z = S2_P1[i][2];
							pose.pose.orientation.w = S2_P1[i][3];

							plan.push_back(pose);

							path.x = S2_P1[i][0];
							path.y = S2_P1[i][1];

							pos_array.data.push_back((float)path.x);
							pos_array.data.push_back((float)path.y);
						}
					}
				    else if (goal_case == To_P2){
				  		rows_start =  sizeof S2_P2 / sizeof S2_P2[0];
						for (int i=0;i<rows_start;i++){
							pose.pose.position.x = S2_P2[i][0];
							pose.pose.position.y = S2_P2[i][1];
							pose.pose.position.z = 0.0;

							pose.pose.orientation.x = 0.0;
							pose.pose.orientation.y = 0.0;
							pose.pose.orientation.z = S2_P2[i][2];
							pose.pose.orientation.w = S2_P2[i][3];

							plan.push_back(pose);

							path.x = S2_P2[i][0];
							path.y = S2_P2[i][1];

							pos_array.data.push_back((float)path.x);
							pos_array.data.push_back((float)path.y);
						}
				    }
				    else{
				    	ROS_INFO("From S2 is not valid");
				    	start_case = goal_case = 0;
				    }
			  		break;

	  	}
	  	pub_plan_array.publish(pos_array);

  }
  else
  {
    ROS_WARN("Not valid start or goal");
    cout<<"Got goal: "<<goalX_<<", "<<goalY_<<endl;
    cout<<"Got start: "<<currentX<<", "<<currentY<<endl;
    return false;
  }

}
void PP_PlannerROS::getCorrdinate(float& x, float& y)
{

  x = x - originX;
  y = y - originY;

}

int PP_PlannerROS::convertToCellIndex(float x, float y)
{

  int cellIndex;

  float newX = x / resolution;
  float newY = y / resolution;

  cellIndex = getCellIndex(newY, newX);

  return cellIndex;
}

void PP_PlannerROS::convertToCoordinate(int index, float& x, float& y)
{
  x = getCellColID(index) * resolution;
  y = getCellRowID(index) * resolution;
  x = x + originX;
  y = y + originY;
}

bool PP_PlannerROS::isCellInsideMap(float x, float y)
{
  bool valid = true;
  if (x > (width * resolution) || y > (height * resolution))
    valid = false;
  return valid;
}

void PP_PlannerROS::mapToWorld(double mx, double my, double& wx, double& wy){
   costmap_2d::Costmap2D* costmap = costmap_ros_->getCostmap();
    wx = costmap->getOriginX() + mx * resolution;
    wy = costmap->getOriginY() + my * resolution;
}

vector<int> PP_PlannerROS::PP_Planner(int startCell, int goalCell){

   vector<int> bestPath;


//float g_score [mapSize][2];
float g_score [mapSize];

for (uint i=0; i<mapSize; i++)
	g_score[i]=infinity;

   timespec time1, time2;
  /* take current time here */
   clock_gettime(CLOCK_PROCESS_CPUTIME_ID, &time1);

  bestPath=findPath(startCell, goalCell,  g_score);

   clock_gettime(CLOCK_PROCESS_CPUTIME_ID, &time2);

   cout<<"time to generate best global path by Relaxed A* = " << (diff(time1,time2).tv_sec)*1e3 + (diff(time1,time2).tv_nsec)*1e-6 << " microseconds" << endl;

   MyExcelFile <<"\t"<< (diff(time1,time2).tv_sec)*1e3 + (diff(time1,time2).tv_nsec)*1e-6 ;

  return bestPath;
}


/*******************************************************************************/
//Function Name: findPath
//Inputs: the map layout, the start and the goal Cells and a boolean to indicate if we will use break ties or not
//Output: the best path
//Description: it is used to generate the robot free path
/*********************************************************************************/
vector<int> PP_PlannerROS::findPath(int startCell, int goalCell, float g_score[])
{
	value++;
	vector<int> bestPath;
	vector<int> emptyPath;
	cells CP;

	multiset<cells> OPL;
	int currentCell;

	//calculate g_score and f_score of the start position
	g_score[startCell]=0;
	CP.currentCell=startCell;
	CP.fCost=g_score[startCell]+calculateHCost(startCell,goalCell);

	//add the start cell to the open list
	OPL.insert(CP);
	currentCell=startCell;

	//while the open list is not empty continuie the search or g_score(goalCell) is equal to infinity
	while (!OPL.empty()&& g_score[goalCell]==infinity)
	{
		//choose the cell that has the lowest cost fCost in the open set which is the begin of the multiset
		currentCell = OPL.begin()->currentCell;
		//remove the currentCell from the openList
		OPL.erase(OPL.begin());
		//search the neighbors of the current Cell
		vector <int> neighborCells;
		neighborCells=findFreeNeighborCell(currentCell);
		for(uint i=0; i<neighborCells.size(); i++) //for each neighbor v of current cell
		{
			// if the g_score of the neighbor is equal to INF: unvisited cell
			if(g_score[neighborCells[i]]==infinity)
			{
				g_score[neighborCells[i]]=g_score[currentCell]+getMoveCost(currentCell,neighborCells[i]);
				addNeighborCellToOpenList(OPL, neighborCells[i], goalCell, g_score);
			}//end if
		}//end for
	}//end while

	if(g_score[goalCell]!=infinity)  // if g_score(goalcell)==INF : construct path
	{
		bestPath=constructPath(startCell, goalCell, g_score);
		return   bestPath;
	}
	else
	{
		cout << "Failure to find a path !" << endl;
		return emptyPath;
	}
}

/*******************************************************************************/
//Function Name: constructPath
//Inputs: the start and the goal Cells
//Output: the best path
//Description: it is used to construct the robot path
/*********************************************************************************/
vector<int> PP_PlannerROS::constructPath(int startCell, int goalCell,float g_score[])
{
	vector<int> bestPath;
	vector<int> path;

	path.insert(path.begin()+bestPath.size(), goalCell);
	int currentCell=goalCell;

	while(currentCell!=startCell)
	{
		vector <int> neighborCells;
		neighborCells=findFreeNeighborCell(currentCell);

		vector <float> gScoresNeighbors;
		for(uint i=0; i<neighborCells.size(); i++)
			gScoresNeighbors.push_back(g_score[neighborCells[i]]);

		int posMinGScore=distance(gScoresNeighbors.begin(), min_element(gScoresNeighbors.begin(), gScoresNeighbors.end()));
		currentCell=neighborCells[posMinGScore];

		//insert the neighbor in the path
		path.insert(path.begin()+path.size(), currentCell);
	}
	for(uint i=0; i<path.size(); i++)
		bestPath.insert(bestPath.begin()+bestPath.size(), path[path.size()-(i+1)]);

	return bestPath;
}

/*******************************************************************************/
//Function Name: calculateHCost
//Inputs:the cellID and the goalCell
//Output: the distance between the current cell and the goal cell
//Description: it is used to calculate the hCost
/*********************************************************************************/
/*
float RAstarPlannerROS::calculateHCost(int cellID, int goalCell)
{
  int x1=getCellRowID(goalCell);
  int y1=getCellColID(goalCell);
  int x2=getCellRowID(cellID);
  int y2=getCellColID(cellID);

  //if(getNeighborNumber()==4)
    //The diagonal shortcut distance between two grid points (x1,y1) and (x2,y2) is:
    //  return min(abs(x1-x2),abs(y1-y2))*sqrt(2) + max(abs(x1-x2),abs(y1-y2))-min(abs(x1-x2),abs(y1-y2));

  //else
    //manhatten distance for 8 neighbor
    return abs(x1-x2)+abs(y1-y2);
}
*/
/*******************************************************************************/
//Function Name: addNeighborCellToOpenList
//Inputs: the open list, the neighbors Cell, the g_score matrix, the goal cell
//Output:
//Description: it is used to add a neighbor Cell to the open list
/*********************************************************************************/
void PP_PlannerROS::addNeighborCellToOpenList(multiset<cells> & OPL, int neighborCell, int goalCell, float g_score[])
{
	cells CP;
	CP.currentCell=neighborCell; //insert the neighbor cell
	CP.fCost=g_score[neighborCell]+calculateHCost(neighborCell,goalCell);
	OPL.insert(CP);
	//multiset<cells>::iterator it = OPL.lower_bound(CP);
	//multiset<cells>::iterator it = OPL.upper_bound(CP);
	//OPL.insert( it, CP  );
}

  /*******************************************************************************
 * Function Name: findFreeNeighborCell
 * Inputs: the row and columun of the current Cell
 * Output: a vector of free neighbor cells of the current cell
 * Description:it is used to find the free neighbors Cells of a the current Cell in the grid
 * Check Status: Checked by Anis, Imen and Sahar
*********************************************************************************/

vector <int> PP_PlannerROS::findFreeNeighborCell (int CellID){

  int rowID=getCellRowID(CellID);
  int colID=getCellColID(CellID);
  int neighborIndex;
  vector <int>  freeNeighborCells;

  for (int i=-1;i<=1;i++)
    for (int j=-1; j<=1;j++){
      //check whether the index is valid
     if ((rowID+i>=0)&&(rowID+i<height)&&(colID+j>=0)&&(colID+j<width)&& (!(i==0 && j==0))){
	neighborIndex = getCellIndex(rowID+i,colID+j);
        if(isFree(neighborIndex) )
	    freeNeighborCells.push_back(neighborIndex);
	}
    }
    return  freeNeighborCells;

}

/*******************************************************************************/
//Function Name: isStartAndGoalCellsValid
//Inputs: the start and Goal cells
//Output: true if the start and the goal cells are valid
//Description: check if the start and goal cells are valid
/*********************************************************************************/
bool PP_PlannerROS::isStartAndGoalCellsValid(int startCell,int goalCell)
{
 bool isvalid=true;
 bool isFreeStartCell=isFree(startCell);
 bool isFreeGoalCell=isFree(goalCell);
    if (startCell==goalCell)
    {
    cout << "The Start and the Goal cells are the same..." << endl;
    isvalid = false;
    }
   else
   {
      if (!isFreeStartCell && !isFreeGoalCell)
      {
	cout << "The start and the goal cells are obstacle positions..." << endl;
        isvalid = false;
      }
      else
      {
	if (!isFreeStartCell)
	{
	  cout << "The start is an obstacle..." << endl;
	  isvalid = false;
	}
	else
	{
	    if(!isFreeGoalCell)
	    {
	      cout << "The goal cell is an obstacle..." << endl;
	      isvalid = false;
	    }
	    else
	    {
	      if (findFreeNeighborCell(goalCell).size()==0)
	      {
		cout << "The goal cell is encountred by obstacles... "<< endl;
		isvalid = false;
	      }
	      else
	      {
		if(findFreeNeighborCell(startCell).size()==0)
		{
		  cout << "The start cell is encountred by obstacles... "<< endl;
		  isvalid = false;
		}
	      }
	    }
	}
      }
  }
 return isvalid;
}


 float  PP_PlannerROS::getMoveCost(int i1, int j1, int i2, int j2){
   float moveCost=INFINIT_COST;//start cost with maximum value. Change it to real cost of cells are connected
   //if cell2(i2,j2) exists in the diagonal of cell1(i1,j1)
   if((j2==j1+1 && i2==i1+1)||(i2==i1-1 && j2==j1+1) ||(i2==i1-1 && j2==j1-1)||(j2==j1-1 && i2==i1+1)){
     //moveCost = DIAGONAL_MOVE_COST;
     moveCost = 1.4;
   }
    //if cell 2(i2,j2) exists in the horizontal or vertical line with cell1(i1,j1)
   else{
     if ((j2==j1 && i2==i1-1)||(i2==i1 && j2==j1-1)||(i2==i1+1 && j2==j1) ||(i1==i2 && j2==j1+1)){
       //moveCost = MOVE_COST;
       moveCost = 1;
     }
   }
   return moveCost;
 }

  float  PP_PlannerROS::getMoveCost(int CellID1, int CellID2){
   int i1=0,i2=0,j1=0,j2=0;

   i1=getCellRowID(CellID1);
   j1=getCellColID(CellID1);
   i2=getCellRowID(CellID2);
   j2=getCellColID(CellID2);

    return getMoveCost(i1, j1, i2, j2);
 }


 //verify if the cell(i,j) is free
 bool  PP_PlannerROS::isFree(int i, int j){
   int CellID = getCellIndex(i, j);
 return OGM[CellID];

 }

  //verify if the cell(i,j) is free
 bool  PP_PlannerROS::isFree(int CellID){
 return OGM[CellID];
 }
};

bool operator<(cells const &c1, cells const &c2) { return c1.fCost < c2.fCost; }
