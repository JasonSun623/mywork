/* iPath: A C++ Library of Intelligent Global Path Planners for Mobile Robots with ROS Integration.
 * Website: http://www.iroboapp.org/index.php?title=IPath
 * Contact:
 *
 * Copyright (c) 2014
 * Owners: Al-Imam University/King AbdulAziz Center for Science and Technology (KACST)/Prince Sultan University
 * All rights reserved.
 *
 * License Type: GNU GPL
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <string>

#include "PP_ros.h"

#include <pluginlib/class_list_macros.h>

#include <math.h>
#include <algorithm>

#include <geometry_msgs/Vector3.h>
#include <std_msgs/Float32MultiArray.h>

//register this planner as a BaseGlobalPlanner plugin
PLUGINLIB_EXPORT_CLASS(PP_planner::PP_PlannerROS, nav_core::BaseGlobalPlanner)

#define PI 3.141592653589

#define To_A1 1
#define To_B1 2
#define To_C1 3
#define To_A2 4
#define To_B2 5
#define To_C2 6
#define To_Charge 7
//#define Out_line 7

#define From_A1 1
#define From_B1 2
#define From_C1 3
#define From_A2 4
#define From_B2 5
#define From_C2 6
#define From_Charge 7

int value;
int mapSize;
bool* OGM;
static const float INFINIT_COST = INT_MAX; //!< cost of non connected nodes
float infinity = std::numeric_limits< float >::infinity();
float tBreak;  // coefficient for breaking ties
ofstream MyExcelFile ("PP_result.xlsx", ios::trunc);

//ros::Publisher pub_plan;
ros::Publisher pub_plan_array;

int clock_gettime(clockid_t clk_id, struct timespect *tp);

timespec diff(timespec start, timespec end)
{
  timespec temp;
	if ((end.tv_nsec-start.tv_nsec)<0) {
		temp.tv_sec = end.tv_sec-start.tv_sec-1;
		temp.tv_nsec = 1000000000+end.tv_nsec-start.tv_nsec;
	} else {
		temp.tv_sec = end.tv_sec-start.tv_sec;
		temp.tv_nsec = end.tv_nsec-start.tv_nsec;
	}
	return temp;
}

inline vector <int> findFreeNeighborCell (int CellID);

namespace PP_planner
{

//Default Constructor
PP_PlannerROS::PP_PlannerROS()
{

}
PP_PlannerROS::PP_PlannerROS(ros::NodeHandle &nh)
{
  ROSNodeHandle = nh;

}

PP_PlannerROS::PP_PlannerROS(std::string name, costmap_2d::Costmap2DROS* costmap_ros)
{
  initialize(name, costmap_ros);
}

void PP_PlannerROS::initialize(std::string name, costmap_2d::Costmap2DROS* costmap_ros)
{

  if (!initialized_)
  {
    costmap_ros_ = costmap_ros;
    costmap_ = costmap_ros_->getCostmap();

    ros::NodeHandle private_nh("~/" + name);

    originX = costmap_->getOriginX();
    originY = costmap_->getOriginY();

	width = costmap_->getSizeInCellsX();
	height = costmap_->getSizeInCellsY();
	resolution = costmap_->getResolution();
	//resolution = 0.1;
	mapSize = width*height;
	tBreak = 1+1/(mapSize);
	value =0;

	ros::NodeHandle nh;
	//pub_plan = nh.advertise<geometry_msgs::Vector3>("plan_pos",1000);
	pub_plan_array = nh.advertise<std_msgs::Float32MultiArray>("path_finder",1000);

	OGM = new bool [mapSize];
    for (unsigned int iy = 0; iy < costmap_->getSizeInCellsY(); iy++)
    {
      for (unsigned int ix = 0; ix < costmap_->getSizeInCellsX(); ix++)
      {
        unsigned int cost = static_cast<int>(costmap_->getCost(ix, iy));
        //cout<<cost;
        if (cost == 0)
          OGM[iy*width+ix]=true;
        else
          OGM[iy*width+ix]=false;
      }
    }


	MyExcelFile << "StartID\tStartX\tStartY\tGoalID\tGoalX\tGoalY\tPlannertime(ms)\tpathLength\tnumberOfCells\t" << endl;

    ROS_INFO("PP_planner initialized successfully");
    initialized_ = true;
  }
  else
    ROS_WARN("This planner has already been initialized... doing nothing");
}

bool PP_PlannerROS::makePlan(const geometry_msgs::PoseStamped& start, const geometry_msgs::PoseStamped& goal,
                             std::vector<geometry_msgs::PoseStamped>& plan)
{

  if (!initialized_)
  {
    ROS_ERROR("The planner has not been initialized, please call initialize() to use the planner");
    return false;
  }

  ROS_DEBUG("Got a start: %.2f, %.2f, and a goal: %.2f, %.2f", start.pose.position.x, start.pose.position.y,
            goal.pose.position.x, goal.pose.position.y);

  plan.clear();

  if (goal.header.frame_id != costmap_ros_->getGlobalFrameID())
  {
    ROS_ERROR("This planner as configured will only accept goals in the %s frame, but a goal was sent in the %s frame.",
              costmap_ros_->getGlobalFrameID().c_str(), goal.header.frame_id.c_str());
    return false;
  }

  tf::Stamped < tf::Pose > goal_tf;
  tf::Stamped < tf::Pose > start_tf;

  poseStampedMsgToTF(goal, goal_tf);
  poseStampedMsgToTF(start, start_tf);

  // convert the start and goal positions

  /*
  float Pick_Release[113][4] = {
 		{8,-1.6,0.999974,0.00724579},
		  {-10.3,-1.75,0,1}
  };

  float Release_Pick[185][4] = {
		  {-10.3,-1.8,-0.00409826,0.999992},
		  {8,-1.6,1,0}
  };
  */

  //zone 2 => zone 1
  float Two_One [79][4] = {
		  {-5.43323794717641,-1.73022656522215,-0.00221246346875011,0.999997552499705},
		  {-5.33323892617533,-1.7306690568329,-0.00221246346875026,0.999997552499705},
		  {-5.23323990517425,-1.73111154844365,-0.00221246346875026,0.999997552499705},
		  {-5.13324088417317,-1.7315540400544,-0.00221246346875026,0.999997552499705},
		  {-5.03324186317209,-1.73199653166515,-0.00221246346875026,0.999997552499705},
		  {-4.93324284217101,-1.7324390232759,-0.00221246346875026,0.999997552499705},
		  {-4.83324382116993,-1.73288151488665,-0.00221246346875026,0.999997552499705},
		  {-4.73324480016885,-1.73332400649739,-0.00221246346875026,0.999997552499705},
		  {-4.63324577916777,-1.73376649810814,-0.00221246346875026,0.999997552499705},
		  {-4.53324675816669,-1.73420898971889,-0.00221246346875026,0.999997552499705},
		  {-4.43324773716561,-1.73465148132964,-0.00221246346875026,0.999997552499705},
		  {-4.33324871616453,-1.73509397294039,-0.00221246346875026,0.999997552499705},
		  {-4.23324969516345,-1.73553646455114,-0.00221246346875026,0.999997552499705},
		  {-4.13325067416237,-1.73597895616189,-0.00221246346875026,0.999997552499705},
		  {-4.03325165316129,-1.73642144777264,-0.00221246346875026,0.999997552499705},
		  {-3.93325263216021,-1.73686393938339,-0.00221246346875026,0.999997552499705},
		  {-3.83325361115913,-1.73730643099414,-0.00221246346875026,0.999997552499705},
		  {-3.73325459015805,-1.73774892260489,-0.00221246346875026,0.999997552499705},
		  {-3.63325556915697,-1.73819141421564,-0.00221246346875026,0.999997552499705},
		  {-3.53325654815589,-1.73863390582639,-0.00221246346875026,0.999997552499705},
		  {-3.43325752715481,-1.73907639743713,-0.00221246346875026,0.999997552499705},
		  {-3.33325850615373,-1.73951888904788,-0.00221246346875026,0.999997552499705},
		  {-3.23325948515265,-1.73996138065863,-0.00221246346875026,0.999997552499705},
		  {-3.13326046415157,-1.74040387226938,-0.00221246346875026,0.999997552499705},
		  {-3.03326144315049,-1.74084636388013,-0.00221246346875026,0.999997552499705},
		  {-2.93326242214941,-1.74128885549088,-0.00221246346875026,0.999997552499705},
		  {-2.83326340114833,-1.74173134710163,-0.00221246346875026,0.999997552499705},
		  {-2.73326438014725,-1.74217383871238,-0.00221246346875026,0.999997552499705},
		  {-2.63326535914617,-1.74261633032313,-0.00221246346875026,0.999997552499705},
		  {-2.53326633814509,-1.74305882193388,-0.00221246346875026,0.999997552499705},
		  {-2.43326731714401,-1.74350131354463,-0.00221246346875026,0.999997552499705},
		  {-2.33326829614293,-1.74394380515538,-0.00221246346875026,0.999997552499705},
		  {-2.23326927514185,-1.74438629676613,-0.00221246346875026,0.999997552499705},
		  {-2.13327025414077,-1.74482878837687,-0.00221246346875026,0.999997552499705},
		  {-2.03327123313969,-1.74527127998762,-0.00221246346875026,0.999997552499705},
		  {-1.93327221213861,-1.74571377159837,-0.00221246346875026,0.999997552499705},
		  {-1.83327319113753,-1.74615626320912,-0.00221246346875026,0.999997552499705},
		  {-1.73327417013645,-1.74659875481987,-0.00221246346875026,0.999997552499705},
		  {-1.63327514913537,-1.74704124643062,-0.00221246346875026,0.999997552499705},
		  {-1.53327612813429,-1.74748373804137,-0.00221246346875026,0.999997552499705},
		  {-1.43327710713321,-1.74792622965212,-0.00221246346875026,0.999997552499705},
		  {-1.33327808613213,-1.74836872126287,-0.00221246346875026,0.999997552499705},
		  {-1.23327906513105,-1.74881121287362,-0.00221246346875026,0.999997552499705},
		  {-1.13328004412997,-1.74925370448437,-0.00221246346875026,0.999997552499705},
		  {-1.03328102312889,-1.74969619609512,-0.00221246346875026,0.999997552499705},
		  {-0.93328200212781,-1.75013868770587,-0.00221246346875026,0.999997552499705},
		  {-0.83328298112673,-1.75058117931661,-0.00221246346875026,0.999997552499705},
		  {-0.73328396012565,-1.75102367092736,-0.00221246346875026,0.999997552499705},
		  {-0.633284939124571,-1.75146616253811,-0.00221246346875026,0.999997552499705},
		  {-0.533285918123491,-1.75190865414886,-0.00221246346875026,0.999997552499705},
		  {-0.433286897122411,-1.75235114575961,-0.00221246346875026,0.999997552499705},
		  {-0.333287876121331,-1.75279363737036,-0.00221246346875026,0.999997552499705},
		  {-0.233288855120251,-1.75323612898111,-0.00221246346875026,0.999997552499705},
		  {-0.133289834119171,-1.75367862059186,-0.00221246346875026,0.999997552499705},
		  {-0.0332908131180913,-1.75412111220261,-0.00221246346875026,0.999997552499705},
		  {0.0667082078829886,-1.75456360381336,-0.00221246346875026,0.999997552499705},
		  {0.166707228884068,-1.75500609542411,-0.00221246346875026,0.999997552499705},
		  {0.266706249885148,-1.75544858703486,-0.00221246346875026,0.999997552499705},
		  {0.366705270886228,-1.75589107864561,-0.00221246346875026,0.999997552499705},
		  {0.466704291887308,-1.75633357025635,-0.00221246346875026,0.999997552499705},
		  {0.566703312888388,-1.7567760618671,-0.00221246346875026,0.999997552499705},
		  {0.666702333889468,-1.75721855347785,-0.00221246346875026,0.999997552499705},
		  {0.766701354890548,-1.7576610450886,-0.00221246346875026,0.999997552499705},
		  {0.866700375891628,-1.75810353669935,-0.00221246346875026,0.999997552499705},
		  {0.966699396892707,-1.7585460283101,-0.00221246346875026,0.999997552499705},
		  {1.06669841789379,-1.75898851992085,-0.00221246346875026,0.999997552499705},
		  {1.16669743889487,-1.7594310115316,-0.00221246346875026,0.999997552499705},
		  {1.26669645989595,-1.75987350314235,-0.00221246346875026,0.999997552499705},
		  {1.36669548089703,-1.7603159947531,-0.00221246346875026,0.999997552499705},
		  {1.46669450189811,-1.76075848636385,-0.00221246346875026,0.999997552499705},
		  {1.56669352289919,-1.7612009779746,-0.00221246346875026,0.999997552499705},
		  {1.66669254390027,-1.76164346958535,-0.00221246346875026,0.999997552499705},
		  {1.76669156490135,-1.76208596119609,-0.00221246346875026,0.999997552499705},
		  {1.86669058590243,-1.76252845280684,-0.00221246346875026,0.999997552499705},
		  {1.96668960690351,-1.76297094441759,-0.00221246346875026,0.999997552499705},
		  {2.06668862790459,-1.76341343602834,-0.00221246346875026,0.999997552499705},
		  {2.16668764890567,-1.76385592763909,-0.00221246346875026,0.999997552499705},
		  {2.26668666990675,-1.76429841924984,-0.00221246346875026,0.999997552499705},
		  {2.35226990949625,-1.76467712161271,0,1}
  };

  // zone 1 => zone 2
  float One_Two [79][4] = {
		  {2.35132433497455,-1.76058348398927,0.999995694992502,0.00293427954737002},
		  {2.25132605697384,-1.75999663060622,0.999995694992502,0.0029342795473698},
		  {2.15132777897313,-1.75940977722316,0.999995694992502,0.0029342795473698},
		  {2.05132950097243,-1.75882292384011,0.999995694992502,0.0029342795473698},
		  {1.95133122297172,-1.75823607045705,0.999995694992502,0.0029342795473698},
		  {1.85133294497101,-1.757649217074,0.999995694992502,0.0029342795473698},
		  {1.7513346669703,-1.75706236369094,0.999995694992502,0.0029342795473698},
		  {1.6513363889696,-1.75647551030789,0.999995694992502,0.0029342795473698},
		  {1.55133811096889,-1.75588865692483,0.999995694992502,0.0029342795473698},
		  {1.45133983296818,-1.75530180354178,0.999995694992502,0.0029342795473698},
		  {1.35134155496747,-1.75471495015872,0.999995694992502,0.0029342795473698},
		  {1.25134327696677,-1.75412809677567,0.999995694992502,0.0029342795473698},
		  {1.15134499896606,-1.75354124339261,0.999995694992502,0.0029342795473698},
		  {1.05134672096535,-1.75295439000956,0.999995694992502,0.0029342795473698},
		  {0.951348442964643,-1.7523675366265,0.999995694992502,0.0029342795473698},
		  {0.851350164963936,-1.75178068324345,0.999995694992502,0.0029342795473698},
		  {0.751351886963228,-1.75119382986039,0.999995694992502,0.0029342795473698},
		  {0.651353608962521,-1.75060697647734,0.999995694992502,0.0029342795473698},
		  {0.551355330961813,-1.75002012309428,0.999995694992502,0.0029342795473698},
		  {0.451357052961106,-1.74943326971123,0.999995694992502,0.0029342795473698},
		  {0.351358774960398,-1.74884641632818,0.999995694992502,0.0029342795473698},
		  {0.25136049695969,-1.74825956294512,0.999995694992502,0.0029342795473698},
		  {0.151362218958983,-1.74767270956207,0.999995694992502,0.0029342795473698},
		  {0.0513639409582752,-1.74708585617901,0.999995694992502,0.0029342795473698},
		  {-0.0486343370424324,-1.74649900279596,0.999995694992502,0.0029342795473698},
		  {-0.14863261504314,-1.7459121494129,0.999995694992502,0.0029342795473698},
		  {-0.248630893043848,-1.74532529602985,0.999995694992502,0.0029342795473698},
		  {-0.348629171044555,-1.74473844264679,0.999995694992502,0.0029342795473698},
		  {-0.448627449045263,-1.74415158926374,0.999995694992502,0.0029342795473698},
		  {-0.54862572704597,-1.74356473588068,0.999995694992502,0.0029342795473698},
		  {-0.648624005046678,-1.74297788249763,0.999995694992502,0.0029342795473698},
		  {-0.748622283047386,-1.74239102911457,0.999995694992502,0.0029342795473698},
		  {-0.848620561048093,-1.74180417573152,0.999995694992502,0.0029342795473698},
		  {-0.948618839048801,-1.74121732234846,0.999995694992502,0.0029342795473698},
		  {-1.04861711704951,-1.74063046896541,0.999995694992502,0.0029342795473698},
		  {-1.14861539505022,-1.74004361558235,0.999995694992502,0.0029342795473698},
		  {-1.24861367305092,-1.7394567621993,0.999995694992502,0.0029342795473698},
		  {-1.34861195105163,-1.73886990881625,0.999995694992502,0.0029342795473698},
		  {-1.44861022905234,-1.73828305543319,0.999995694992502,0.0029342795473698},
		  {-1.54860850705305,-1.73769620205014,0.999995694992502,0.0029342795473698},
		  {-1.64860678505375,-1.73710934866708,0.999995694992502,0.0029342795473698},
		  {-1.74860506305446,-1.73652249528403,0.999995694992502,0.0029342795473698},
		  {-1.84860334105517,-1.73593564190097,0.999995694992502,0.0029342795473698},
		  {-1.94860161905588,-1.73534878851792,0.999995694992502,0.0029342795473698},
		  {-2.04859989705658,-1.73476193513486,0.999995694992502,0.0029342795473698},
		  {-2.14859817505729,-1.73417508175181,0.999995694992502,0.0029342795473698},
		  {-2.248596453058,-1.73358822836875,0.999995694992502,0.0029342795473698},
		  {-2.34859473105871,-1.7330013749857,0.999995694992502,0.0029342795473698},
		  {-2.44859300905941,-1.73241452160264,0.999995694992502,0.0029342795473698},
		  {-2.54859128706012,-1.73182766821959,0.999995694992502,0.0029342795473698},
		  {-2.64858956506083,-1.73124081483653,0.999995694992502,0.0029342795473698},
		  {-2.74858784306154,-1.73065396145348,0.999995694992502,0.0029342795473698},
		  {-2.84858612106225,-1.73006710807042,0.999995694992502,0.0029342795473698},
		  {-2.94858439906295,-1.72948025468737,0.999995694992502,0.0029342795473698},
		  {-3.04858267706366,-1.72889340130431,0.999995694992502,0.0029342795473698},
		  {-3.14858095506437,-1.72830654792126,0.999995694992502,0.0029342795473698},
		  {-3.24857923306508,-1.72771969453821,0.999995694992502,0.0029342795473698},
		  {-3.34857751106578,-1.72713284115515,0.999995694992502,0.0029342795473698},
		  {-3.44857578906649,-1.7265459877721,0.999995694992502,0.0029342795473698},
		  {-3.5485740670672,-1.72595913438904,0.999995694992502,0.0029342795473698},
		  {-3.64857234506791,-1.72537228100599,0.999995694992502,0.0029342795473698},
		  {-3.74857062306861,-1.72478542762293,0.999995694992502,0.0029342795473698},
		  {-3.84856890106932,-1.72419857423988,0.999995694992502,0.0029342795473698},
		  {-3.94856717907003,-1.72361172085682,0.999995694992502,0.0029342795473698},
		  {-4.04856545707074,-1.72302486747377,0.999995694992502,0.0029342795473698},
		  {-4.14856373507144,-1.72243801409071,0.999995694992502,0.0029342795473698},
		  {-4.24856201307215,-1.72185116070766,0.999995694992502,0.0029342795473698},
		  {-4.34856029107286,-1.7212643073246,0.999995694992502,0.0029342795473698},
		  {-4.44855856907356,-1.72067745394155,0.999995694992502,0.0029342795473698},
		  {-4.54855684707427,-1.72009060055849,0.999995694992502,0.0029342795473698},
		  {-4.64855512507498,-1.71950374717544,0.999995694992502,0.0029342795473698},
		  {-4.74855340307569,-1.71891689379238,0.999995694992502,0.0029342795473698},
		  {-4.84855168107639,-1.71833004040933,0.999995694992502,0.0029342795473698},
		  {-4.9485499590771,-1.71774318702627,0.999995694992502,0.0029342795473698},
		  {-5.04854823707781,-1.71715633364322,0.999995694992502,0.0029342795473698},
		  {-5.14854651507852,-1.71656948026017,0.999995694992502,0.0029342795473698},
		  {-5.24854479307922,-1.71598262687711,0.999995694992502,0.0029342795473698},
		  {-5.34854307107993,-1.71539577349406,0.999995694992502,0.0029342795473698},
		  {-5.43428716818494,-1.7148925726943,0.999995694992502,0.0029342795473698}
  };
  float Two_Charge [95][4] = {
		  {-5.56,-1.75,0.00181487306596524,0.999998353116521},
		  {-5.46000065875285,-1.74963702598458,0.00181487306596524,0.999998353116521},
		  {-5.3600013175057,-1.74927405196917,0.00181487306596524,0.999998353116521},
		  {-5.26000197625855,-1.74891107795375,0.00181487306596524,0.999998353116521},
		  {-5.1600026350114,-1.74854810393834,0.00181487306596524,0.999998353116521},
		  {-5.06000329376425,-1.74818512992292,0.00181487306596524,0.999998353116521},
		  {-4.96000395251709,-1.7478221559075,0.00181487306596524,0.999998353116521},
		  {-4.86000461126994,-1.74745918189209,0.00181487306596524,0.999998353116521},
		  {-4.76000527002279,-1.74709620787667,0.00181487306596524,0.999998353116521},
		  {-4.66000592877564,-1.74673323386126,0.00181487306596524,0.999998353116521},
		  {-4.56000658752849,-1.74637025984584,0.00181487306596524,0.999998353116521},
		  {-4.46000724628134,-1.74600728583042,0.00181487306596524,0.999998353116521},
		  {-4.36000790503419,-1.74564431181501,0.00181487306596524,0.999998353116521},
		  {-4.26000856378704,-1.74528133779959,0.00181487306596524,0.999998353116521},
		  {-4.16000922253988,-1.74491836378418,0.00181487306596524,0.999998353116521},
		  {-4.06000988129273,-1.74455538976876,0.00181487306596524,0.999998353116521},
		  {-3.96001054004558,-1.74419241575334,0.00181487306596524,0.999998353116521},
		  {-3.86001119879843,-1.74382944173793,0.00181487306596524,0.999998353116521},
		  {-3.76001185755128,-1.74346646772251,0.00181487306596524,0.999998353116521},
		  {-3.66001251630413,-1.7431034937071,0.00181487306596524,0.999998353116521},
		  {-3.56001317505698,-1.74274051969168,0.00181487306596524,0.999998353116521},
		  {-3.46001383380983,-1.74237754567626,0.00181487306596524,0.999998353116521},
		  {-3.36001449256268,-1.74201457166085,0.00181487306596524,0.999998353116521},
		  {-3.26001515131552,-1.74165159764543,0.00181487306596524,0.999998353116521},
		  {-3.16001581006837,-1.74128862363002,0.00181487306596524,0.999998353116521},
		  {-3.06001646882122,-1.7409256496146,0.00181487306596524,0.999998353116521},
		  {-2.96001712757407,-1.74056267559918,0.00181487306596524,0.999998353116521},
		  {-2.86001778632692,-1.74019970158377,0.00181487306596524,0.999998353116521},
		  {-2.76001844507977,-1.73983672756835,0.00181487306596524,0.999998353116521},
		  {-2.66001910383262,-1.73947375355294,0.00181487306596524,0.999998353116521},
		  {-2.56001976258547,-1.73911077953752,0.00181487306596524,0.999998353116521},
		  {-2.46002042133832,-1.7387478055221,0.00181487306596524,0.999998353116521},
		  {-2.36002108009117,-1.73838483150669,0.00181487306596524,0.999998353116521},
		  {-2.26002173884402,-1.73802185749127,0.00181487306596524,0.999998353116521},
		  {-2.16002239759687,-1.73765888347586,0.00181487306596524,0.999998353116521},
		  {-2.06002305634972,-1.73729590946044,0.00181487306596524,0.999998353116521},
		  {-1.96002371510256,-1.73693293544502,0.00181487306596524,0.999998353116521},
		  {-1.86002437385541,-1.73656996142961,0.00181487306596524,0.999998353116521},
		  {-1.76002503260826,-1.73620698741419,0.00181487306596524,0.999998353116521},
		  {-1.66002569136111,-1.73584401339877,0.00181487306596524,0.999998353116521},
		  {-1.56002635011396,-1.73548103938336,0.00181487306596524,0.999998353116521},
		  {-1.46002700886681,-1.73511806536794,0.00181487306596524,0.999998353116521},
		  {-1.36002766761966,-1.73475509135253,0.00181487306596524,0.999998353116521},
		  {-1.26002832637251,-1.73439211733711,0.00181487306596524,0.999998353116521},
		  {-1.16002898512536,-1.73402914332169,0.00181487306596524,0.999998353116521},
		  {-1.06002964387821,-1.73366616930628,0.00181487306596524,0.999998353116521},
		  {-0.960030302631056,-1.73330319529086,0.00181487306596524,0.999998353116521},
		  {-0.860030961383905,-1.73294022127545,0.00181487306596524,0.999998353116521},
		  {-0.760031620136754,-1.73257724726003,0.00181487306596524,0.999998353116521},
		  {-0.660032278889603,-1.73221427324461,0.00181487306596524,0.999998353116521},
		  {-0.560032937642452,-1.7318512992292,0.00181487306596524,0.999998353116521},
		  {-0.460033596395301,-1.73148832521378,0.00181487306596524,0.999998353116521},
		  {-0.360034255148151,-1.73112535119837,0.00181487306596524,0.999998353116521},
		  {-0.260034913901,-1.73076237718295,0.00181487306596524,0.999998353116521},
		  {-0.160035572653849,-1.73039940316753,0.00181487306596524,0.999998353116521},
		  {-0.0600362314066979,-1.73003642915212,0.00181487306596524,0.999998353116521},
		  {-0.05,-1.73,0,1},
		  {0.0325120462211552,-1.71203262842947,0.193493588767752,0.981101539651109},
		  {0.12502409244231,-1.67406525685894,0.193493588767752,0.981101539651109},
		  {0.217536138663466,-1.6360978852884,0.193493588767752,0.981101539651109},
		  {0.310048184884621,-1.59813051371787,0.193493588767752,0.981101539651109},
		  {0.402560231105776,-1.56016314214734,0.193493588767752,0.981101539651109},
		  {0.495072277326931,-1.52219577057681,0.193493588767752,0.981101539651109},
		  {0.587584323548087,-1.48422839900628,0.193493588767752,0.981101539651109},
		  {0.680096369769242,-1.44626102743574,0.193493588767752,0.981101539651109},
		  {0.772608415990397,-1.40829365586521,0.193493588767752,0.981101539651109},
		  {0.865120462211552,-1.37032628429468,0.193493588767752,0.981101539651109},
		  {0.957632508432708,-1.33235891272415,0.193493588767752,0.981101539651109},
		  {1.05014455465386,-1.29439154115362,0.193493588767752,0.981101539651109},
		  {1.14265660087502,-1.25642416958308,0.193493588767752,0.981101539651109},
		  {1.23516864709617,-1.21845679801255,0.193493588767752,0.981101539651109},
		  {1.32768069331733,-1.18048942644202,0.193493588767752,0.981101539651109},
		  {1.42019273953848,-1.14252205487149,0.193493588767752,0.981101539651109},
		  {1.51270478575964,-1.10455468330096,0.193493588767752,0.981101539651109},
		  {1.60521683198079,-1.06658731173043,0.193493588767752,0.981101539651109},
		  {1.69772887820195,-1.02861994015989,0.193493588767752,0.981101539651109},
		  {1.7902409244231,-0.990652568589361,0.193493588767752,0.981101539651109},
		  {1.88275297064426,-0.952685197018829,0.193493588767752,0.981101539651109},
		  {1.97526501686542,-0.914717825448297,0.193493588767752,0.981101539651109},
		  {2.06777706308657,-0.876750453877765,0.193493588767752,0.981101539651109},
		  {2.16028910930773,-0.838783082307234,0.193493588767752,0.981101539651109},
		  {2.25280115552888,-0.800815710736702,0.193493588767752,0.981101539651109},
		  {2.34531320175004,-0.76284833916617,0.193493588767752,0.981101539651109},
		  {2.43782524797119,-0.724880967595638,0.193493588767752,0.981101539651109},
		  {2.53033729419235,-0.686913596025106,0.193493588767752,0.981101539651109},
		  {2.6228493404135,-0.648946224454574,0.193493588767752,0.981101539651109},
		  {2.71536138663466,-0.610978852884042,0.193493588767752,0.981101539651109},
		  {2.80787343285581,-0.57301148131351,0.193493588767752,0.981101539651109},
		  {2.90038547907697,-0.535044109742978,0.193493588767752,0.981101539651109},
		  {2.99289752529812,-0.497076738172446,0.193493588767752,0.981101539651109},
		  {3.08540957151928,-0.459109366601914,0.193493588767752,0.981101539651109},
		  {3.17792161774043,-0.421141995031382,0.193493588767752,0.981101539651109},
		  {3.27043366396159,-0.38317462346085,0.193493588767752,0.981101539651109},
		  {3.36294571018274,-0.345207251890318,0.193493588767752,0.981101539651109},
		  {3.4,-0.33,0,1}
  };

  float A1_Gate [55][4] = {
		  {7.683703771248,-1.46074612602161,-0.999621563742433,0.027508713185705},
		  {7.58385511710823,-1.46624578659986,-0.999621563742433,0.0275087131857048},
		  {7.48400646296845,-1.4717454471781,-0.999621563742433,0.0275087131857048},
		  {7.38415780882868,-1.47724510775635,-0.999621563742433,0.0275087131857048},
		  {7.2843091546889,-1.4827447683346,-0.999621563742433,0.0275087131857048},
		  {7.18446050054913,-1.48824442891285,-0.999621563742433,0.0275087131857048},
		  {7.08461184640936,-1.49374408949109,-0.999621563742433,0.0275087131857048},
		  {6.98476319226958,-1.49924375006934,-0.999621563742433,0.0275087131857048},
		  {6.88491453812981,-1.50474341064759,-0.999621563742433,0.0275087131857048},
		  {6.78506588399003,-1.51024307122583,-0.999621563742433,0.0275087131857048},
		  {6.68521722985026,-1.51574273180408,-0.999621563742433,0.0275087131857048},
		  {6.58536857571049,-1.52124239238233,-0.999621563742433,0.0275087131857048},
		  {6.48551992157071,-1.52674205296058,-0.999621563742433,0.0275087131857048},
		  {6.38567126743094,-1.53224171353882,-0.999621563742433,0.0275087131857048},
		  {6.28582261329117,-1.53774137411707,-0.999621563742433,0.0275087131857048},
		  {6.18597395915139,-1.54324103469532,-0.999621563742433,0.0275087131857048},
		  {6.08612530501162,-1.54874069527357,-0.999621563742433,0.0275087131857048},
		  {5.98627665087185,-1.55424035585181,-0.999621563742433,0.0275087131857048},
		  {5.88642799673207,-1.55974001643006,-0.999621563742433,0.0275087131857048},
		  {5.7865793425923,-1.56523967700831,-0.999621563742433,0.0275087131857048},
		  {5.68673068845253,-1.57073933758655,-0.999621563742433,0.0275087131857048},
		  {5.58688203431275,-1.5762389981648,-0.999621563742433,0.0275087131857048},
		  {5.48703338017298,-1.58173865874305,-0.999621563742433,0.0275087131857048},
		  {5.38718472603321,-1.5872383193213,-0.999621563742433,0.0275087131857048},
		  {5.28733607189344,-1.59273797989954,-0.999621563742433,0.0275087131857048},
		  {5.18748741775366,-1.59823764047779,-0.999621563742433,0.0275087131857048},
		  {5.08763876361389,-1.60373730105604,-0.999621563742433,0.0275087131857048},
		  {4.98779010947412,-1.60923696163428,-0.999621563742433,0.0275087131857048},
		  {4.88794145533434,-1.61473662221253,-0.999621563742433,0.0275087131857048},
		  {4.78809280119457,-1.62023628279078,-0.999621563742433,0.0275087131857048},
		  {4.6882441470548,-1.62573594336903,-0.999621563742433,0.0275087131857048},
		  {4.58839549291502,-1.63123560394727,-0.999621563742433,0.0275087131857048},
		  {4.48854683877525,-1.63673526452552,-0.999621563742433,0.0275087131857048},
		  {4.38869818463548,-1.64223492510377,-0.999621563742433,0.0275087131857048},
		  {4.2888495304957,-1.64773458568202,-0.999621563742433,0.0275087131857048},
		  {4.18900087635593,-1.65323424626026,-0.999621563742433,0.0275087131857048},
		  {4.08915222221616,-1.65873390683851,-0.999621563742433,0.0275087131857048},
		  {3.98930356807638,-1.66423356741676,-0.999621563742433,0.0275087131857048},
		  {3.88945491393661,-1.66973322799501,-0.999621563742433,0.0275087131857048},
		  {3.78960625979684,-1.67523288857325,-0.999621563742433,0.0275087131857048},
		  {3.68975760565706,-1.6807325491515,-0.999621563742433,0.0275087131857048},
		  {3.58990895151729,-1.68623220972975,-0.999621563742433,0.0275087131857048},
		  {3.49006029737752,-1.691731870308,-0.999621563742433,0.0275087131857048},
		  {3.39021164323774,-1.69723153088624,-0.999621563742433,0.0275087131857048},
		  {3.29036298909797,-1.70273119146449,-0.999621563742433,0.0275087131857048},
		  {3.1905143349582,-1.70823085204274,-0.999621563742433,0.0275087131857048},
		  {3.09066568081843,-1.71373051262099,-0.999621563742433,0.0275087131857048},
		  {2.99081702667865,-1.71923017319923,-0.999621563742433,0.0275087131857048},
		  {2.89096837253888,-1.72472983377748,-0.999621563742433,0.0275087131857048},
		  {2.79111971839911,-1.73022949435573,-0.999621563742433,0.0275087131857048},
		  {2.69127106425933,-1.73572915493398,-0.999621563742433,0.0275087131857048},
		  {2.59142241011956,-1.74122881551222,-0.999621563742433,0.0275087131857048},
		  {2.49157375597979,-1.74672847609047,-0.999621563742433,0.0275087131857048},
		  {2.39172510184001,-1.75222813666872,-0.999621563742433,0.0275087131857048},
		  {2.36156440993478,-1.75388938658453,-0.999621563742433,0.0275087131857048}
  };

  float B1_Gate [35][4] = {
		  {7.38861600665454,0.404055853936187,-0.998846648598025,0.0480142956263409},
		  {7.1009886039388,0.318788760594179,-0.98963579387886,0.14360012351582},
		  {6.83493552956646,0.1801678328198,-0.971299022248327,0.237861744253766},
		  {6.60024778289801,-0.00670555095564092,-0.944005426068847,0.329929925215303},
		  {6.31915256633471,-0.610267574989522,-0.746316556218333,0.665591164240036},
		  {6.21835021037067,-0.892825330204451,-0.817315071809353,0.576191004262712},
		  {6.05617651715023,-1.14521331174724,-0.877661374734434,0.47928124446849},
		  {5.84105849357184,-1.35431672140793,-0.926568960896768,0.376124926989271},
		  {5.58417428470132,-1.50926995058683,-0.963400409029149,0.268066506454029},
		  {5.29887232552383,-1.60202118825775,-0.987675688318697,0.15651432747256},
		  {4.99997771825163,-1.62775081599694,-0.999078414733799,0.0429222694297466},
		  {4.63563266532289,-1.66211043948873,-0.999764248071384,0.0217128597439621},
		  {4.53572695497854,-1.66645198766781,-0.999764248071384,0.0217128597439626},
		  {4.4358212446342,-1.67079353584689,-0.999764248071384,0.0217128597439626},
		  {4.33591553428985,-1.67513508402597,-0.999764248071384,0.0217128597439626},
		  {4.2360098239455,-1.67947663220505,-0.999764248071384,0.0217128597439626},
		  {4.13610411360115,-1.68381818038413,-0.999764248071384,0.0217128597439626},
		  {4.0361984032568,-1.68815972856321,-0.999764248071384,0.0217128597439626},
		  {3.93629269291246,-1.69250127674229,-0.999764248071384,0.0217128597439626},
		  {3.83638698256811,-1.69684282492137,-0.999764248071384,0.0217128597439626},
		  {3.73648127222376,-1.70118437310046,-0.999764248071384,0.0217128597439626},
		  {3.63657556187941,-1.70552592127954,-0.999764248071384,0.0217128597439626},
		  {3.53666985153507,-1.70986746945862,-0.999764248071384,0.0217128597439626},
		  {3.43676414119072,-1.7142090176377,-0.999764248071384,0.0217128597439626},
		  {3.33685843084637,-1.71855056581678,-0.999764248071384,0.0217128597439626},
		  {3.23695272050202,-1.72289211399586,-0.999764248071384,0.0217128597439626},
		  {3.13704701015768,-1.72723366217494,-0.999764248071384,0.0217128597439626},
		  {3.03714129981333,-1.73157521035402,-0.999764248071384,0.0217128597439626},
		  {2.93723558946898,-1.7359167585331,-0.999764248071384,0.0217128597439626},
		  {2.83732987912463,-1.74025830671218,-0.999764248071384,0.0217128597439626},
		  {2.73742416878029,-1.74459985489126,-0.999764248071384,0.0217128597439626},
		  {2.63751845843594,-1.74894140307034,-0.999764248071384,0.0217128597439626},
		  {2.53761274809159,-1.75328295124942,-0.999764248071384,0.0217128597439626},
		  {2.43770703774724,-1.7576244994285,-0.999764248071384,0.0217128597439626},
		  {2.34424242861949,-1.76168614017124,-0.999764248071384,0.0217128597439626}
  };

  float C1_Gate [24][4] = {
		  {7.37065080616328,2.40366985714251,-0.998954802120152,0.0457088976140026},
		  {7.08187027293861,2.32239376206855,-0.990606323777409,0.136744693835655},
		  {6.81268905722792,2.18994953566167,-0.973979137106032,0.226637685485421},
		  {6.57208677793118,2.01075538621138,-0.949212199051354,0.314636617659313},
		  {6.36808968891918,1.79078905316328,-0.916512492197097,0.40000606451236},
		  {6.29419599465493,1.25885629093903,-0.72303374303302,0.690812714442677},
		  {6.25330941668077,0.961655537673557,-0.753753472047464,0.657157289677588},
		  {6.18554234641595,0.669409709323992,-0.78290811536733,0.622137350503871},
		  {6.09145733498651,0.384544810425722,-0.810437136601234,0.585825611950854},
		  {5.97183540522424,0.109425574602506,-0.836283374782208,0.54829747132636},
		  {5.82766956820401,-0.153664165669243,-0.86039316305612,0.509630851662539},
		  {5.66015658001447,-0.402540437715841,-0.882716440114961,0.469906039917313},
		  {5.47068700719127,-0.635137258360909,-0.903206854143612,0.429205520267389},
		  {5.26083368328205,-0.849523784160114,-0.921821859064263,0.387613802838992},
		  {5.03233865236815,-1.04392033980773,-0.938522802878633,0.345217248231941},
		  {4.787098707928,-1.21671319165927,-0.95327500792457,0.302103888201412},
		  {4.5271496470877,-1.36646794373161,-0.966047842880378,0.25836324286974},
		  {4.25464937096814,-1.49194144497695,-0.976814786367371,0.214086134847791},
		  {3.97185997141677,-1.59209210898561,-0.98555348201858,0.169364500651856},
		  {3.68112895282655,-1.66608856045114,-0.992245784899273,0.124291199807648},
		  {3.38486974492429,-1.71331653662127,-0.996877799182911,0.0789598220377681},
		  {3.08554166829665,-1.73338398644421,-0.999439907004287,0.033464492933001},
		  {2.78562951896473,-1.7261243250809,0.999926788429964,0.0121003214890588},
		  {2.48762294148089,-1.69159781676672,1,0}
  };

  float A2_Gate [46][4] = {
		  {-9.95885277125713,-1.54942574635455,-0.0195790148659319,0.999808312716432},
		  {-9.85892943882175,-1.5533407987181,-0.0195790148659322,0.999808312716432},
		  {-9.75900610638638,-1.55725585108165,-0.0195790148659322,0.999808312716432},
		  {-9.659082773951,-1.5611709034452,-0.0195790148659322,0.999808312716432},
		  {-9.55915944151563,-1.56508595580876,-0.0195790148659322,0.999808312716432},
		  {-9.45923610908025,-1.56900100817231,-0.0195790148659322,0.999808312716432},
		  {-9.35931277664488,-1.57291606053586,-0.0195790148659322,0.999808312716432},
		  {-9.2593894442095,-1.57683111289941,-0.0195790148659322,0.999808312716432},
		  {-9.15946611177413,-1.58074616526296,-0.0195790148659322,0.999808312716432},
		  {-9.05954277933875,-1.58466121762651,-0.0195790148659322,0.999808312716432},
		  {-8.95961944690338,-1.58857626999006,-0.0195790148659322,0.999808312716432},
		  {-8.859696114468,-1.59249132235362,-0.0195790148659322,0.999808312716432},
		  {-8.75977278203263,-1.59640637471717,-0.0195790148659322,0.999808312716432},
		  {-8.65984944959725,-1.60032142708072,-0.0195790148659322,0.999808312716432},
		  {-8.55992611716188,-1.60423647944427,-0.0195790148659322,0.999808312716432},
		  {-8.4600027847265,-1.60815153180782,-0.0195790148659322,0.999808312716432},
		  {-8.36007945229112,-1.61206658417137,-0.0195790148659322,0.999808312716432},
		  {-8.26015611985575,-1.61598163653493,-0.0195790148659322,0.999808312716432},
		  {-8.16023278742037,-1.61989668889848,-0.0195790148659322,0.999808312716432},
		  {-8.060309454985,-1.62381174126203,-0.0195790148659322,0.999808312716432},
		  {-7.96038612254962,-1.62772679362558,-0.0195790148659322,0.999808312716432},
		  {-7.86046279011425,-1.63164184598913,-0.0195790148659322,0.999808312716432},
		  {-7.76053945767887,-1.63555689835268,-0.0195790148659322,0.999808312716432},
		  {-7.6606161252435,-1.63947195071624,-0.0195790148659322,0.999808312716432},
		  {-7.56069279280812,-1.64338700307979,-0.0195790148659322,0.999808312716432},
		  {-7.46076946037275,-1.64730205544334,-0.0195790148659322,0.999808312716432},
		  {-7.36084612793737,-1.65121710780689,-0.0195790148659322,0.999808312716432},
		  {-7.260922795502,-1.65513216017044,-0.0195790148659322,0.999808312716432},
		  {-7.16099946306662,-1.65904721253399,-0.0195790148659322,0.999808312716432},
		  {-7.06107613063125,-1.66296226489755,-0.0195790148659322,0.999808312716432},
		  {-6.96115279819587,-1.6668773172611,-0.0195790148659322,0.999808312716432},
		  {-6.86122946576049,-1.67079236962465,-0.0195790148659322,0.999808312716432},
		  {-6.76130613332512,-1.6747074219882,-0.0195790148659322,0.999808312716432},
		  {-6.66138280088974,-1.67862247435175,-0.0195790148659322,0.999808312716432},
		  {-6.56145946845437,-1.6825375267153,-0.0195790148659322,0.999808312716432},
		  {-6.46153613601899,-1.68645257907886,-0.0195790148659322,0.999808312716432},
		  {-6.36161280358362,-1.69036763144241,-0.0195790148659322,0.999808312716432},
		  {-6.26168947114824,-1.69428268380596,-0.0195790148659322,0.999808312716432},
		  {-6.16176613871287,-1.69819773616951,-0.0195790148659322,0.999808312716432},
		  {-6.06184280627749,-1.70211278853306,-0.0195790148659322,0.999808312716432},
		  {-5.96191947384211,-1.70602784089661,-0.0195790148659322,0.999808312716432},
		  {-5.86199614140674,-1.70994289326017,-0.0195790148659322,0.999808312716432},
		  {-5.76207280897136,-1.71385794562372,-0.0195790148659322,0.999808312716432},
		  {-5.66214947653599,-1.71777299798727,-0.0195790148659322,0.999808312716432},
		  {-5.56222614410061,-1.72168805035082,-0.0195790148659322,0.999808312716432},
		  {-5.46230281166523,-1.72560310271437,0,1}
  };
  /*
  float B2_Gate [30][4] = {
		  {-9.59739362570663,0.324678469112917,-0.0505539829277495,0.998721329906466},
		  {-9.31110053852603,0.235033233697962,-0.151145144477103,0.988511580762206},
		  {-9.0486579133468,0.0896927077286569,-0.250191176305807,0.968196454909187},
		  {-8.82076993899045,-0.105415137177081,-0.346679548583544,0.937983630237708},
		  {-8.636731431442,-0.342332480863307,-0.43962387797515,0.898181967039024},
		  {-8.57064046551421,-0.886964577244356,-0.656180092825126,0.754604323987088},
		  {-8.4488833246557,-1.16114553692238,-0.545042596411039,0.838408354024167},
		  {-8.25641596165375,-1.39126792648731,-0.423345085791026,0.905968508468473},
		  {-8.00808208637929,-1.55958395778312,-0.293445408680907,0.955975832395409},
		  {-7.72303401607826,-1.65311255029716,-0.157860326971699,0.987461450978411},
		  {-7.42325558628944,-1.66464047436669,-0.0192167553273007,0.999815341107892},
		  {-7.26415237457642,-1.65570207747111,-0.0168556710545406,0.999857933085146},
		  {-7.16420919730576,-1.65907273275538,-0.0168556710545408,0.999857933085146},
		  {-7.0642660200351,-1.66244338803965,-0.0168556710545408,0.999857933085146},
		  {-6.96432284276444,-1.66581404332392,-0.0168556710545408,0.999857933085146},
		  {-6.86437966549378,-1.66918469860819,-0.0168556710545408,0.999857933085146},
		  {-6.76443648822312,-1.67255535389247,-0.0168556710545408,0.999857933085146},
		  {-6.66449331095246,-1.67592600917674,-0.0168556710545408,0.999857933085146},
		  {-6.5645501336818,-1.67929666446101,-0.0168556710545408,0.999857933085146},
		  {-6.46460695641114,-1.68266731974528,-0.0168556710545408,0.999857933085146},
		  {-6.36466377914048,-1.68603797502955,-0.0168556710545408,0.999857933085146},
		  {-6.26472060186982,-1.68940863031382,-0.0168556710545408,0.999857933085146},
		  {-6.16477742459916,-1.69277928559809,-0.0168556710545408,0.999857933085146},
		  {-6.0648342473285,-1.69614994088236,-0.0168556710545408,0.999857933085146},
		  {-5.96489107005784,-1.69952059616664,-0.0168556710545408,0.999857933085146},
		  {-5.86494789278718,-1.70289125145091,-0.0168556710545408,0.999857933085146},
		  {-5.76500471551652,-1.70626190673518,-0.0168556710545408,0.999857933085146},
		  {-5.66506153824586,-1.70963256201945,-0.0168556710545408,0.999857933085146},
		  {-5.5651183609752,-1.71300321730372,-0.0168556710545408,0.999857933085146},
		  {-5.46517518370454,-1.71637387258799,0,1}
  };
  */
  float B2_Gate [46][4] = {
		  {-9.57908377793428,0.191141936140434,-0.220165763060008,0.975462473279318},
		  {-9.48877837057904,0.148189248187245,-0.220165763060008,0.975462473279318},
		  {-9.39847296322379,0.105236560234056,-0.220165763060008,0.975462473279318},
		  {-9.30816755586855,0.0622838722808672,-0.220165763060008,0.975462473279318},
		  {-9.21786214851331,0.0193311843276784,-0.220165763060008,0.975462473279318},
		  {-9.12755674115807,-0.0236215036255104,-0.220165763060008,0.975462473279318},
		  {-9.03725133380283,-0.0665741915786992,-0.220165763060008,0.975462473279318},
		  {-8.94694592644759,-0.109526879531888,-0.220165763060008,0.975462473279318},
		  {-8.85664051909235,-0.152479567485077,-0.220165763060008,0.975462473279318},
		  {-8.76633511173711,-0.195432255438266,-0.220165763060008,0.975462473279318},
		  {-8.67602970438186,-0.238384943391454,-0.220165763060008,0.975462473279318},
		  {-8.58572429702662,-0.281337631344643,-0.220165763060008,0.975462473279318},
		  {-8.49541888967138,-0.324290319297832,-0.220165763060008,0.975462473279318},
		  {-8.40511348231614,-0.367243007251021,-0.220165763060008,0.975462473279318},
		  {-8.3148080749609,-0.41019569520421,-0.220165763060008,0.975462473279318},
		  {-8.22450266760566,-0.453148383157398,-0.220165763060008,0.975462473279318},
		  {-8.13419726025042,-0.496101071110587,-0.220165763060008,0.975462473279318},
		  {-8.04389185289518,-0.539053759063776,-0.220165763060008,0.975462473279318},
		  {-7.95358644553994,-0.582006447016965,-0.220165763060008,0.975462473279318},
		  {-7.8632810381847,-0.624959134970154,-0.220165763060008,0.975462473279318},
		  {-7.77297563082945,-0.667911822923343,-0.220165763060008,0.975462473279318},
		  {-7.68267022347421,-0.710864510876531,-0.220165763060008,0.975462473279318},
		  {-7.59236481611897,-0.75381719882972,-0.220165763060008,0.975462473279318},
		  {-7.50205940876373,-0.796769886782909,-0.220165763060008,0.975462473279318},
		  {-7.41175400140849,-0.839722574736098,-0.220165763060008,0.975462473279318},
		  {-7.32144859405325,-0.882675262689287,-0.220165763060008,0.975462473279318},
		  {-7.23114318669801,-0.925627950642475,-0.220165763060008,0.975462473279318},
		  {-7.14083777934277,-0.968580638595664,-0.220165763060008,0.975462473279318},
		  {-7.05053237198752,-1.01153332654885,-0.220165763060008,0.975462473279318},
		  {-6.96022696463228,-1.05448601450204,-0.220165763060008,0.975462473279318},
		  {-6.86992155727704,-1.09743870245523,-0.220165763060008,0.975462473279318},
		  {-6.7796161499218,-1.14039139040842,-0.220165763060008,0.975462473279318},
		  {-6.68931074256656,-1.18334407836161,-0.220165763060008,0.975462473279318},
		  {-6.59900533521132,-1.2262967663148,-0.220165763060008,0.975462473279318},
		  {-6.50869992785608,-1.26924945426799,-0.220165763060008,0.975462473279318},
		  {-6.41839452050084,-1.31220214222117,-0.220165763060008,0.975462473279318},
		  {-6.3280891131456,-1.35515483017436,-0.220165763060008,0.975462473279318},
		  {-6.23778370579035,-1.39810751812755,-0.220165763060008,0.975462473279318},
		  {-6.14747829843511,-1.44106020608074,-0.220165763060008,0.975462473279318},
		  {-6.05717289107987,-1.48401289403393,-0.220165763060008,0.975462473279318},
		  {-5.96686748372463,-1.52696558198712,-0.220165763060008,0.975462473279318},
		  {-5.87656207636939,-1.56991826994031,-0.220165763060008,0.975462473279318},
		  {-5.78625666901415,-1.6128709578935,-0.220165763060008,0.975462473279318},
		  {-5.69595126165891,-1.65582364584669,-0.220165763060008,0.975462473279318},
		  {-5.60564585430367,-1.69877633379987,-0.220165763060008,0.975462473279318},
		  {-5.54,-1.73,0,1}
  };
  float C2_Gate [21][4] = {
		  {-9.64537813148055,2.24912672553397,-0.0323811040338972,0.999475594550235},
		  {-9.35102440464254,2.19119673764708,-0.0970075011016472,0.995283650388176},
		  {-9.06662089868893,2.09572608351035,-0.1612270347801,0.986917343679812},
		  {-8.79693392729323,1.96431475424451,-0.224770359123479,0.974411763916827},
		  {-8.5464831699686,1.79916507015302,-0.287370964305061,0.957819361296471},
		  {-8.31946592683332,1.60304477207233,-0.348766294397654,0.9372097267379},
		  {-8.11968677612721,1.37924063684882,-0.40869884857086,0.912669300007869},
		  {-7.95049381334754,1.13150339429971,-0.466917261086533,0.884301007179937},
		  {-7.81472254057173,0.86398486879383,-0.523177355562777,0.852223828947736},
		  {-7.71464834632474,0.58116839889539,-0.577243169084757,0.816572301602856},
		  {-7.6911455366755,0.123812295560788,-0.681706024961213,0.731626199320105},
		  {-7.62806857108132,-0.16948157824402,-0.628388195313771,0.777899913864439},
		  {-7.52433672473398,-0.45097705610001,-0.571938448979524,0.820296538197557},
		  {-7.38201543870462,-0.715069183099183,-0.512638134182117,0.858604765525022},
		  {-7.20393852189388,-0.956499528538984,-0.450782806514147,0.892633665817747},
		  {-6.99365172607186,-1.17046088837507,-0.386680755874015,0.922213637416353},
		  {-6.75534214517451,-1.35269300314229,-0.3206514699344,0.94719725233391},
		  {-6.49375484461194,-1.49956738547082,-0.253024041800477,0.967459991044049},
		  {-6.2140983806115,-1.60815956816722,-0.184135529794216,0.982900863092206},
		  {-5.92194109083315,-1.67630733430351,-0.114329277539656,0.993442910436861},
		  {-5.62310022125085,-1.70265376987457,0,1}
  };

  float Gate_A1 [50][4] = {
		  {2.66578956090178,-1.77991605207398,-0.0302316744161444,0.999542918469235},
		  {2.96086622972276,-1.83404330507572,-0.0905845017927076,0.995888772923446},
		  {3.24725689886567,-1.9233763036142,-0.150606168848261,0.988593840717637},
		  {3.52077742894589,-2.04660990140569,-0.210077247378903,0.977684790785713},
		  {3.77743171203912,-2.20194366776028,-0.268780322031376,0.963201504612981},
		  {4.01347005442336,-2.38710819169642,-0.326500785133711,0.945196930436759},
		  {4.22544395923381,-2.59939823781119,-0.383027621261507,0.923736889677332},
		  {4.41025650866137,-2.83571226950226,-0.438154178671617,0.898899836306916},
		  {4.56520760961591,-3.09259776211127,-0.491678924783005,0.870776570036326},
		  {4.68803344181957,-3.36630164396807,-0.543406182942894,0.83946990436789},
		  {4.7769395319974,-3.65282512839699,-0.593146847784713,0.805094290728147},
		  {4.82637069717871,-4.2194025617312,-0.686105386853189,0.727502163660725},
		  {4.87879714021833,-4.51478615651976,-0.642357061869767,0.766405509548333},
		  {4.965376260589,-4.80202134920311,-0.596407131118411,0.802682087722846},
		  {5.08492211498332,-5.07717365011505,-0.54841308276043,0.836207564338664},
		  {5.23579718842843,-5.33647407860087,-0.498539410937734,0.866867034637872},
		  {5.41593482463542,-5.57637078975332,-0.446957051987869,0.894555416773222},
		  {5.62286753463982,-5.79357772686683,-0.393842798579163,0.919177811964221},
		  {5.85376079596719,-5.98511963317877,-0.339378693773965,0.940649829751899},
		  {6.10545187934955,-6.14837280633571,-0.283751407096754,0.958897877237515},
		  {6.37449317115228,-6.28110103733847,-0.227151594745573,0.973859411313842},
		  {6.65719939808941,-6.38148624168139,-0.1697732461396,0.985483153024557},
		  {6.94969810735298,-6.44815336310679,-0.111813019042475,0.99372926331703},
		  {7.24798271068954,-6.48018920884788,-0.0534695655401829,0.998569479586145},
		  {7.54796736583705,-6.47715495835891,0.00505714881637573,0.999987212541165},
		  {7.84554294356704,-6.43909217419033,0.0635665303705658,0.99797760306364},
		  {8.13663331370703,-6.36652223267345,0.121858044871961,0.992547538861481},
		  {8.41725117914851,-6.26043918221267,0.179731904784679,0.983715630862126},
		  {8.68355269303756,-6.12229612701118,0.236989754036435,0.971512149425703},
		  {8.93189011101283,-5.95398532274307,0.293435347861421,0.955978920596813},
		  {9.15886175727119,-5.75781225681717,0.348875225406917,0.937169182750518},
		  {9.36135862003599,-5.5364640682761,0.403119372798362,0.915147404123869},
		  {9.5366069381725,-5.29297273990828,0.455981874390296,0.889989061858354},
		  {9.68220619560785,-5.03067356675999,0.507281549971086,0.861780383310581},
		  {9.79616200311547,-4.75315946993735,0.556842575737501,0.830618050517821},
		  {9.8769134170559,-4.46423178149849,0.604495086910791,0.79660886883132},
		  {9.92335432086762,-4.16784817457471,0.650075759928901,0.759869400853108},
		  {9.9348485764283,-3.86806845196308,0.693428372219403,0.720525566930937},
		  {9.9112387377464,-3.56899893576757,0.734404337634593,0.678712213580612},
		  {9.85284820762449,-3.27473621982809,0.772863215713612,0.634572651314895},
		  {9.76047680775302,-2.98931105540528,0.808673193026152,0.588258163463022},
		  {9.63538982291431,-2.71663313876376,0.841711534947999,0.539927487664301},
		  {9.4793006693671,-2.46043755694215,0.871865006319992,0.489746271812905},
		  {9.29434742481662,-2.22423362528509,0.899030259548657,0.43788650631856},
		  {9.08306354145799,-2.01125681755031,0.923114188818325,0.384525934628973},
		  {8.8483431432596,-1.82442444704245,0.944034249200729,0.329847444034385},
		  {8.59340138283744,-1.6662957058445,0.961718739568352,0.274038438842181},
		  {8.32173040094381,-1.53903660952149,0.976107048341893,0.217290198069949},
		  {8.03705149182849,-1.44439032747664,0.987149861229554,0.159797219858397},
		  {7.74326412970159,-1.5,1,0}
		  //{7.75,-1.23,0.9659,0.2588}
  };

  float Gate_B1 [72][4] = {
		  {2.66578956090178,-1.77991605207398,-0.0302316744161444,0.999542918469235},
		  {2.96086622972276,-1.83404330507572,-0.0905845017927076,0.995888772923446},
		  {3.24725689886567,-1.9233763036142,-0.150606168848261,0.988593840717637},
		  {3.52077742894589,-2.04660990140569,-0.210077247378903,0.977684790785713},
		  {3.77743171203912,-2.20194366776028,-0.268780322031376,0.963201504612981},
		  {4.01347005442336,-2.38710819169642,-0.326500785133711,0.945196930436759},
		  {4.22544395923381,-2.59939823781119,-0.383027621261507,0.923736889677332},
		  {4.41025650866137,-2.83571226950226,-0.438154178671617,0.898899836306916},
		  {4.56520760961591,-3.09259776211127,-0.491678924783005,0.870776570036326},
		  {4.68803344181957,-3.36630164396807,-0.543406182942894,0.83946990436789},
		  {4.7769395319974,-3.65282512839699,-0.593146847784713,0.805094290728147},
		  {4.81876878003418,-4.22257077752113,-0.685981314539999,0.727619155947653},
		  {4.87149742955909,-4.51790057540695,-0.641964888026191,0.766734036378665},
		  {4.95856625147722,-4.8049877054734,-0.595722499829509,0.803190328127077},
		  {5.07876867603244,-5.07985381311683,-0.547414491716568,0.836861621929631},
		  {5.23043897941125,-5.3386898984546,-0.497208367825118,0.867631165279741},
		  {5.41147536676989,-5.577909100134,-0.445278213856906,0.895392267257431},
		  {5.61936909818363,-5.79419640082194,-0.391804093449484,0.920048668471526},
		  {5.85123925390085,-5.98455456557372,-0.336971423820012,0.941514874831361},
		  {6.10387265713712,-6.14634567648302,-0.28097033284595,0.959716453990675},
		  {6.37376840117267,-6.27732768803993,-0.223994999811919,0.97459029343579},
		  {6.65718636371245,-6.37568549662572,-0.166242982108621,0.986084819323182},
		  {6.95019903621309,-6.44005609359386,-0.107914530218467,0.994160175307645},
		  {7.24874594994406,-6.46954745337452,-0.0492118933631027,0.998788360740962},
		  {7.54868994456532,-6.4637508948578,0.00966138177951191,0.999953327761906},
		  {7.84587449947089,-6.42274674475586,0.0685011568568645,0.997651036940909},
		  {8.13618133342024,-6.34710322446298,0.127103409675228,0.991889471286459},
		  {8.41558747426189,-6.23786857583912,0.185264941630228,0.98268860856466},
		  {8.68022100789628,-6.09655653503517,0.242784082281684,0.970080352027934},
		  {8.92641473392827,-5.92512535565848,0.299461388629659,0.954108419793053},
		  {9.15075698446765,-5.72595067196868,0.355100336667044,0.934828193252082},
		  {9.35013890184801,-5.50179257815602,0.409508002810761,0.912306525041853},
		  {9.521797520106,-5.25575737990634,0.4624957328488,0.886621507237813},
		  {9.66335405321229,-4.99125454828647,0.513879796083535,0.857862200576027},
		  {9.77284685946935,-4.71194947246801,0.563482022403168,0.826128325642231},
		  {9.84875862526672,-4.42171266602623,0.611130420072274,0.791529917098707},
		  {9.89003739149059,-4.12456613069554,0.656659772099333,0.754186942147934},
		  {9.9618098603414,-3.81276189165876,0.718611388887495,0.695411872030659},
		  {9.95852939469363,-3.712815713417,0.718611388887495,0.695411872030659},
		  {9.95524892904587,-3.61286953517524,0.718611388887495,0.695411872030659},
		  {9.95196846339811,-3.51292335693348,0.718611388887495,0.695411872030659},
		  {9.94868799775035,-3.41297717869171,0.718611388887495,0.695411872030659},
		  {9.94540753210259,-3.31303100044995,0.718611388887495,0.695411872030659},
		  {9.94212706645482,-3.21308482220819,0.718611388887495,0.695411872030659},
		  {9.93884660080706,-3.11313864396643,0.718611388887495,0.695411872030659},
		  {9.9355661351593,-3.01319246572467,0.718611388887495,0.695411872030659},
		  {9.93228566951154,-2.91324628748291,0.718611388887495,0.695411872030659},
		  {9.92900520386377,-2.81330010924115,0.718611388887495,0.695411872030659},
		  {9.92572473821601,-2.71335393099939,0.718611388887495,0.695411872030659},
		  {9.92244427256825,-2.61340775275763,0.718611388887495,0.695411872030659},
		  {9.91916380692049,-2.51346157451587,0.718611388887495,0.695411872030659},
		  {9.91588334127272,-2.4135153962741,0.718611388887495,0.695411872030659},
		  {9.91260287562496,-2.31356921803234,0.718611388887495,0.695411872030659},
		  {9.9093224099772,-2.21362303979058,0.718611388887495,0.695411872030659},
		  {9.90604194432944,-2.11367686154882,0.718611388887495,0.695411872030659},
		  {9.90276147868168,-2.01373068330706,0.718611388887495,0.695411872030659},
		  {9.89948101303391,-1.9137845050653,0.718611388887495,0.695411872030659},
		  {9.89620054738615,-1.81383832682354,0.718611388887495,0.695411872030659},
		  {9.89292008173839,-1.71389214858178,0.718611388887495,0.695411872030659},
		  {9.88963961609063,-1.61394597034002,0.718611388887495,0.695411872030659},
		  {9.88635915044286,-1.51399979209826,0.718611388887495,0.695411872030659},
		  {9.91254237402552,-1.14474015333097,0.734717832538498,0.678372837420493},
		  {9.84148954553087,-0.853275754882536,0.786397724325556,0.617720502473074},
		  {9.72507180457521,-0.576785412210713,0.833084370432806,0.553145940725027},
		  {9.56624124329613,-0.322280298698683,0.874481333209466,0.485059169450691},
		  {9.36902544758654,-0.096214091753385,0.910325761938721,0.413892506758322},
		  {9.13842536657277,0.0956806779419957,0.9403900618128,0.34009782657894},
		  {8.88028849978967,0.248537990516175,0.964483339050073,0.264143689485139},
		  {8.60116061774088,0.358481728232137,0.982452612978349,0.186512367557797},
		  {8.30811977587749,0.422723965117233,0.994183787388245,0.10769678219132},
		  {8.0085968310273,0.439635662497012,0.999602374989007,0.0281973742808904},
		  {7.71018701157436,0.408787977753003,1,0}
		  //{7.75,0.1,0.9659,0.2588}
  };

  float Gate_C1 [72][4] = {
		  {2.66,-1.78,0.0179912593149282,0.999838144195481},
		  {2.75993526291765,-1.77640233053496,0.0179912593149282,0.999838144195481},
		  {2.85987052583531,-1.77280466106993,0.0179912593149282,0.999838144195481},
		  {2.95980578875296,-1.76920699160489,0.0179912593149282,0.999838144195481},
		  {3.05974105167061,-1.76560932213986,0.0179912593149282,0.999838144195481},
		  {3.15967631458826,-1.76201165267482,0.0179912593149282,0.999838144195481},
		  {3.25961157750592,-1.75841398320979,0.0179912593149282,0.999838144195481},
		  {3.35954684042357,-1.75481631374475,0.0179912593149282,0.999838144195481},
		  {3.45948210334122,-1.75121864427972,0.0179912593149282,0.999838144195481},
		  {3.55941736625888,-1.74762097481468,0.0179912593149282,0.999838144195481},
		  {3.65935262917653,-1.74402330534965,0.0179912593149282,0.999838144195481},
		  {3.75928789209418,-1.74042563588461,0.0179912593149282,0.999838144195481},
		  {3.85922315501183,-1.73682796641957,0.0179912593149282,0.999838144195481},
		  {3.95915841792949,-1.73323029695454,0.0179912593149282,0.999838144195481},
		  {4.05909368084714,-1.7296326274895,0.0179912593149282,0.999838144195481},
		  {4.15902894376479,-1.72603495802447,0.0179912593149282,0.999838144195481},
		  {4.25896420668244,-1.72243728855943,0.0179912593149282,0.999838144195481},
		  {4.3588994696001,-1.7188396190944,0.0179912593149282,0.999838144195481},
		  {4.45883473251775,-1.71524194962936,0.0179912593149282,0.999838144195481},
		  {4.5587699954354,-1.71164428016433,0.0179912593149282,0.999838144195481},
		  {4.65870525835306,-1.70804661069929,0.0179912593149282,0.999838144195481},
		  {4.75864052127071,-1.70444894123425,0.0179912593149282,0.999838144195481},
		  {4.85857578418836,-1.70085127176922,0.0179912593149282,0.999838144195481},
		  {4.95851104710601,-1.69725360230418,0.0179912593149282,0.999838144195481},
		  {5.05844631002367,-1.69365593283915,0.0179912593149282,0.999838144195481},
		  {5.15838157294132,-1.69005826337411,0.0179912593149282,0.999838144195481},
		  {5.25831683585897,-1.68646059390908,0.0179912593149282,0.999838144195481},
		  {5.35825209877663,-1.68286292444404,0.0179912593149282,0.999838144195481},
		  {5.45818736169428,-1.67926525497901,0.0179912593149282,0.999838144195481},
		  {5.55812262461193,-1.67566758551397,0.0179912593149282,0.999838144195481},
		  {5.65805788752958,-1.67206991604894,0.0179912593149282,0.999838144195481},
		  {5.75799315044724,-1.6684722465839,0.0179912593149282,0.999838144195481},
		  {5.85792841336489,-1.66487457711886,0.0179912593149282,0.999838144195481},
		  {5.95786367628254,-1.66127690765383,0.0179912593149282,0.999838144195481},
		  {6.0577989392002,-1.65767923818879,0.0179912593149282,0.999838144195481},
		  {6.15773420211785,-1.65408156872376,0.0179912593149282,0.999838144195481},
		  {6.2576694650355,-1.65048389925872,0.0179912593149282,0.999838144195481},
		  {6.35760472795315,-1.64688622979369,0.0179912593149282,0.999838144195481},
		  {6.4575399908708,-1.64328856032865,0.0179912593149282,0.999838144195481},
		  {6.55747525378846,-1.63969089086362,0.0179912593149282,0.999838144195481},
		  {6.65741051670611,-1.63609322139858,0.0179912593149282,0.999838144195481},
		  {6.75734577962376,-1.63249555193355,0.0179912593149282,0.999838144195481},
		  {6.85728104254142,-1.62889788246851,0.0179912593149282,0.999838144195481},
		  {6.95721630545907,-1.62530021300347,0.0179912593149282,0.999838144195481},
		  {7.05715156837672,-1.62170254353844,0.0179912593149282,0.999838144195481},
		  {7.15708683129437,-1.6181048740734,0.0179912593149282,0.999838144195481},
		  {7.25702209421203,-1.61450720460837,0.0179912593149282,0.999838144195481},
		  {7.35695735712968,-1.61090953514333,0.0179912593149282,0.999838144195481},
		  {7.45689262004733,-1.6073118656783,0.0179912593149282,0.999838144195481},
		  {7.55682788296499,-1.60371419621326,0.0179912593149282,0.999838144195481},
		  {7.65676314588264,-1.60011652674823,0.0179912593149282,0.999838144195481},
		  {7.96336746214939,-1.58750829385432,0.0372761898954044,0.99930500132186},
		  {8.25589186179681,-1.52095398812644,0.111621386485638,0.993750806831886},
		  {8.53527993681809,-1.41167314105844,0.185346185010255,0.982673288383349},
		  {8.79532889831412,-1.26209193359962,0.25804081881223,0.966134015458888},
		  {9.03026531156877,-1.0755312685948,0.329301246949127,0.944224914285654},
		  {9.23487327402061,-0.856133042299995,0.398731399875827,0.91706775690407},
		  {9.40461021527513,-0.608768188746464,0.46594538082176,0.884813484351852},
		  {9.53570774824242,-0.338928538491185,0.530569610627284,0.847641367725061},
		  {9.62525533237012,-0.052604892634103,0.592244904118075,0.805758011779078},
		  {9.67126489153606,0.243845980977961,0.650628466476912,0.759396206607527},
		  {9.67271495199686,0.543842476498592,0.705395798516931,0.70881363378159},
		  {9.62957332047107,0.840724270533345,0.756242500266707,0.654291434141056},
		  {9.54279779887312,1.12790019022614,0.802885962842749,0.596132645197419},
		  {9.41431491982985,1.39899454611123,0.845066939205872,0.534660516834017},
		  {9.24697717507985,1.64798868094574,0.882550985071112,0.470216714664642},
		  {9.04449968634213,1.86935459194937,0.915129761962497,0.403159421036474},
		  {8.81137772464559,2.05817765985887,0.942622195170241,0.333861344232058},
		  {8.55278690930056,2.21026576004818,0.964875480174367,0.262707646935304},
		  {8.27446830222859,2.32224233330132,0.981765931940987,0.190093805475204},
		  {7.9826009487101,2.39162134994261,0.993199672370811,0.116423411745725},
		  {7.68366469431575,2.41686250302007,1,0}
		  //{7.75,2.71,0.9659,0.2588}
  };

  float Charge_A1 [71][4] = {
		  {3.79702651195758,-0.392133729888455,-0.0703975383378741,0.997519015656327},
		  {4.07061761635537,-0.515210566029137,-0.209797106757199,0.977744943222059},
		  {4.29918696053399,-0.709519739517556,-0.345037813921346,0.938588784806413},
		  {4.46470041110517,-0.959730246251429,-0.473438748992976,0.880826742868293},
		  {4.55409894803329,-1.24610046396813,-0.592454587671614,0.805603849014426},
		  {4.56032902200938,-1.54603576728912,-0.699726048802798,0.714411265747415},
		  {4.63,-1.67,-0.713250449154182,0.700909264299851},
		  {4.69532032301952,-1.75985837052029,-0.688039522776404,0.725673215089009},
		  {4.70064064603905,-1.85971674104058,-0.688039522776404,0.725673215089009},
		  {4.70596096905857,-1.95957511156088,-0.688039522776404,0.725673215089009},
		  {4.71128129207809,-2.05943348208117,-0.688039522776404,0.725673215089009},
		  {4.71660161509762,-2.15929185260146,-0.688039522776404,0.725673215089009},
		  {4.72192193811714,-2.25915022312175,-0.688039522776404,0.725673215089009},
		  {4.72724226113667,-2.35900859364205,-0.688039522776404,0.725673215089009},
		  {4.73256258415619,-2.45886696416234,-0.688039522776404,0.725673215089009},
		  {4.73788290717571,-2.55872533468263,-0.688039522776404,0.725673215089009},
		  {4.74320323019524,-2.65858370520292,-0.688039522776404,0.725673215089009},
		  {4.74852355321476,-2.75844207572321,-0.688039522776404,0.725673215089009},
		  {4.75384387623428,-2.85830044624351,-0.688039522776404,0.725673215089009},
		  {4.75916419925381,-2.9581588167638,-0.688039522776404,0.725673215089009},
		  {4.76448452227333,-3.05801718728409,-0.688039522776404,0.725673215089009},
		  {4.76980484529286,-3.15787555780438,-0.688039522776404,0.725673215089009},
		  {4.77512516831238,-3.25773392832467,-0.688039522776404,0.725673215089009},
		  {4.7804454913319,-3.35759229884497,-0.688039522776404,0.725673215089009},
		  {4.78576581435143,-3.45745066936526,-0.688039522776404,0.725673215089009},
		  {4.79108613737095,-3.55730903988555,-0.688039522776404,0.725673215089009},
		  {4.79640646039047,-3.65716741040584,-0.688039522776404,0.725673215089009},
		  {4.80172678341,-3.75702578092613,-0.688039522776404,0.725673215089009},
		  {4.80704710642952,-3.85688415144643,-0.688039522776404,0.725673215089009},
		  {4.81236742944905,-3.95674252196672,-0.688039522776404,0.725673215089009},
		  {4.81768775246857,-4.05660089248701,-0.688039522776404,0.725673215089009},
		  {4.82,-4.1,-0.707106781186547,0.707106781186548},
		  {4.82637069717871,-4.2194025617312,-0.686105386853189,0.727502163660725},
		  {4.87879714021833,-4.51478615651976,-0.642357061869767,0.766405509548333},
		  {4.965376260589,-4.80202134920311,-0.596407131118411,0.802682087722846},
		  {5.08492211498332,-5.07717365011505,-0.54841308276043,0.836207564338664},
		  {5.23579718842843,-5.33647407860087,-0.498539410937734,0.866867034637872},
		  {5.41593482463542,-5.57637078975332,-0.446957051987869,0.894555416773222},
		  {5.62286753463982,-5.79357772686683,-0.393842798579163,0.919177811964221},
		  {5.85376079596719,-5.98511963317877,-0.339378693773965,0.940649829751899},
		  {6.10545187934955,-6.14837280633571,-0.283751407096754,0.958897877237515},
		  {6.37449317115228,-6.28110103733847,-0.227151594745573,0.973859411313842},
		  {6.65719939808941,-6.38148624168139,-0.1697732461396,0.985483153024557},
		  {6.94969810735298,-6.44815336310679,-0.111813019042475,0.99372926331703},
		  {7.24798271068954,-6.48018920884788,-0.0534695655401829,0.998569479586145},
		  {7.54796736583705,-6.47715495835891,0.00505714881637573,0.999987212541165},
		  {7.84554294356704,-6.43909217419033,0.0635665303705658,0.99797760306364},
		  {8.13663331370703,-6.36652223267345,0.121858044871961,0.992547538861481},
		  {8.41725117914851,-6.26043918221267,0.179731904784679,0.983715630862126},
		  {8.68355269303756,-6.12229612701118,0.236989754036435,0.971512149425703},
		  {8.93189011101283,-5.95398532274307,0.293435347861421,0.955978920596813},
		  {9.15886175727119,-5.75781225681717,0.348875225406917,0.937169182750518},
		  {9.36135862003599,-5.5364640682761,0.403119372798362,0.915147404123869},
		  {9.5366069381725,-5.29297273990828,0.455981874390296,0.889989061858354},
		  {9.68220619560785,-5.03067356675999,0.507281549971086,0.861780383310581},
		  {9.79616200311547,-4.75315946993735,0.556842575737501,0.830618050517821},
		  {9.8769134170559,-4.46423178149849,0.604495086910791,0.79660886883132},
		  {9.92335432086762,-4.16784817457471,0.650075759928901,0.759869400853108},
		  {9.9348485764283,-3.86806845196308,0.693428372219403,0.720525566930937},
		  {9.9112387377464,-3.56899893576757,0.734404337634593,0.678712213580612},
		  {9.85284820762449,-3.27473621982809,0.772863215713612,0.634572651314895},
		  {9.76047680775302,-2.98931105540528,0.808673193026152,0.588258163463022},
		  {9.63538982291431,-2.71663313876376,0.841711534947999,0.539927487664301},
		  {9.4793006693671,-2.46043755694215,0.871865006319992,0.489746271812905},
		  {9.29434742481662,-2.22423362528509,0.899030259548657,0.43788650631856},
		  {9.08306354145799,-2.01125681755031,0.923114188818325,0.384525934628973},
		  {8.8483431432596,-1.82442444704245,0.944034249200729,0.329847444034385},
		  {8.59340138283744,-1.6662957058445,0.961718739568352,0.274038438842181},
		  {8.32173040094381,-1.53903660952149,0.976107048341893,0.217290198069949},
		  {8.03705149182849,-1.44439032747664,0.987149861229554,0.159797219858397},
		  {7.74326412970159,-1.5,1,0}
		  //{7.75,-1.23,0.9659,0.2588}
  };
  float Charge_B1 [93][4] = {
		  {3.79702651195758,-0.392133729888455,-0.0703975383378741,0.997519015656327},
		  {4.07061761635537,-0.515210566029137,-0.209797106757199,0.977744943222059},
		  {4.29918696053399,-0.709519739517556,-0.345037813921346,0.938588784806413},
		  {4.46470041110517,-0.959730246251429,-0.473438748992976,0.880826742868293},
		  {4.55409894803329,-1.24610046396813,-0.592454587671614,0.805603849014426},
		  {4.56032902200938,-1.54603576728912,-0.699726048802798,0.714411265747415},
		  {4.63,-1.67,-0.713250449154182,0.700909264299851},
		  {4.69532032301952,-1.75985837052029,-0.688039522776404,0.725673215089009},
		  {4.70064064603905,-1.85971674104058,-0.688039522776404,0.725673215089009},
		  {4.70596096905857,-1.95957511156088,-0.688039522776404,0.725673215089009},
		  {4.71128129207809,-2.05943348208117,-0.688039522776404,0.725673215089009},
		  {4.71660161509762,-2.15929185260146,-0.688039522776404,0.725673215089009},
		  {4.72192193811714,-2.25915022312175,-0.688039522776404,0.725673215089009},
		  {4.72724226113667,-2.35900859364205,-0.688039522776404,0.725673215089009},
		  {4.73256258415619,-2.45886696416234,-0.688039522776404,0.725673215089009},
		  {4.73788290717571,-2.55872533468263,-0.688039522776404,0.725673215089009},
		  {4.74320323019524,-2.65858370520292,-0.688039522776404,0.725673215089009},
		  {4.74852355321476,-2.75844207572321,-0.688039522776404,0.725673215089009},
		  {4.75384387623428,-2.85830044624351,-0.688039522776404,0.725673215089009},
		  {4.75916419925381,-2.9581588167638,-0.688039522776404,0.725673215089009},
		  {4.76448452227333,-3.05801718728409,-0.688039522776404,0.725673215089009},
		  {4.76980484529286,-3.15787555780438,-0.688039522776404,0.725673215089009},
		  {4.77512516831238,-3.25773392832467,-0.688039522776404,0.725673215089009},
		  {4.7804454913319,-3.35759229884497,-0.688039522776404,0.725673215089009},
		  {4.78576581435143,-3.45745066936526,-0.688039522776404,0.725673215089009},
		  {4.79108613737095,-3.55730903988555,-0.688039522776404,0.725673215089009},
		  {4.79640646039047,-3.65716741040584,-0.688039522776404,0.725673215089009},
		  {4.80172678341,-3.75702578092613,-0.688039522776404,0.725673215089009},
		  {4.80704710642952,-3.85688415144643,-0.688039522776404,0.725673215089009},
		  {4.81236742944905,-3.95674252196672,-0.688039522776404,0.725673215089009},
		  {4.81768775246857,-4.05660089248701,-0.688039522776404,0.725673215089009},
		  {4.82,-4.1,-0.707106781186547,0.707106781186548},
		  {4.81876878003418,-4.22257077752113,-0.685981314539999,0.727619155947653},
		  {4.87149742955909,-4.51790057540695,-0.641964888026191,0.766734036378665},
		  {4.95856625147722,-4.8049877054734,-0.595722499829509,0.803190328127077},
		  {5.07876867603244,-5.07985381311683,-0.547414491716568,0.836861621929631},
		  {5.23043897941125,-5.3386898984546,-0.497208367825118,0.867631165279741},
		  {5.41147536676989,-5.577909100134,-0.445278213856906,0.895392267257431},
		  {5.61936909818363,-5.79419640082194,-0.391804093449484,0.920048668471526},
		  {5.85123925390085,-5.98455456557372,-0.336971423820012,0.941514874831361},
		  {6.10387265713712,-6.14634567648302,-0.28097033284595,0.959716453990675},
		  {6.37376840117267,-6.27732768803993,-0.223994999811919,0.97459029343579},
		  {6.65718636371245,-6.37568549662572,-0.166242982108621,0.986084819323182},
		  {6.95019903621309,-6.44005609359386,-0.107914530218467,0.994160175307645},
		  {7.24874594994406,-6.46954745337452,-0.0492118933631027,0.998788360740962},
		  {7.54868994456532,-6.4637508948578,0.00966138177951191,0.999953327761906},
		  {7.84587449947089,-6.42274674475586,0.0685011568568645,0.997651036940909},
		  {8.13618133342024,-6.34710322446298,0.127103409675228,0.991889471286459},
		  {8.41558747426189,-6.23786857583912,0.185264941630228,0.98268860856466},
		  {8.68022100789628,-6.09655653503517,0.242784082281684,0.970080352027934},
		  {8.92641473392827,-5.92512535565848,0.299461388629659,0.954108419793053},
		  {9.15075698446765,-5.72595067196868,0.355100336667044,0.934828193252082},
		  {9.35013890184801,-5.50179257815602,0.409508002810761,0.912306525041853},
		  {9.521797520106,-5.25575737990634,0.4624957328488,0.886621507237813},
		  {9.66335405321229,-4.99125454828647,0.513879796083535,0.857862200576027},
		  {9.77284685946935,-4.71194947246801,0.563482022403168,0.826128325642231},
		  {9.84875862526672,-4.42171266602623,0.611130420072274,0.791529917098707},
		  {9.89003739149059,-4.12456613069554,0.656659772099333,0.754186942147934},
		  {9.9618098603414,-3.81276189165876,0.718611388887495,0.695411872030659},
		  {9.95852939469363,-3.712815713417,0.718611388887495,0.695411872030659},
		  {9.95524892904587,-3.61286953517524,0.718611388887495,0.695411872030659},
		  {9.95196846339811,-3.51292335693348,0.718611388887495,0.695411872030659},
		  {9.94868799775035,-3.41297717869171,0.718611388887495,0.695411872030659},
		  {9.94540753210259,-3.31303100044995,0.718611388887495,0.695411872030659},
		  {9.94212706645482,-3.21308482220819,0.718611388887495,0.695411872030659},
		  {9.93884660080706,-3.11313864396643,0.718611388887495,0.695411872030659},
		  {9.9355661351593,-3.01319246572467,0.718611388887495,0.695411872030659},
		  {9.93228566951154,-2.91324628748291,0.718611388887495,0.695411872030659},
		  {9.92900520386377,-2.81330010924115,0.718611388887495,0.695411872030659},
		  {9.92572473821601,-2.71335393099939,0.718611388887495,0.695411872030659},
		  {9.92244427256825,-2.61340775275763,0.718611388887495,0.695411872030659},
		  {9.91916380692049,-2.51346157451587,0.718611388887495,0.695411872030659},
		  {9.91588334127272,-2.4135153962741,0.718611388887495,0.695411872030659},
		  {9.91260287562496,-2.31356921803234,0.718611388887495,0.695411872030659},
		  {9.9093224099772,-2.21362303979058,0.718611388887495,0.695411872030659},
		  {9.90604194432944,-2.11367686154882,0.718611388887495,0.695411872030659},
		  {9.90276147868168,-2.01373068330706,0.718611388887495,0.695411872030659},
		  {9.89948101303391,-1.9137845050653,0.718611388887495,0.695411872030659},
		  {9.89620054738615,-1.81383832682354,0.718611388887495,0.695411872030659},
		  {9.89292008173839,-1.71389214858178,0.718611388887495,0.695411872030659},
		  {9.88963961609063,-1.61394597034002,0.718611388887495,0.695411872030659},
		  {9.88635915044286,-1.51399979209826,0.718611388887495,0.695411872030659},
		  {9.91254237402552,-1.14474015333097,0.734717832538498,0.678372837420493},
		  {9.84148954553087,-0.853275754882536,0.786397724325556,0.617720502473074},
		  {9.72507180457521,-0.576785412210713,0.833084370432806,0.553145940725027},
		  {9.56624124329613,-0.322280298698683,0.874481333209466,0.485059169450691},
		  {9.36902544758654,-0.096214091753385,0.910325761938721,0.413892506758322},
		  {9.13842536657277,0.0956806779419957,0.9403900618128,0.34009782657894},
		  {8.88028849978967,0.248537990516175,0.964483339050073,0.264143689485139},
		  {8.60116061774088,0.358481728232137,0.982452612978349,0.186512367557797},
		  {8.30811977587749,0.422723965117233,0.994183787388245,0.10769678219132},
		  {8.0085968310273,0.439635662497012,0.999602374989007,0.0281973742808904},
		  {7.71018701157436,0.408787977753003,1,0}
		  //{7.75,0.1,0.9659,0.2588}
  };

  float Charge_C1 [66][4] = {
		  {3.45,-0.33,-0.130951010217919,0.991388840426856},
		  {3.54657036658458,-0.355964674034534,-0.130951010217919,0.991388840426856},
		  {3.64314073316916,-0.381929348069067,-0.130951010217919,0.991388840426856},
		  {3.73971109975374,-0.407894022103601,-0.130951010217919,0.991388840426856},
		  {3.83628146633833,-0.433858696138134,-0.130951010217919,0.991388840426856},
		  {3.93285183292291,-0.459823370172668,-0.130951010217919,0.991388840426856},
		  {4.02942219950749,-0.485788044207202,-0.130951010217919,0.991388840426856},
		  {4.12599256609207,-0.511752718241735,-0.130951010217919,0.991388840426856},
		  {4.22256293267665,-0.537717392276269,-0.130951010217919,0.991388840426856},
		  {4.31913329926123,-0.563682066310803,-0.130951010217919,0.991388840426856},
		  {4.41570366584582,-0.589646740345336,-0.130951010217919,0.991388840426856},
		  {4.5122740324304,-0.61561141437987,-0.130951010217919,0.991388840426856},
		  {4.60884439901498,-0.641576088414403,-0.130951010217919,0.991388840426856},
		  {4.70541476559956,-0.667540762448937,-0.130951010217919,0.991388840426856},
		  {4.80198513218414,-0.693505436483471,-0.130951010217919,0.991388840426856},
		  {4.89855549876872,-0.719470110518004,-0.130951010217919,0.991388840426856},
		  {4.9951258653533,-0.745434784552538,-0.130951010217919,0.991388840426856},
		  {5.09169623193789,-0.771399458587071,-0.130951010217919,0.991388840426856},
		  {5.18826659852247,-0.797364132621605,-0.130951010217919,0.991388840426856},
		  {5.28483696510705,-0.823328806656139,-0.130951010217919,0.991388840426856},
		  {5.38140733169163,-0.849293480690672,-0.130951010217919,0.991388840426856},
		  {5.47797769827621,-0.875258154725206,-0.130951010217919,0.991388840426856},
		  {5.57454806486079,-0.90122282875974,-0.130951010217919,0.991388840426856},
		  {5.67111843144538,-0.927187502794274,-0.130951010217919,0.991388840426856},
		  {5.76768879802996,-0.953152176828807,-0.130951010217919,0.991388840426856},
		  {5.86425916461454,-0.979116850863341,-0.130951010217919,0.991388840426856},
		  {5.96082953119912,-1.00508152489787,-0.130951010217919,0.991388840426856},
		  {6.0573998977837,-1.03104619893241,-0.130951010217919,0.991388840426856},
		  {6.15397026436828,-1.05701087296694,-0.130951010217919,0.991388840426856},
		  {6.25054063095286,-1.08297554700148,-0.130951010217919,0.991388840426856},
		  {6.34711099753745,-1.10894022103601,-0.130951010217919,0.991388840426856},
		  {6.44368136412203,-1.13490489507054,-0.130951010217919,0.991388840426856},
		  {6.54025173070661,-1.16086956910508,-0.130951010217919,0.991388840426856},
		  {6.63682209729119,-1.18683424313961,-0.130951010217919,0.991388840426856},
		  {6.73339246387577,-1.21279891717414,-0.130951010217919,0.991388840426856},
		  {6.82996283046035,-1.23876359120868,-0.130951010217919,0.991388840426856},
		  {6.92653319704493,-1.26472826524321,-0.130951010217919,0.991388840426856},
		  {7.02310356362951,-1.29069293927775,-0.130951010217919,0.991388840426856},
		  {7.11967393021409,-1.31665761331228,-0.130951010217919,0.991388840426856},
		  {7.21624429679867,-1.34262228734681,-0.130951010217919,0.991388840426856},
		  {7.31281466338325,-1.36858696138135,-0.130951010217919,0.991388840426856},
		  {7.40938502996783,-1.39455163541588,-0.130951010217919,0.991388840426856},
		  {7.50595539655242,-1.42051630945041,-0.130951010217919,0.991388840426856},
		  {7.602525763137,-1.44648098348495,-0.130951010217919,0.991388840426856},
		  {7.69,-1.47,0.00872653549837393,0.999961923064171},
		  {7.96336746214939,-1.58750829385432,0.0372761898954044,0.99930500132186},
		  {8.25589186179681,-1.52095398812644,0.111621386485638,0.993750806831886},
		  {8.53527993681809,-1.41167314105844,0.185346185010255,0.982673288383349},
		  {8.79532889831412,-1.26209193359962,0.25804081881223,0.966134015458888},
		  {9.03026531156877,-1.0755312685948,0.329301246949127,0.944224914285654},
		  {9.23487327402061,-0.856133042299995,0.398731399875827,0.91706775690407},
		  {9.40461021527513,-0.608768188746464,0.46594538082176,0.884813484351852},
		  {9.53570774824242,-0.338928538491185,0.530569610627284,0.847641367725061},
		  {9.62525533237012,-0.052604892634103,0.592244904118075,0.805758011779078},
		  {9.67126489153606,0.243845980977961,0.650628466476912,0.759396206607527},
		  {9.67271495199686,0.543842476498592,0.705395798516931,0.70881363378159},
		  {9.62957332047107,0.840724270533345,0.756242500266707,0.654291434141056},
		  {9.54279779887312,1.12790019022614,0.802885962842749,0.596132645197419},
		  {9.41431491982985,1.39899454611123,0.845066939205872,0.534660516834017},
		  {9.24697717507985,1.64798868094574,0.882550985071112,0.470216714664642},
		  {9.04449968634213,1.86935459194937,0.915129761962497,0.403159421036474},
		  {8.81137772464559,2.05817765985887,0.942622195170241,0.333861344232058},
		  {8.55278690930056,2.21026576004818,0.964875480174367,0.262707646935304},
		  {8.27446830222859,2.32224233330132,0.981765931940987,0.190093805475204},
		  {7.9826009487101,2.39162134994261,0.993199672370811,0.116423411745725},
		  {7.68366469431575,2.41686250302007,1,0}
		  //{7.75,2.71,0.9659,0.2588}
  };

  float Gate_A2 [41][4] = {
		  {-5.74171992119031,-1.71110231983951,0.999460022924026,0.0328582193173192},
		  {-6.03590651686062,-1.65232947808491,0.995143704589371,0.0984327547930213},
		  {-6.31985103641851,-1.55550226180227,0.98652970858956,0.163582193622035},
		  {-6.58865374729346,-1.42229151664156,0.973655235761062,0.228025178160373},
		  {-6.83767620321592,-1.25499592062556,0.956575886449908,0.291483401693086},
		  {-7.06262128501637,-1.05650231827579,0.93536542039324,0.353682810343644},
		  {-7.25960735150102,-0.830235905366351,0.910115438176801,0.414354786616795},
		  {-7.42523522086002,-0.580101123915233,0.880934985644038,0.47323730946359},
		  {-7.55664682678047,-0.310414287326184,0.847950082965236,0.530076085858672},
		  {-7.65157453709722,-0.0258290982983292,0.811303180400467,0.584625649002922},
		  {-7.70838028394121,0.268743655237187,0.771152543106738,0.63665041840873},
		  {-7.75570933384884,0.710523447340952,0.732994930366677,0.680234100921697},
		  {-7.82231870121547,1.00303531407291,0.781674876325009,0.623686129172585},
		  {-7.93168719311271,1.28238909153104,0.826002917566718,0.563665840876728},
		  {-8.08138260248241,1.54237233024777,0.865732261700748,0.50050739360224},
		  {-8.2680759062675,1.77720335528877,0.900641719169442,0.434562416335689},
		  {-8.48761529837376,1.98165984286892,0.930536934701555,0.366198051819276},
		  {-8.73511852021135,2.1511949577567,0.955251469367786,0.295794912516571},
		  {-9.00508143551007,2.28203846872846,0.974647727214572,0.223744961586779},
		  {-9.29150043485153,2.37128059340192,0.988617721317215,0.150449330665034},
		  {-9.58800594780735,2.41693670785341,0.997083674987392,0.076316086598024},
		  {-9.88800409355424,2.41799148196463,0.999998454787884,0.0017579595684431},
		  {-10.1848233198484,2.37442145898862,-0.997345832943761,0.0728099547432536},
		  {-10.471862769307,2.28719557719608,-0.989140577689062,0.146972506166797},
		  {-10.7427390735319,2.15825362200115,-0.975428371045973,0.220316801353414},
		  {-10.9914283105725,1.99046308776236,-0.956285554494275,0.292434502522493},
		  {-11.2123999687878,1.78755540859376,-0.931818703947002,0.362924100845522},
		  {-11.4007399379304,1.55404297632653,-0.902164036398614,0.431393151810458},
		  {-11.5522597923,1.2951187910293,-0.867486651549104,0.497460460121328},
		  {-11.6635899356548,1.01654097572342,-0.827979612626239,0.560758201968819},
		  {-11.7322545364665,0.724504723529673,-0.783862871523363,0.620933972856331},
		  {-11.7567265870582,0.425504524968138,-0.735382044236978,0.677652749580376},
		  {-11.736461862186,0.126189739289492,-0.68280704342172,0.730598755442199},
		  {-11.671911021871,-0.166783278264384,-0.626430575675889,0.779477218306202},
		  {-11.564509589331,-0.446899204781187,-0.566566511923727,0.824016011717358},
		  {-11.4166460268897,-0.707928641631054,-0.503548139967223,0.86396716994082},
		  {-11.2316086198106,-0.944066647850843,-0.437726308936183,0.899108268488898},
		  {-11.0135123492892,-1.15006183416507,-0.369467475967196,0.929243662449429},
		  {-10.7672073808466,-1.32133314676739,-0.299151665986412,0.954205575721267},
		  {-10.4981712032214,-1.45407174374966,-0.227170355954875,0.973855035092665},
		  {-10.2123868164419,-1.9,0,1}
		  //{-10.2123868164419,-1.8,-0.2588,0.9659}
  };

  float Gate_B2 [58][4] = {
		  {-5.74171992119031,-1.71110231983951,0.999460022924026,0.0328582193173192},
		  {-6.03590651686062,-1.65232947808491,0.995143704589371,0.0984327547930213},
		  {-6.31985103641851,-1.55550226180227,0.98652970858956,0.163582193622035},
		  {-6.58865374729346,-1.42229151664156,0.973655235761062,0.228025178160373},
		  {-6.83767620321592,-1.25499592062556,0.956575886449908,0.291483401693086},
		  {-7.06262128501637,-1.05650231827579,0.93536542039324,0.353682810343644},
		  {-7.25960735150102,-0.830235905366351,0.910115438176801,0.414354786616795},
		  {-7.42523522086002,-0.580101123915233,0.880934985644038,0.47323730946359},
		  {-7.55664682678047,-0.310414287326184,0.847950082965236,0.530076085858672},
		  {-7.65157453709722,-0.0258290982983292,0.811303180400467,0.584625649002922},
		  {-7.70838028394121,0.268743655237187,0.771152543106738,0.63665041840873},
		  {-7.71714023196871,0.452866365240673,0.727672737590022,0.685924476140226},
		  {-7.72304175457506,0.552692073507265,0.727672737590022,0.685924476140225},
		  {-7.72894327718141,0.652517781773857,0.727672737590022,0.685924476140225},
		  {-7.73484479978777,0.752343490040449,0.727672737590022,0.685924476140225},
		  {-7.74074632239412,0.852169198307041,0.727672737590022,0.685924476140225},
		  {-7.74664784500047,0.951994906573633,0.727672737590022,0.685924476140225},
		  {-7.75254936760682,1.05182061484022,0.727672737590022,0.685924476140225},
		  {-7.75845089021318,1.15164632310682,0.727672737590022,0.685924476140225},
		  {-7.76435241281953,1.25147203137341,0.727672737590022,0.685924476140225},
		  {-7.77025393542588,1.35129773964,0.727672737590022,0.685924476140225},
		  {-7.77615545803223,1.45112344790659,0.727672737590022,0.685924476140225},
		  {-7.78205698063858,1.55094915617318,0.727672737590022,0.685924476140225},
		  {-7.78795850324494,1.65077486443978,0.727672737590022,0.685924476140225},
		  {-7.79386002585129,1.75060057270637,0.727672737590022,0.685924476140225},
		  {-7.79976154845764,1.85042628097296,0.727672737590022,0.685924476140225},
		  {-7.80566307106399,1.95025198923955,0.727672737590022,0.685924476140225},
		  {-7.81156459367035,2.05007769750614,0.727672737590022,0.685924476140225},
		  {-7.8174661162767,2.14990340577274,0.727672737590022,0.685924476140225},
		  {-7.82336763888305,2.24972911403933,0.727672737590022,0.685924476140225},
		  {-7.79677891163774,2.54453216064644,0.734574447854204,0.678528098577864},
		  {-7.86746209211175,2.83608642317415,0.786005916510823,0.618218973511798},
		  {-7.98329523490138,3.11282218709251,0.832499392181587,0.554025957891224},
		  {-8.14137207744718,3.36779613056664,0.873762784881004,0.48635233705308},
		  {-8.33772645947809,3.59461093752875,0.909536862026415,0.415623262841654},
		  {-8.56743183428102,3.7875758068357,0.93959687703728,0.342283082640364},
		  {-8.82472487614093,3.94184923491219,0.963753981280072,0.266792547809737},
		  {-9.10315008263121,4.05356048945194,0.981856410488384,0.18962591906927},
		  {-9.39572174367149,4.1199067263922,0.993790438204719,0.111267987008266},
		  {-9.69509921353675,4.13922331348925,0.999481090254051,0.0322110264439699},
		  {-9.99377108822934,4.11102559607083,-0.998892615760571,0.0470482962391168},
		  {-10.2842436671894,4.03602105705953,-0.992028711748515,0.126012043339444},
		  {-10.5592289708245,3.91609156617129,-0.97893249991602,0.204184134075522},
		  {-10.8118275964844,3.75424616365785,-0.959686255727956,0.281073461157143},
		  {-11.0357018250099,3.55454556325291,-0.934410891529647,0.356196976111211},
		  {-11.2252346345996,3.32200026854875,-0.903265196928785,0.429082723978959},
		  {-11.3756706323233,3.06244485907155,-0.866444841217735,0.499272808319434},
		  {-11.4832353673006,2.78239160022736,-0.824181144103409,0.566326267891925},
		  {-11.5452300319672,2.48886705005671,-0.776739622467452,0.629821846944928},
		  {-11.5600991753659,2.18923576234698,-0.724418322286562,0.689360641707606},
		  {-11.5274697295327,1.89101550940527,-0.667545946192459,0.744568606457468},
		  {-11.4481603698007,1.60168866056662,-0.606479788434895,0.795098903420175},
		  {-11.3241609741725,1.3285144489656,-0.541603490221075,0.840634081738511},
		  {-11.1585826971262,1.07834683681251,-0.4733246295333,0.880888071821366},
		  {-10.9555799105078,0.857462548948574,-0.40207216056654,0.915607982543487},
		  {-10.7202459700184,0.67140358933161,-0.328293718872375,0.944575690005277},
		  {-10.4584854225238,0.524838191725812,-0.252452809139435,0.967609207871446},
		  {-10.1768658605144,0.421443693353606,0,1}
		  //{-10.2123868164419,0.72,-0.2588,0.9659}//30
  };

  float Gate_C2 [64][4] = {
		  {-5.55372753003638,-1.74063526736231,0.999779344403927,0.0210062491476822},
		  {-5.65363927753573,-1.73643494456206,0.999779344403927,0.0210062491476822},
		  {-5.75355102503508,-1.73223462176181,0.999779344403927,0.0210062491476822},
		  {-5.85346277253443,-1.72803429896156,0.999779344403927,0.0210062491476822},
		  {-5.95337452003378,-1.7238339761613,0.999779344403927,0.0210062491476822},
		  {-6.05328626753312,-1.71963365336105,0.999779344403927,0.0210062491476822},
		  {-6.15319801503247,-1.7154333305608,0.999779344403927,0.0210062491476822},
		  {-6.25310976253182,-1.71123300776055,0.999779344403927,0.0210062491476822},
		  {-6.35302151003117,-1.7070326849603,0.999779344403927,0.0210062491476822},
		  {-6.45293325753052,-1.70283236216005,0.999779344403927,0.0210062491476822},
		  {-6.55284500502987,-1.6986320393598,0.999779344403927,0.0210062491476822},
		  {-6.65275675252922,-1.69443171655955,0.999779344403927,0.0210062491476822},
		  {-6.75266850002857,-1.6902313937593,0.999779344403927,0.0210062491476822},
		  {-6.85258024752792,-1.68603107095905,0.999779344403927,0.0210062491476822},
		  {-6.95249199502727,-1.68183074815879,0.999779344403927,0.0210062491476822},
		  {-7.05240374252662,-1.67763042535854,0.999779344403927,0.0210062491476822},
		  {-7.15231549002597,-1.67343010255829,0.999779344403927,0.0210062491476822},
		  {-7.25222723752532,-1.66922977975804,0.999779344403927,0.0210062491476822},
		  {-7.35213898502467,-1.66502945695779,0.999779344403927,0.0210062491476822},
		  {-7.45205073252402,-1.66082913415754,0.999779344403927,0.0210062491476822},
		  {-7.55196248002337,-1.65662881135729,0.999779344403927,0.0210062491476822},
		  {-7.65187422752272,-1.65242848855704,0.999779344403927,0.0210062491476822},
		  {-7.75178597502207,-1.64822816575679,0.999779344403927,0.0210062491476822},
		  {-7.85169772252142,-1.64402784295653,0.999779344403927,0.0210062491476822},
		  {-7.95160947002077,-1.63982752015628,0.999779344403927,0.0210062491476822},
		  {-8.05152121752012,-1.63562719735603,0.999779344403927,0.0210062491476822},
		  {-8.15143296501947,-1.63142687455578,0.999779344403927,0.0210062491476822},
		  {-8.25134471251882,-1.62722655175553,0.999779344403927,0.0210062491476822},
		  {-8.35125646001817,-1.62302622895528,0.999779344403927,0.0210062491476822},
		  {-8.45116820751752,-1.61882590615503,0.999779344403927,0.0210062491476822},
		  {-8.55107995501686,-1.61462558335478,0.999779344403927,0.0210062491476822},
		  {-8.65099170251621,-1.61042526055453,0.999779344403927,0.0210062491476822},
		  {-8.75090345001556,-1.60622493775428,0.999779344403927,0.0210062491476822},
		  {-8.85081519751491,-1.60202461495402,0.999779344403927,0.0210062491476822},
		  {-8.95072694501426,-1.59782429215377,0.999779344403927,0.0210062491476822},
		  {-9.05063869251361,-1.59362396935352,0.999779344403927,0.0210062491476822},
		  {-9.15055044001296,-1.58942364655327,0.999779344403927,0.0210062491476822},
		  {-9.25046218751231,-1.58522332375302,0.999779344403927,0.0210062491476822},
		  {-9.35037393501166,-1.58102300095277,0.999779344403927,0.0210062491476822},
		  {-9.45028568251101,-1.57682267815252,0.999779344403927,0.0210062491476822},
		  {-9.55019743001036,-1.57262235535227,0.999779344403927,0.0210062491476822},
		  {-9.65010917750971,-1.56842203255202,0.999779344403927,0.0210062491476822},
		  {-9.75002092500906,-1.56422170975177,0.999779344403927,0.0210062491476822},
		  {-9.84993267250841,-1.56002138695151,0.999779344403927,0.0210062491476822},
		  {-9.94984442000776,-1.55582106415126,0.999779344403927,0.0210062491476822},
		  {-10.2697298447051,-1.51542712646728,0.999217664785489,0.0395481779685783},
		  {-10.561319119131,-1.44488851973467,0.992966325734746,0.118397111268973},
		  {-10.838150513575,-1.32928411216214,0.980502757470191,0.196505324592874},
		  {-11.0933071759446,-1.17150237162027,0.961904934985411,0.273384154717701},
		  {-11.3204138145299,-0.975485600117197,0.937289210600881,0.348552629729253},
		  {-11.5137959897267,-0.746131432254148,0.906809586036677,0.421540478094323},
		  {-11.6686218944134,-0.489170463938049,0.870656748941752,0.491891070789234},
		  {-11.7810230804865,-0.211023068894793,0.829056879907474,0.559164278077636},
		  {-11.8481911151069,0.0813610194637189,0.782270237429029,0.622939223064923},
		  {-11.8684477516228,0.380676352644403,0.730589529667497,0.682816914802369},
		  {-11.8412868618945,0.679444299501437,0.674338083199245,0.738422744467672},
		  {-11.7673870823076,0.970199905770715,0.613867820209358,0.789408829005232},
		  {-11.6485948575044,1.24567841187657,0.54955705678427,0.835456187563783},
		  {-11.487878305499,1.49899676871532,0.481808136077981,0.876276737115086},
		  {-11.289253056893,1.72382561609972,0.41104491115933,0.91161509476863},
		  {-11.0576819211582,1.91454742684646,0.337710093288216,0.941250175506631},
		  {-10.7989508869034,2.06639686515104,0.262262482210573,0.964996575343534},
		  {-10.5195245543566,2.17557985228481,0.18517409580002,0.982705731256639},
		  {-10.2263846121983,2.23936836466309,0,1}
		  //{-10.21,2.54,0.2588,0.9659} //30
  };
  /*
  float A2_Charge [139][4] = {
		  {-9.98,-1.54,-0.00957529578675397,0.999954155804453},
		  {-9.88001833725788,-1.541914971363,-0.00957529578675397,0.999954155804453},
		  {-9.78003667451576,-1.54382994272601,-0.00957529578675397,0.999954155804453},
		  {-9.68005501177364,-1.54574491408901,-0.00957529578675397,0.999954155804453},
		  {-9.58007334903152,-1.54765988545202,-0.00957529578675397,0.999954155804453},
		  {-9.4800916862894,-1.54957485681502,-0.00957529578675397,0.999954155804453},
		  {-9.38011002354728,-1.55148982817803,-0.00957529578675397,0.999954155804453},
		  {-9.28012836080516,-1.55340479954103,-0.00957529578675397,0.999954155804453},
		  {-9.18014669806304,-1.55531977090403,-0.00957529578675397,0.999954155804453},
		  {-9.08016503532092,-1.55723474226704,-0.00957529578675397,0.999954155804453},
		  {-8.9801833725788,-1.55914971363004,-0.00957529578675397,0.999954155804453},
		  {-8.88020170983668,-1.56106468499305,-0.00957529578675397,0.999954155804453},
		  {-8.78022004709456,-1.56297965635605,-0.00957529578675397,0.999954155804453},
		  {-8.68023838435244,-1.56489462771906,-0.00957529578675397,0.999954155804453},
		  {-8.58025672161032,-1.56680959908206,-0.00957529578675397,0.999954155804453},
		  {-8.48027505886821,-1.56872457044506,-0.00957529578675397,0.999954155804453},
		  {-8.38029339612608,-1.57063954180807,-0.00957529578675397,0.999954155804453},
		  {-8.28031173338396,-1.57255451317107,-0.00957529578675397,0.999954155804453},
		  {-8.18033007064185,-1.57446948453408,-0.00957529578675397,0.999954155804453},
		  {-8.08034840789973,-1.57638445589708,-0.00957529578675397,0.999954155804453},
		  {-7.98036674515761,-1.57829942726009,-0.00957529578675397,0.999954155804453},
		  {-7.88038508241549,-1.58021439862309,-0.00957529578675397,0.999954155804453},
		  {-7.78040341967337,-1.58212936998609,-0.00957529578675397,0.999954155804453},
		  {-7.68042175693125,-1.5840443413491,-0.00957529578675397,0.999954155804453},
		  {-7.58044009418913,-1.5859593127121,-0.00957529578675397,0.999954155804453},
		  {-7.48045843144701,-1.58787428407511,-0.00957529578675397,0.999954155804453},
		  {-7.38047676870489,-1.58978925543811,-0.00957529578675397,0.999954155804453},
		  {-7.28049510596277,-1.59170422680112,-0.00957529578675397,0.999954155804453},
		  {-7.18051344322065,-1.59361919816412,-0.00957529578675397,0.999954155804453},
		  {-7.08053178047853,-1.59553416952712,-0.00957529578675397,0.999954155804453},
		  {-6.98055011773641,-1.59744914089013,-0.00957529578675397,0.999954155804453},
		  {-6.88056845499429,-1.59936411225313,-0.00957529578675397,0.999954155804453},
		  {-6.78058679225217,-1.60127908361614,-0.00957529578675397,0.999954155804453},
		  {-6.68060512951005,-1.60319405497914,-0.00957529578675397,0.999954155804453},
		  {-6.58062346676793,-1.60510902634215,-0.00957529578675397,0.999954155804453},
		  {-6.48064180402581,-1.60702399770515,-0.00957529578675397,0.999954155804453},
		  {-6.38066014128369,-1.60893896906815,-0.00957529578675397,0.999954155804453},
		  {-6.28067847854157,-1.61085394043116,-0.00957529578675397,0.999954155804453},
		  {-6.18069681579945,-1.61276891179416,-0.00957529578675397,0.999954155804453},
		  {-6.08071515305734,-1.61468388315717,-0.00957529578675397,0.999954155804453},
		  {-5.98073349031522,-1.61659885452017,-0.00957529578675397,0.999954155804453},
		  {-5.8807518275731,-1.61851382588318,-0.00957529578675397,0.999954155804453},
		  {-5.78077016483098,-1.62042879724618,-0.00957529578675397,0.999954155804453},
		  {-5.68078850208886,-1.62234376860918,-0.00957529578675397,0.999954155804453},
		  {-5.58080683934674,-1.62425873997219,-0.00957529578675397,0.999954155804453},
		  {-5.48082517660462,-1.62617371133519,-0.00957529578675397,0.999954155804453},
		  {-5.3808435138625,-1.6280886826982,-0.00957529578675397,0.999954155804453},
		  {-5.28086185112038,-1.6300036540612,-0.00957529578675397,0.999954155804453},
		  {-5.18088018837826,-1.63191862542421,-0.00957529578675397,0.999954155804453},
		  {-5.08089852563615,-1.63383359678721,-0.00957529578675397,0.999954155804453},
		  {-4.98091686289403,-1.63574856815021,-0.00957529578675397,0.999954155804453},
		  {-4.88093520015191,-1.63766353951322,-0.00957529578675397,0.999954155804453},
		  {-4.78095353740979,-1.63957851087622,-0.00957529578675397,0.999954155804453},
		  {-4.68097187466767,-1.64149348223923,-0.00957529578675397,0.999954155804453},
		  {-4.58099021192555,-1.64340845360223,-0.00957529578675397,0.999954155804453},
		  {-4.48100854918343,-1.64532342496524,-0.00957529578675397,0.999954155804453},
		  {-4.38102688644131,-1.64723839632824,-0.00957529578675397,0.999954155804453},
		  {-4.28104522369919,-1.64915336769124,-0.00957529578675397,0.999954155804453},
		  {-4.18106356095707,-1.65106833905425,-0.00957529578675397,0.999954155804453},
		  {-4.08108189821496,-1.65298331041725,-0.00957529578675397,0.999954155804453},
		  {-3.98110023547284,-1.65489828178026,-0.00957529578675397,0.999954155804453},
		  {-3.88111857273072,-1.65681325314326,-0.00957529578675397,0.999954155804453},
		  {-3.7811369099886,-1.65872822450626,-0.00957529578675397,0.999954155804453},
		  {-3.68115524724648,-1.66064319586927,-0.00957529578675397,0.999954155804453},
		  {-3.58117358450436,-1.66255816723227,-0.00957529578675397,0.999954155804453},
		  {-3.48119192176224,-1.66447313859528,-0.00957529578675397,0.999954155804453},
		  {-3.38121025902012,-1.66638810995828,-0.00957529578675397,0.999954155804453},
		  {-3.281228596278,-1.66830308132129,-0.00957529578675397,0.999954155804453},
		  {-3.18124693353588,-1.67021805268429,-0.00957529578675397,0.999954155804453},
		  {-3.08126527079377,-1.67213302404729,-0.00957529578675397,0.999954155804453},
		  {-2.98128360805165,-1.6740479954103,-0.00957529578675397,0.999954155804453},
		  {-2.88130194530953,-1.6759629667733,-0.00957529578675397,0.999954155804453},
		  {-2.78132028256741,-1.67787793813631,-0.00957529578675397,0.999954155804453},
		  {-2.68133861982529,-1.67979290949931,-0.00957529578675397,0.999954155804453},
		  {-2.58135695708317,-1.68170788086232,-0.00957529578675397,0.999954155804453},
		  {-2.48137529434105,-1.68362285222532,-0.00957529578675397,0.999954155804453},
		  {-2.38139363159893,-1.68553782358832,-0.00957529578675397,0.999954155804453},
		  {-2.28141196885681,-1.68745279495133,-0.00957529578675397,0.999954155804453},
		  {-2.18143030611469,-1.68936776631433,-0.00957529578675397,0.999954155804453},
		  {-2.08144864337257,-1.69128273767734,-0.00957529578675397,0.999954155804453},
		  {-1.98146698063045,-1.69319770904034,-0.00957529578675397,0.999954155804453},
		  {-1.88148531788833,-1.69511268040335,-0.00957529578675397,0.999954155804453},
		  {-1.78150365514621,-1.69702765176635,-0.00957529578675397,0.999954155804453},
		  {-1.68152199240409,-1.69894262312935,-0.00957529578675397,0.999954155804453},
		  {-1.58154032966198,-1.70085759449236,-0.00957529578675397,0.999954155804453},
		  {-1.48155866691986,-1.70277256585536,-0.00957529578675397,0.999954155804453},
		  {-1.38157700417774,-1.70468753721837,-0.00957529578675397,0.999954155804453},
		  {-1.28159534143562,-1.70660250858137,-0.00957529578675397,0.999954155804453},
		  {-1.1816136786935,-1.70851747994438,-0.00957529578675397,0.999954155804453},
		  {-1.08163201595138,-1.71043245130738,-0.00957529578675397,0.999954155804453},
		  {-0.981650353209259,-1.71234742267038,-0.00957529578675397,0.999954155804453},
		  {-0.88166869046714,-1.71426239403339,-0.00957529578675397,0.999954155804453},
		  {-0.781687027725021,-1.71617736539639,-0.00957529578675397,0.999954155804453},
		  {-0.681705364982901,-1.7180923367594,-0.00957529578675397,0.999954155804453},
		  {-0.581723702240782,-1.7200073081224,-0.00957529578675397,0.999954155804453},
		  {-0.481742039498663,-1.72192227948541,-0.00957529578675397,0.999954155804453},
		  {-0.381760376756544,-1.72383725084841,-0.00957529578675397,0.999954155804453},
		  {-0.281778714014425,-1.72575222221141,-0.00957529578675397,0.999954155804453},
		  {-0.181797051272305,-1.72766719357442,-0.00957529578675397,0.999954155804453},
		  {-0.0818153885301861,-1.72958216493742,-0.00957529578675397,0.999954155804453},
		  {-0.06,-1.75,0.193493588767752,0.981101539651109},
		  {0.0325120462211552,-1.71203262842947,0.193493588767752,0.981101539651109},
		  {0.12502409244231,-1.67406525685894,0.193493588767752,0.981101539651109},
		  {0.217536138663466,-1.6360978852884,0.193493588767752,0.981101539651109},
		  {0.310048184884621,-1.59813051371787,0.193493588767752,0.981101539651109},
		  {0.402560231105776,-1.56016314214734,0.193493588767752,0.981101539651109},
		  {0.495072277326931,-1.52219577057681,0.193493588767752,0.981101539651109},
		  {0.587584323548087,-1.48422839900628,0.193493588767752,0.981101539651109},
		  {0.680096369769242,-1.44626102743574,0.193493588767752,0.981101539651109},
		  {0.772608415990397,-1.40829365586521,0.193493588767752,0.981101539651109},
		  {0.865120462211552,-1.37032628429468,0.193493588767752,0.981101539651109},
		  {0.957632508432708,-1.33235891272415,0.193493588767752,0.981101539651109},
		  {1.05014455465386,-1.29439154115362,0.193493588767752,0.981101539651109},
		  {1.14265660087502,-1.25642416958308,0.193493588767752,0.981101539651109},
		  {1.23516864709617,-1.21845679801255,0.193493588767752,0.981101539651109},
		  {1.32768069331733,-1.18048942644202,0.193493588767752,0.981101539651109},
		  {1.42019273953848,-1.14252205487149,0.193493588767752,0.981101539651109},
		  {1.51270478575964,-1.10455468330096,0.193493588767752,0.981101539651109},
		  {1.60521683198079,-1.06658731173043,0.193493588767752,0.981101539651109},
		  {1.69772887820195,-1.02861994015989,0.193493588767752,0.981101539651109},
		  {1.7902409244231,-0.990652568589361,0.193493588767752,0.981101539651109},
		  {1.88275297064426,-0.952685197018829,0.193493588767752,0.981101539651109},
		  {1.97526501686542,-0.914717825448297,0.193493588767752,0.981101539651109},
		  {2.06777706308657,-0.876750453877765,0.193493588767752,0.981101539651109},
		  {2.16028910930773,-0.838783082307234,0.193493588767752,0.981101539651109},
		  {2.25280115552888,-0.800815710736702,0.193493588767752,0.981101539651109},
		  {2.34531320175004,-0.76284833916617,0.193493588767752,0.981101539651109},
		  {2.43782524797119,-0.724880967595638,0.193493588767752,0.981101539651109},
		  {2.53033729419235,-0.686913596025106,0.193493588767752,0.981101539651109},
		  {2.6228493404135,-0.648946224454574,0.193493588767752,0.981101539651109},
		  {2.71536138663466,-0.610978852884042,0.193493588767752,0.981101539651109},
		  {2.80787343285581,-0.57301148131351,0.193493588767752,0.981101539651109},
		  {2.90038547907697,-0.535044109742978,0.193493588767752,0.981101539651109},
		  {2.99289752529812,-0.497076738172446,0.193493588767752,0.981101539651109},
		  {3.08540957151928,-0.459109366601914,0.193493588767752,0.981101539651109},
		  {3.17792161774043,-0.421141995031382,0.193493588767752,0.981101539651109},
		  {3.27043366396159,-0.38317462346085,0.193493588767752,0.981101539651109},
		  {3.36294571018274,-0.345207251890318,0.193493588767752,0.981101539651109},
		  {3.4,-0.33,0,1}
  };
  */
  //float ReadyX = 0.0;
  //float ReadyY = 0.0;

  //float PickX = 8.0;
  //float PickY = -1.6;
  //float PutdownX = -10.3;
  //float PutdownY = -1.8;

  //Zone's position
  int Zone_number = 7;
  //float Start_Zone [2] = {0};

  float Zone [7][4] = {
		  {7.7    ,-1.5 ,1,0},		//A1
		  {7.55   ,0.41  ,1,0},		//B1
		  {7.5    ,2.4   ,1,0},		//C1
		  {-10.08 ,-1.8 ,0,1},		//A2
		  {-9.89  ,0.37  ,0,1},		//B2
		  {-9.94  ,2.25  ,0,1},		//C2
		  {3.4,   -0.33  ,0,1}		//Charge
  };

  /*
  float Zone [7][4] = {
		  {7.75   ,-1.23 ,0.9659 ,0.2588},		//A1
		  {7.75   ,0.1   ,0.9659 ,0.2588},		//B1
		  {7.75   ,2.71  ,0.9659 ,0.2588},		//C1
		  {-10.21 ,-1.8  ,-0.2588 ,0.9659},		//A2
		  {-10.21 ,0.72  ,-0.2588 ,0.9659},		//B2
		  {-10.21 ,2.54  ,0.2588  ,0.9659},		//C2
		  {3.4    ,-0.33 ,0      ,1}		        //Charge
  };
  */
  /*
  float A1[4] = {7.7    ,-1.42 ,1,0};
  float B1[4] = {7.55   ,0.41  ,1,0};
  float C1[4] = {7.5    ,2.4   ,1,0};
  float A2[4] = {-10.08 ,-1.55 ,0,1};
  float B2[4] = {-9.89  ,0.37  ,0,1};
  float C2[4] = {-9.94  ,2.25  ,0,1};
  */

  //Variables for valid pose calculation
  float startX = start.pose.position.x;
  float startY = start.pose.position.y;
  float goalX = goal.pose.position.x;
  float goalY = goal.pose.position.y;

  //Variables for path finding
  float goalX_ = goal.pose.position.x;
  float goalY_ = goal.pose.position.y;
  float currentX = start.pose.position.x;
  float currentY = start.pose.position.y;
  float currentZ = start.pose.orientation.z;
  float currentW = start.pose.orientation.w;
  float currentTh = asin(start.pose.orientation.z) * 2;

  ////////////////////////////
  //cout<<"Got: "<<start.pose.position.x<<", "<<start.pose.position.y<<", "<<goal.pose.position.x<<", "<<goal.pose.position.y<<endl;
  ////////////////////////////
  getCorrdinate(startX, startY);
  getCorrdinate(goalX, goalY);

  int startCell;
  int goalCell;

  if (isCellInsideMap(startX, startY) && isCellInsideMap(goalX, goalY))
  {
    startCell = convertToCellIndex(startX, startY);

    goalCell = convertToCellIndex(goalX, goalY);

    MyExcelFile << startCell <<"\t"<< start.pose.position.x <<"\t"<< start.pose.position.y <<"\t"<< goalCell <<"\t"<< goal.pose.position.x <<"\t"<< goal.pose.position.y;

  }
  else
  {
    ROS_WARN("the start or goal is out of the map");
    return false;
  }
  //ROS_INFO("Begin");

  /////////////////////////////////////////////////////////
  // call global planner

  if (isStartAndGoalCellsValid(startCell, goalCell)){
	  ROS_INFO("====================================");
	  cout<<"Got goal: "<<goalX_<<", "<<goalY_<<endl;
	  cout<<"Got start: "<<currentX<<", "<<currentY<<endl;
	  geometry_msgs::PoseStamped pose = goal;
	  geometry_msgs::Vector3 path;
	  std_msgs::Float32MultiArray pos_array;
	  bool replan = false; 		//will robot need a straight line to start point
	  int goal_case = 0;	//where is goal
	  int start_case = 0;	//where to start
	  int rows_start = 0;
	  int rows_mid = 0;
	  int rows_goal = 0;

	  float strange_dist = 1.1; //meter
	  float angel_dist = 0.5; //radian

	  float Smallest_dist = 9999;
	  float Temp_dist = 0;
	  float Temp_point[4] = {0};

	  //Find where will the robot go
	  for (int i = 0; i<Zone_number; i++){
		  if ((abs(goal.pose.position.x - Zone[i][0]) <= 0.1)&&(abs(goal.pose.position.y - Zone[i][1])<=0.1)){
			  switch (i+1){
			  	case To_A1:
			  		 ROS_INFO("Robot will go to A1 Zone");
			  		 goal_case = To_A1;
			  		 break;
			  	case To_B1:
			  		 ROS_INFO("Robot will go to B1 Zone");
			  		 goal_case = To_B1;
			  		 break;
			  	case To_C1:
			  		 ROS_INFO("Robot will go to C1 Zone");
			  		 goal_case = To_C1;
			  		 break;
			  	case To_A2:
			  		 ROS_INFO("Robot will go to A2 Zone");
			  		 goal_case = To_A2;
			  		 break;
			  	case To_B2:
			  		 ROS_INFO("Robot will go to B2 Zone");
			  		 goal_case = To_B2;
			  		 break;
			  	case To_C2:
			  		 ROS_INFO("Robot will go to C2 Zone");
			  		 goal_case = To_C2;
			  		 break;
			  	case To_Charge:
			  		 ROS_INFO("Robot will go to Charge Station");
			  		 goal_case = To_Charge;
			  		 break;
			  	default:
			  		 ROS_INFO("Goal is not valid");
					 break;
			  }
		  }
	  }

	  //Find where is the robot
	  for (int i = 0; i<Zone_number; i++){
		  if ((abs(currentZ - Zone[i][2])<=angel_dist)&&(abs(currentW - Zone[i][3])<=angel_dist)){
			  Temp_dist = sqrt(pow((Zone[i][0] - currentX),2) + pow((Zone[i][1] - currentY),2));
			  if (Temp_dist < Smallest_dist){
				  Smallest_dist = Temp_dist;
				  start_case = i+1;
				  Temp_point[0] = Zone[i][0];
				  Temp_point[1] = Zone[i][1];
				  Temp_point[2] = Zone[i][2];
				  Temp_point[3] = Zone[i][3];
			  }
		  }
	  }

	  //If robot needs a straight line
	  switch (start_case){
	  	case From_A1:
	  		ROS_INFO("Robot is at A1 Zone");
			if ((abs(currentX - Zone[From_A1-1][0])>strange_dist)||(abs(currentY - Zone[From_A1-1][1])>strange_dist)){
				replan = true;
				ROS_INFO("Straight line will be created");
			}
			break;
	  	case From_B1:
	  		ROS_INFO("Robot is at B1 Zone");
			if ((abs(currentX - Zone[From_B1-1][0])>strange_dist)||(abs(currentY - Zone[From_B1-1][1])>strange_dist)){
				replan = true;
				ROS_INFO("Straight line will be created");
			}
			break;
	  	case From_C1:
	  		ROS_INFO("Robot is at C1 Zone");
			if ((abs(currentX - Zone[From_C1-1][0])>strange_dist)||(abs(currentY - Zone[From_C1-1][1])>strange_dist)){
				replan = true;
				ROS_INFO("Straight line will be created");
			}
			break;
	  	case From_A2:
	  		ROS_INFO("Robot is at A2 Zone");
			if ((abs(currentX - Zone[From_A2-1][0])>strange_dist)||(abs(currentY - Zone[From_A2-1][1])>strange_dist)){
				replan = true;
				ROS_INFO("Straight line will be created");
			}
			break;
	  	case From_B2:
	  		ROS_INFO("Robot is at B2 Zone");
			if ((abs(currentX - Zone[From_B2-1][0])>strange_dist)||(abs(currentY - Zone[From_B2-1][1])>strange_dist)){
				replan = true;
				ROS_INFO("Straight line will be created");
			}
			break;
	  	case From_C2:
	  		ROS_INFO("Robot is at C2 Zone");
			if ((abs(currentX - Zone[From_C2-1][0])>strange_dist)||(abs(currentY - Zone[From_C2-1][1])>strange_dist)){
				replan = true;
				ROS_INFO("Straight line will be created");
			}
			break;
	  	case From_Charge:
	  		ROS_INFO("Robot is at Charge Zone");
			if ((abs(currentX - Zone[From_Charge-1][0])>strange_dist)||(abs(currentY - Zone[From_Charge-1][1])>strange_dist)){
				replan = true;
				ROS_INFO("Straight line will be created");
			}
			break;
	  	default:
	  		ROS_INFO("Start is not valid");
			break;
	  }

	  /*
	  if (goal_case == To_Charge){
	  		rows_goal =  sizeof A2_Charge / sizeof A2_Charge[0];
			for (int i=0;i<rows_goal;i++){
				pose.pose.position.x = A2_Charge[i][0];
				pose.pose.position.y = A2_Charge[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = A2_Charge[i][2];
				pose.pose.orientation.w = A2_Charge[i][3];

				plan.push_back(pose);

				path.x = A2_Charge[i][0];
				path.y = A2_Charge[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
			replan = false;
			start_case = 0;
			goal_case = 0;
	  };
	  */
	  if (start_case == goal_case){
			replan = true;
			start_case = goal_case = 0;
		}
	  if (replan == true){
			float th = 0;
			float x_vec = 0.0;
			float y_vec = 0.0;

			th = atan2f(Temp_point[1]-currentY,Temp_point[0]-currentX);
			if (th>PI)
				th = th - 2*PI;
			else if (th<-PI)
				th = th + 2*PI;

			while (abs(currentX - Temp_point[0])>=0.1||abs(currentY - Temp_point[1])>=0.1){

	    		x_vec = 0.1*cos(th);
	    		y_vec = 0.1*sin(th);

	    		pose.pose.position.x = currentX + x_vec;
	    		pose.pose.position.y = currentY + y_vec;
	    		pose.pose.position.z = 0.0;

	    		pose.pose.orientation.x = 0.0;
	    		pose.pose.orientation.y = 0.0;
	    		pose.pose.orientation.z = sin(th/2);
	    		pose.pose.orientation.w = cos(th/2);

	    		plan.push_back(pose);

	    		path.x = currentX;
	    		path.y = currentY;
	    		//pub_plan.publish(path);

	    		pos_array.data.push_back((float)path.x);
	    		pos_array.data.push_back((float)path.y);

	    		currentX = currentX + x_vec;
	    		currentY = currentY + y_vec;
	    		}

	    		pose.pose.position.x = Temp_point[0];
	    		pose.pose.position.y = Temp_point[1];
	    		pose.pose.position.z = 0.0;
	    		pose.pose.orientation.x = 0.0;
	    		pose.pose.orientation.y = 0.0;
	    		pose.pose.orientation.z = Temp_point[2];
	    		pose.pose.orientation.w = Temp_point[3];
	    		plan.push_back(pose);
			replan = false;

			//if (start_case == goal_case){
			//	start_case = 0;
			//	goal_case = 0;
			//}
	  }

	  //Publish line
	  switch (start_case){
	  	case From_A1:
	  		rows_start =  sizeof A1_Gate / sizeof A1_Gate[0];
			for (int i=0;i<rows_start;i++){
				pose.pose.position.x = A1_Gate[i][0];
				pose.pose.position.y = A1_Gate[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = A1_Gate[i][2];
				pose.pose.orientation.w = A1_Gate[i][3];

				plan.push_back(pose);

				path.x = A1_Gate[i][0];
				path.y = A1_Gate[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  		break;
	  	case From_B1:
	  		rows_start =  sizeof B1_Gate / sizeof B1_Gate[0];
			for (int i=0;i<rows_start;i++){
				pose.pose.position.x = B1_Gate[i][0];
				pose.pose.position.y = B1_Gate[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = B1_Gate[i][2];
				pose.pose.orientation.w = B1_Gate[i][3];

				plan.push_back(pose);

				path.x = B1_Gate[i][0];
				path.y = B1_Gate[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  		break;
	  	case From_C1:
	  		rows_start =  sizeof C1_Gate / sizeof C1_Gate[0];
			for (int i=0;i<rows_start;i++){
				pose.pose.position.x = C1_Gate[i][0];
				pose.pose.position.y = C1_Gate[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = C1_Gate[i][2];
				pose.pose.orientation.w = C1_Gate[i][3];

				plan.push_back(pose);

				path.x = C1_Gate[i][0];
				path.y = C1_Gate[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  		break;
	  	case From_A2:
	  		rows_start =  sizeof A2_Gate / sizeof A2_Gate[0];
			for (int i=0;i<rows_start;i++){
				pose.pose.position.x = A2_Gate[i][0];
				pose.pose.position.y = A2_Gate[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = A2_Gate[i][2];
				pose.pose.orientation.w = A2_Gate[i][3];

				plan.push_back(pose);

				path.x = A2_Gate[i][0];
				path.y = A2_Gate[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  		break;
	  	case From_B2:
	  		rows_start =  sizeof B2_Gate / sizeof B2_Gate[0];
			for (int i=0;i<rows_start;i++){
				pose.pose.position.x = B2_Gate[i][0];
				pose.pose.position.y = B2_Gate[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = B2_Gate[i][2];
				pose.pose.orientation.w = B2_Gate[i][3];

				plan.push_back(pose);

				path.x = B2_Gate[i][0];
				path.y = B2_Gate[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  		break;
	  	case From_C2:
	  		rows_start =  sizeof C2_Gate / sizeof C2_Gate[0];
			for (int i=0;i<rows_start;i++){
				pose.pose.position.x = C2_Gate[i][0];
				pose.pose.position.y = C2_Gate[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = C2_Gate[i][2];
				pose.pose.orientation.w = C2_Gate[i][3];

				plan.push_back(pose);

				path.x = C2_Gate[i][0];
				path.y = C2_Gate[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  		break;
	  	case From_Charge:
	  		if (goal_case == To_A1){
	  			rows_start =  sizeof Charge_A1 / sizeof Charge_A1[0];
	  			for (int i=0;i<rows_start;i++){
	  				pose.pose.position.x = Charge_A1[i][0];
	  				pose.pose.position.y = Charge_A1[i][1];
	  				pose.pose.position.z = 0.0;
	  				pose.pose.orientation.x = 0.0;
	  				pose.pose.orientation.y = 0.0;
	  				pose.pose.orientation.z = Charge_A1[i][2];
	  				pose.pose.orientation.w = Charge_A1[i][3];
	  				plan.push_back(pose);
	  				path.x = Charge_A1[i][0];
	  				path.y = Charge_A1[i][1];
	  				pos_array.data.push_back((float)path.x);
	  				pos_array.data.push_back((float)path.y);
				}
	  		}
	  		else if (goal_case == To_B1){
	  			rows_start =  sizeof Charge_B1 / sizeof Charge_B1[0];
	  			for (int i=0;i<rows_start;i++){
	  				pose.pose.position.x = Charge_B1[i][0];
	  				pose.pose.position.y = Charge_B1[i][1];
	  				pose.pose.position.z = 0.0;
	  				pose.pose.orientation.x = 0.0;
	  				pose.pose.orientation.y = 0.0;
	  				pose.pose.orientation.z = Charge_B1[i][2];
	  				pose.pose.orientation.w = Charge_B1[i][3];
	  				plan.push_back(pose);
	  				path.x = Charge_B1[i][0];
	  				path.y = Charge_B1[i][1];
	  				pos_array.data.push_back((float)path.x);
	  				pos_array.data.push_back((float)path.y);
				}
	  		}
	  		else if (goal_case == To_C1){
	  			rows_start =  sizeof Charge_C1 / sizeof Charge_C1[0];
	  			for (int i=0;i<rows_start;i++){
	  				pose.pose.position.x = Charge_C1[i][0];
	  				pose.pose.position.y = Charge_C1[i][1];
	  				pose.pose.position.z = 0.0;
	  				pose.pose.orientation.x = 0.0;
	  				pose.pose.orientation.y = 0.0;
	  				pose.pose.orientation.z = Charge_C1[i][2];
	  				pose.pose.orientation.w = Charge_C1[i][3];
	  				plan.push_back(pose);
	  				path.x = Charge_C1[i][0];
	  				path.y = Charge_C1[i][1];
	  				pos_array.data.push_back((float)path.x);
	  				pos_array.data.push_back((float)path.y);
				}
	  		}
	  		goal_case = 0;
	  		break;
	  }

	  if (((start_case == From_A1)||(start_case == From_B1)||(start_case == From_C1))&&(goal_case != To_Charge)){
		  rows_mid =  sizeof One_Two / sizeof One_Two[0];
			for (int i=0;i<rows_mid;i++){
				pose.pose.position.x = One_Two[i][0];
				pose.pose.position.y = One_Two[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = One_Two[i][2];
				pose.pose.orientation.w = One_Two[i][3];

				plan.push_back(pose);

				path.x = One_Two[i][0];
				path.y = One_Two[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  }
	  else if (((start_case == From_A2)||(start_case == From_B2)||(start_case == From_C2))&&(goal_case != To_Charge)){
		  	rows_mid =  sizeof Two_One / sizeof Two_One[0];
			for (int i=0;i<rows_mid;i++){
				pose.pose.position.x = Two_One[i][0];
				pose.pose.position.y = Two_One[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = Two_One[i][2];
				pose.pose.orientation.w = Two_One[i][3];

				plan.push_back(pose);

				path.x = Two_One[i][0];
				path.y = Two_One[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  }
	  else if (((start_case == From_A2)||(start_case == From_B2)||(start_case == From_C2))&&(goal_case == To_Charge)){
		  	rows_mid =  sizeof Two_Charge / sizeof Two_Charge[0];
			for (int i=0;i<rows_mid;i++){
				pose.pose.position.x = Two_Charge[i][0];
				pose.pose.position.y = Two_Charge[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = Two_Charge[i][2];
				pose.pose.orientation.w = Two_Charge[i][3];

				plan.push_back(pose);

				path.x = Two_Charge[i][0];
				path.y = Two_Charge[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
			goal_case = 0;
	  }

	  switch (goal_case){
	  	case To_A1:
	  		rows_goal =  sizeof Gate_A1 / sizeof Gate_A1[0];
			for (int i=0;i<rows_goal;i++){
				pose.pose.position.x = Gate_A1[i][0];
				pose.pose.position.y = Gate_A1[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = Gate_A1[i][2];
				pose.pose.orientation.w = Gate_A1[i][3];

				plan.push_back(pose);

				path.x = Gate_A1[i][0];
				path.y = Gate_A1[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  		break;
	  	case To_B1:
	  		rows_goal =  sizeof Gate_B1 / sizeof Gate_B1[0];
			for (int i=0;i<rows_goal;i++){
				pose.pose.position.x = Gate_B1[i][0];
				pose.pose.position.y = Gate_B1[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = Gate_B1[i][2];
				pose.pose.orientation.w = Gate_B1[i][3];

				plan.push_back(pose);

				path.x = Gate_B1[i][0];
				path.y = Gate_B1[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  		break;
	  	case To_C1:
	  		rows_goal =  sizeof Gate_C1 / sizeof Gate_C1[0];
			for (int i=0;i<rows_goal;i++){
				pose.pose.position.x = Gate_C1[i][0];
				pose.pose.position.y = Gate_C1[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = Gate_C1[i][2];
				pose.pose.orientation.w = Gate_C1[i][3];

				plan.push_back(pose);

				path.x = Gate_C1[i][0];
				path.y = Gate_C1[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  		break;
	  	case To_A2:
	  		rows_goal =  sizeof Gate_A2 / sizeof Gate_A2[0];
			for (int i=0;i<rows_goal;i++){
				pose.pose.position.x = Gate_A2[i][0];
				pose.pose.position.y = Gate_A2[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = Gate_A2[i][2];
				pose.pose.orientation.w = Gate_A2[i][3];

				plan.push_back(pose);

				path.x = Gate_A2[i][0];
				path.y = Gate_A2[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  		break;
	  	case To_B2:
	  		rows_goal =  sizeof Gate_B2 / sizeof Gate_B2[0];
			for (int i=0;i<rows_goal;i++){
				pose.pose.position.x = Gate_B2[i][0];
				pose.pose.position.y = Gate_B2[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = Gate_B2[i][2];
				pose.pose.orientation.w = Gate_B2[i][3];

				plan.push_back(pose);

				path.x = Gate_B2[i][0];
				path.y = Gate_B2[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  		break;
	  	case To_C2:
	  		rows_goal =  sizeof Gate_C2 / sizeof Gate_C2[0];
			for (int i=0;i<rows_goal;i++){
				pose.pose.position.x = Gate_C2[i][0];
				pose.pose.position.y = Gate_C2[i][1];
				pose.pose.position.z = 0.0;

				pose.pose.orientation.x = 0.0;
				pose.pose.orientation.y = 0.0;
				pose.pose.orientation.z = Gate_C2[i][2];
				pose.pose.orientation.w = Gate_C2[i][3];

				plan.push_back(pose);

				path.x = Gate_C2[i][0];
				path.y = Gate_C2[i][1];
				//pub_plan.publish(path);
				pos_array.data.push_back((float)path.x);
				pos_array.data.push_back((float)path.y);
			}
	  		break;
	  	//default:
	  	//	ROS_INFO("Goal is not valid");
		//	break;
	  	}
	  	pub_plan_array.publish(pos_array);


	/*
	if ((abs(goal.pose.position.x - PutdownX)<=0.5)&&(abs(goal.pose.position.y - PutdownY)<=0.5)){
		//ROS_INFO("Go to Putdown Zone");
		int replan = 0;
		for (int i=0;i<113;i++){
			if ((abs(currentX - Pick_Release[i][0])<=0.3)&&(abs(currentY - Pick_Release[i][1])<=0.3))
				replan = 1;
		}

		if (replan == 0){
			float th = 0;
			float x_vec = 0.0;
			float y_vec = 0.0;

			th = atan2f(PickY-currentY,PickX-currentX);
			if (th>PI)
				th = th - 2*PI;
			else if (th<-PI)
				th = th + 2*PI;

			while (abs(currentX - PickX)>=0.3||abs(currentY - PickY)>=0.3){

	    		x_vec = 0.1*cos(th);
	    		y_vec = 0.1*sin(th);

	    		pose.pose.position.x = currentX + x_vec;
	    		pose.pose.position.y = currentY + y_vec;
	    		pose.pose.position.z = 0.0;

	    		pose.pose.orientation.x = 0.0;
	    		pose.pose.orientation.y = 0.0;
	    		pose.pose.orientation.z = sin(th/2);
	    		pose.pose.orientation.w = cos(th/2);

	    		plan.push_back(pose);

	    		path.x = currentX;
	    		path.y = currentY;
	    		//pub_plan.publish(path);

	    		pos_array.data.push_back((float)path.x);
	    		pos_array.data.push_back((float)path.y);

	    		currentX = currentX + x_vec;
	    		currentY = currentY + y_vec;
	    	}
		}

		for (int i=0;i<113;i++){

			pose.pose.position.x = Pick_Release[i][0];
			pose.pose.position.y = Pick_Release[i][1];
			pose.pose.position.z = 0.0;

			pose.pose.orientation.x = 0.0;
			pose.pose.orientation.y = 0.0;
			pose.pose.orientation.z = Pick_Release[i][2];
			pose.pose.orientation.w = Pick_Release[i][3];

			plan.push_back(pose);

			path.x = Pick_Release[i][0];
			path.y = Pick_Release[i][1];
			//pub_plan.publish(path);
			pos_array.data.push_back((float)path.x);
			pos_array.data.push_back((float)path.y);
		}
		pub_plan_array.publish(pos_array);
	}

	else if ((abs(goal.pose.position.x - PickX)<=0.5)&&(abs(goal.pose.position.y - PickY)<=0.5)){
			//ROS_INFO("Go to Pallet Zone");
			int replan = 0;
			for (int i=0;i<185;i++){
				if ((abs(currentX - Release_Pick[i][0])<=0.3)&&(abs(currentY - Release_Pick[i][1])<=0.3))
					replan = 1;
			}

			if (replan == 0){
				float th = 0;
				float x_vec = 0.0;
				float y_vec = 0.0;

				th = atan2f(PutdownY-currentY,PutdownX-currentX);
				if (th>PI)
					th = th - 2*PI;
				else if (th<-PI)
					th = th + 2*PI;

				while (abs(currentX - PutdownX)>=0.3||abs(currentY - PutdownY)>=0.3){
		    		x_vec = 0.1*cos(th);
		    		y_vec = 0.1*sin(th);

		    		pose.pose.position.x = currentX + x_vec;
		    		pose.pose.position.y = currentY + y_vec;
		    		pose.pose.position.z = 0.0;

		    		pose.pose.orientation.x = 0.0;
		    		pose.pose.orientation.y = 0.0;
		    		pose.pose.orientation.z = sin(th/2);
		    		pose.pose.orientation.w = cos(th/2);

		    		plan.push_back(pose);

		    		path.x = currentX;
		    		path.y = currentY;
		    		//pub_plan.publish(path);

		    		pos_array.data.push_back((float)path.x);
		    		pos_array.data.push_back((float)path.y);

		    		currentX = currentX + x_vec;
		    		currentY = currentY + y_vec;
		    	}
			}

		for (int i=0;i<185;i++){

			pose.pose.position.x = Release_Pick[i][0];
			pose.pose.position.y = Release_Pick[i][1];
			pose.pose.position.z = 0.0;

			pose.pose.orientation.x = 0.0;
			pose.pose.orientation.y = 0.0;
			pose.pose.orientation.z = Release_Pick[i][2];
			pose.pose.orientation.w = Release_Pick[i][3];

			plan.push_back(pose);

			path.x = Release_Pick[i][0];
			path.y = Release_Pick[i][1];
			//pub_plan.publish(path);

			pos_array.data.push_back((float)path.x);
			pos_array.data.push_back((float)path.y);
		}
		pub_plan_array.publish(pos_array);
	}
	*/

  }
  else
  {
    ROS_WARN("Not valid start or goal");
    cout<<"Got goal: "<<goalX_<<", "<<goalY_<<endl;
    cout<<"Got start: "<<currentX<<", "<<currentY<<endl;
    return false;
  }

}
void PP_PlannerROS::getCorrdinate(float& x, float& y)
{

  x = x - originX;
  y = y - originY;

}

int PP_PlannerROS::convertToCellIndex(float x, float y)
{

  int cellIndex;

  float newX = x / resolution;
  float newY = y / resolution;

  cellIndex = getCellIndex(newY, newX);

  return cellIndex;
}

void PP_PlannerROS::convertToCoordinate(int index, float& x, float& y)
{
  x = getCellColID(index) * resolution;
  y = getCellRowID(index) * resolution;
  x = x + originX;
  y = y + originY;
}

bool PP_PlannerROS::isCellInsideMap(float x, float y)
{
  bool valid = true;
  if (x > (width * resolution) || y > (height * resolution))
    valid = false;
  return valid;
}

void PP_PlannerROS::mapToWorld(double mx, double my, double& wx, double& wy){
   costmap_2d::Costmap2D* costmap = costmap_ros_->getCostmap();
    wx = costmap->getOriginX() + mx * resolution;
    wy = costmap->getOriginY() + my * resolution;
}

vector<int> PP_PlannerROS::PP_Planner(int startCell, int goalCell){

   vector<int> bestPath;


//float g_score [mapSize][2];
float g_score [mapSize];

for (uint i=0; i<mapSize; i++)
	g_score[i]=infinity;

   timespec time1, time2;
  /* take current time here */
   clock_gettime(CLOCK_PROCESS_CPUTIME_ID, &time1);

  bestPath=findPath(startCell, goalCell,  g_score);

   clock_gettime(CLOCK_PROCESS_CPUTIME_ID, &time2);

   cout<<"time to generate best global path by Relaxed A* = " << (diff(time1,time2).tv_sec)*1e3 + (diff(time1,time2).tv_nsec)*1e-6 << " microseconds" << endl;

   MyExcelFile <<"\t"<< (diff(time1,time2).tv_sec)*1e3 + (diff(time1,time2).tv_nsec)*1e-6 ;

  return bestPath;
}


/*******************************************************************************/
//Function Name: findPath
//Inputs: the map layout, the start and the goal Cells and a boolean to indicate if we will use break ties or not
//Output: the best path
//Description: it is used to generate the robot free path
/*********************************************************************************/
vector<int> PP_PlannerROS::findPath(int startCell, int goalCell, float g_score[])
{
	value++;
	vector<int> bestPath;
	vector<int> emptyPath;
	cells CP;

	multiset<cells> OPL;
	int currentCell;

	//calculate g_score and f_score of the start position
	g_score[startCell]=0;
	CP.currentCell=startCell;
	CP.fCost=g_score[startCell]+calculateHCost(startCell,goalCell);

	//add the start cell to the open list
	OPL.insert(CP);
	currentCell=startCell;

	//while the open list is not empty continuie the search or g_score(goalCell) is equal to infinity
	while (!OPL.empty()&& g_score[goalCell]==infinity)
	{
		//choose the cell that has the lowest cost fCost in the open set which is the begin of the multiset
		currentCell = OPL.begin()->currentCell;
		//remove the currentCell from the openList
		OPL.erase(OPL.begin());
		//search the neighbors of the current Cell
		vector <int> neighborCells;
		neighborCells=findFreeNeighborCell(currentCell);
		for(uint i=0; i<neighborCells.size(); i++) //for each neighbor v of current cell
		{
			// if the g_score of the neighbor is equal to INF: unvisited cell
			if(g_score[neighborCells[i]]==infinity)
			{
				g_score[neighborCells[i]]=g_score[currentCell]+getMoveCost(currentCell,neighborCells[i]);
				addNeighborCellToOpenList(OPL, neighborCells[i], goalCell, g_score);
			}//end if
		}//end for
	}//end while

	if(g_score[goalCell]!=infinity)  // if g_score(goalcell)==INF : construct path
	{
		bestPath=constructPath(startCell, goalCell, g_score);
		return   bestPath;
	}
	else
	{
		cout << "Failure to find a path !" << endl;
		return emptyPath;
	}
}

/*******************************************************************************/
//Function Name: constructPath
//Inputs: the start and the goal Cells
//Output: the best path
//Description: it is used to construct the robot path
/*********************************************************************************/
vector<int> PP_PlannerROS::constructPath(int startCell, int goalCell,float g_score[])
{
	vector<int> bestPath;
	vector<int> path;

	path.insert(path.begin()+bestPath.size(), goalCell);
	int currentCell=goalCell;

	while(currentCell!=startCell)
	{
		vector <int> neighborCells;
		neighborCells=findFreeNeighborCell(currentCell);

		vector <float> gScoresNeighbors;
		for(uint i=0; i<neighborCells.size(); i++)
			gScoresNeighbors.push_back(g_score[neighborCells[i]]);

		int posMinGScore=distance(gScoresNeighbors.begin(), min_element(gScoresNeighbors.begin(), gScoresNeighbors.end()));
		currentCell=neighborCells[posMinGScore];

		//insert the neighbor in the path
		path.insert(path.begin()+path.size(), currentCell);
	}
	for(uint i=0; i<path.size(); i++)
		bestPath.insert(bestPath.begin()+bestPath.size(), path[path.size()-(i+1)]);

	return bestPath;
}

/*******************************************************************************/
//Function Name: calculateHCost
//Inputs:the cellID and the goalCell
//Output: the distance between the current cell and the goal cell
//Description: it is used to calculate the hCost
/*********************************************************************************/
/*
float RAstarPlannerROS::calculateHCost(int cellID, int goalCell)
{
  int x1=getCellRowID(goalCell);
  int y1=getCellColID(goalCell);
  int x2=getCellRowID(cellID);
  int y2=getCellColID(cellID);

  //if(getNeighborNumber()==4)
    //The diagonal shortcut distance between two grid points (x1,y1) and (x2,y2) is:
    //  return min(abs(x1-x2),abs(y1-y2))*sqrt(2) + max(abs(x1-x2),abs(y1-y2))-min(abs(x1-x2),abs(y1-y2));

  //else
    //manhatten distance for 8 neighbor
    return abs(x1-x2)+abs(y1-y2);
}
*/
/*******************************************************************************/
//Function Name: addNeighborCellToOpenList
//Inputs: the open list, the neighbors Cell, the g_score matrix, the goal cell
//Output:
//Description: it is used to add a neighbor Cell to the open list
/*********************************************************************************/
void PP_PlannerROS::addNeighborCellToOpenList(multiset<cells> & OPL, int neighborCell, int goalCell, float g_score[])
{
	cells CP;
	CP.currentCell=neighborCell; //insert the neighbor cell
	CP.fCost=g_score[neighborCell]+calculateHCost(neighborCell,goalCell);
	OPL.insert(CP);
	//multiset<cells>::iterator it = OPL.lower_bound(CP);
	//multiset<cells>::iterator it = OPL.upper_bound(CP);
	//OPL.insert( it, CP  );
}

  /*******************************************************************************
 * Function Name: findFreeNeighborCell
 * Inputs: the row and columun of the current Cell
 * Output: a vector of free neighbor cells of the current cell
 * Description:it is used to find the free neighbors Cells of a the current Cell in the grid
 * Check Status: Checked by Anis, Imen and Sahar
*********************************************************************************/

vector <int> PP_PlannerROS::findFreeNeighborCell (int CellID){

  int rowID=getCellRowID(CellID);
  int colID=getCellColID(CellID);
  int neighborIndex;
  vector <int>  freeNeighborCells;

  for (int i=-1;i<=1;i++)
    for (int j=-1; j<=1;j++){
      //check whether the index is valid
     if ((rowID+i>=0)&&(rowID+i<height)&&(colID+j>=0)&&(colID+j<width)&& (!(i==0 && j==0))){
	neighborIndex = getCellIndex(rowID+i,colID+j);
        if(isFree(neighborIndex) )
	    freeNeighborCells.push_back(neighborIndex);
	}
    }
    return  freeNeighborCells;

}

/*******************************************************************************/
//Function Name: isStartAndGoalCellsValid
//Inputs: the start and Goal cells
//Output: true if the start and the goal cells are valid
//Description: check if the start and goal cells are valid
/*********************************************************************************/
bool PP_PlannerROS::isStartAndGoalCellsValid(int startCell,int goalCell)
{
 bool isvalid=true;
 bool isFreeStartCell=isFree(startCell);
 bool isFreeGoalCell=isFree(goalCell);
    if (startCell==goalCell)
    {
    cout << "The Start and the Goal cells are the same..." << endl;
    isvalid = false;
    }
   else
   {
      if (!isFreeStartCell && !isFreeGoalCell)
      {
	cout << "The start and the goal cells are obstacle positions..." << endl;
        isvalid = false;
      }
      else
      {
	if (!isFreeStartCell)
	{
	  cout << "The start is an obstacle..." << endl;
	  isvalid = false;
	}
	else
	{
	    if(!isFreeGoalCell)
	    {
	      cout << "The goal cell is an obstacle..." << endl;
	      isvalid = false;
	    }
	    else
	    {
	      if (findFreeNeighborCell(goalCell).size()==0)
	      {
		cout << "The goal cell is encountred by obstacles... "<< endl;
		isvalid = false;
	      }
	      else
	      {
		if(findFreeNeighborCell(startCell).size()==0)
		{
		  cout << "The start cell is encountred by obstacles... "<< endl;
		  isvalid = false;
		}
	      }
	    }
	}
      }
  }
 return isvalid;
}


 float  PP_PlannerROS::getMoveCost(int i1, int j1, int i2, int j2){
   float moveCost=INFINIT_COST;//start cost with maximum value. Change it to real cost of cells are connected
   //if cell2(i2,j2) exists in the diagonal of cell1(i1,j1)
   if((j2==j1+1 && i2==i1+1)||(i2==i1-1 && j2==j1+1) ||(i2==i1-1 && j2==j1-1)||(j2==j1-1 && i2==i1+1)){
     //moveCost = DIAGONAL_MOVE_COST;
     moveCost = 1.4;
   }
    //if cell 2(i2,j2) exists in the horizontal or vertical line with cell1(i1,j1)
   else{
     if ((j2==j1 && i2==i1-1)||(i2==i1 && j2==j1-1)||(i2==i1+1 && j2==j1) ||(i1==i2 && j2==j1+1)){
       //moveCost = MOVE_COST;
       moveCost = 1;
     }
   }
   return moveCost;
 }

  float  PP_PlannerROS::getMoveCost(int CellID1, int CellID2){
   int i1=0,i2=0,j1=0,j2=0;

   i1=getCellRowID(CellID1);
   j1=getCellColID(CellID1);
   i2=getCellRowID(CellID2);
   j2=getCellColID(CellID2);

    return getMoveCost(i1, j1, i2, j2);
 }


 //verify if the cell(i,j) is free
 bool  PP_PlannerROS::isFree(int i, int j){
   int CellID = getCellIndex(i, j);
 return OGM[CellID];

 }

  //verify if the cell(i,j) is free
 bool  PP_PlannerROS::isFree(int CellID){
 return OGM[CellID];
 }
};

bool operator<(cells const &c1, cells const &c2) { return c1.fCost < c2.fCost; }
